{
    "category": "Event",
    "deprecated": false,
    "description": "This extension provides interface to the libeio library written by Marc Lehmann\n    <libeio at schmorp dot de>(see http://software.schmorp.de/pkg/libeio.html).\n\n    Libeio is a an asynchronous I/O library. Features basically include\n    asynchronous versions of POSIX API(read, write, open, close, stat, unlink,\n    fdatasync, mknod, readdir etc.); sendfile (native on Solaris, Linux, HP-UX,\n    FreeBSD); readahead. libeio itself emulates the system calls, if they are not\n    available on specific(UNIX-like) platform.\n\n    Currently this extension supports GNU/Linux and BSD platforms only. But you can\n    try it on any UNIX OS.",
    "latestReleaseDate": "2023-05-31T15:01:36+00:00",
    "latestVersion": "3.1.0RC1",
    "license": "php",
    "name": "eio",
    "php8Mentioned": true,
    "releases": {
        "3.1.0RC1": {
            "version": "3.1.0RC1",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2023-05-31T15:01:36+00:00",
            "releaseNotes": "Updated libeio to the latest version.\nFixed internal scripts.",
            "get": "https://pecl.php.net/get/eio-3.1.0RC1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "3.0.0RC4": {
            "version": "3.0.0RC4",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2021-09-21T09:14:32+00:00",
            "releaseNotes": "Fixed deprecated calls on PHP 8.1 (thanks to Remi Collet).",
            "get": "https://pecl.php.net/get/eio-3.0.0RC4",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "3.0.0RC3": {
            "version": "3.0.0RC3",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2021-09-20T17:01:32+00:00",
            "releaseNotes": "Fixed issue #13: libeio sometimes didn't auto-initialize.",
            "get": "https://pecl.php.net/get/eio-3.0.0RC3",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "3.0.0RC2": {
            "version": "3.0.0RC2",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2021-04-17T23:56:32+00:00",
            "releaseNotes": "Fixed: the PECL package was broken for PHP 8",
            "get": "https://pecl.php.net/get/eio-3.0.0RC2",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "3.0.0RC1": {
            "version": "3.0.0RC1",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2021-04-17T23:34:36+00:00",
            "releaseNotes": "Ported to PHP 8",
            "get": "https://pecl.php.net/get/eio-3.0.0RC1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.4": {
            "version": "2.0.4",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2018-07-30T07:13:23+00:00",
            "releaseNotes": "Add check for HAVE_STRUCT_STAT_ST_BLKSIZE and HAVE_STRUCT_STAT_ST_RDEV (thanks to petk)",
            "get": "http://pecl.php.net/get/eio-2.0.4",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.3": {
            "version": "2.0.3",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2018-06-26T08:31:03+00:00",
            "releaseNotes": "Fixed build error in PHP 7.3.\nRemoved ASAN from debug configuration.",
            "get": "http://pecl.php.net/get/eio-2.0.3",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.2": {
            "version": "2.0.2",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2017-04-17T10:43:48+00:00",
            "releaseNotes": "Fixed build error due to undefined O_FSYNC in musl libc",
            "get": "http://pecl.php.net/get/eio-2.0.2",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.1": {
            "version": "2.0.1",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2016-07-24T17:03:12+00:00",
            "releaseNotes": "Fixed #7: [PHP7] Segfault after shutdown",
            "get": "http://pecl.php.net/get/eio-2.0.1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0": {
            "version": "2.0.0",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2016-06-08T14:24:45+00:00",
            "releaseNotes": "Fixed #6: PHP 7.1 build failed due to removed zend_fcall_info.symbol_table",
            "get": "http://pecl.php.net/get/eio-2.0.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0RC3": {
            "version": "2.0.0RC3",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2016-03-23T12:04:37+00:00",
            "releaseNotes": "Fixed #4: linker issue on aarch64",
            "get": "http://pecl.php.net/get/eio-2.0.0RC3",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0RC2": {
            "version": "2.0.0RC2",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2016-03-04T03:40:47+00:00",
            "releaseNotes": "- Fix: removed extra memory allocations\n- PHP7: eio_custom now throws Exception in ZTS builds, because Zend API is inaccessible from a custom thread in ZTS PHP7 builds\n(there is a lack of Zend API to access TSRM thread-local data from a user thread). Some extensions(particularly, pthreads)\ninvent their own(rather hacky) ways to overcome the problem. However, IMHO, this should be implemented within Zend API itself.",
            "get": "http://pecl.php.net/get/eio-2.0.0RC2",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0RC1": {
            "version": "2.0.0RC1",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2015-11-19T17:22:44+00:00",
            "releaseNotes": "PHP 7 support\nFix: uid/gid validation in eio_fchown\nFix: compilation issue on OS X 10.11",
            "get": "http://pecl.php.net/get/eio-2.0.0RC1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.6": {
            "version": "1.2.6",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2015-09-28T06:08:40+00:00",
            "releaseNotes": "Fix: uid/gid validation in eio_fchown\nFix: compilation issue on OS X 10.11",
            "get": "http://pecl.php.net/get/eio-1.2.6",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.5": {
            "version": "1.2.5",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2014-03-27T02:57:00+00:00",
            "releaseNotes": "Fix: Bitbucket issue #2: Static build fails\nFix: build failed when EVENTFD was not available",
            "get": "http://pecl.php.net/get/eio-1.2.5",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.4": {
            "version": "1.2.4",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2014-03-15T02:20:50+00:00",
            "releaseNotes": "Fix: Bitbucket issue #1: eio_open fails when file is owned by root\nFix: LICENSE role in package.xml (Remi)",
            "get": "http://pecl.php.net/get/eio-1.2.4",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.3": {
            "version": "1.2.3",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2013-07-19T04:15:37+00:00",
            "releaseNotes": "Fix: bug #65293 where eio functions failed to process file descriptor equal to 0",
            "get": "http://pecl.php.net/get/eio-1.2.3",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.1": {
            "version": "1.2.1",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2013-02-20T06:10:05+00:00",
            "releaseNotes": "Fix: build failed without sockets extension\nFix: eio_write failed when buffer length was lesser than size + offset",
            "get": "http://pecl.php.net/get/eio-1.2.1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.0": {
            "version": "1.2.0",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2012-07-30T15:14:58+00:00",
            "releaseNotes": "Add: BSD support\nChange: internal event notification uses pipe() when eventfd() is not available.\nDel: some redundant code\nFix: use libeio's EIO_FALLOC_FL_KEEP_SIZE instead of the system constant",
            "get": "http://pecl.php.net/get/eio-1.2.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.1.0": {
            "version": "1.1.0",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2012-07-08T07:09:09+00:00",
            "releaseNotes": "Change: eio_init() deprecated. Will be removed in future. We use pthread_atfork() to re-init eio after a fork\nAdd: phpt test for the fork support\nFix: tsrm_ls is not initialized in php_eio_init()\nFix: EFD_NONBLOCK and EFD_CLOEXEC used despite the flags were not available until kernel 2.6.7. For the old kernels we call fcntl.\nRefact: set FD_CLOEXEC flag for file descriptor opened with eio_open()\nRefact: no need to copy zval when passing request resource to eio_grp_*()\nFix: eio_grp_*() didn't initialize eio automatically",
            "get": "http://pecl.php.net/get/eio-1.1.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.0.0": {
            "version": "1.0.0",
            "state": "stable",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2012-07-01T13:43:50+00:00",
            "releaseNotes": "Fix: eio_write() wrote garbage when 'str' arg passed by ref in a nested call with 'use' keyword\nFix: eio_write() wrote garbage when 'str' arg passed by value\nAdd: eio_init(). You must call eio_init() before using Eio in a forked child process.\nChange: Cut 'st_' prefix in result of eio_*stat for the sake of simplicity and better 'compatability' with stat()\nChange: Cut 'f_' prefix in result of eio_*statvfs\nAdd: eio_get_last_error()\nAdd: eio_req resource argument as the third optional callback argument\nAdd: phpt tests for the changes since 0.5.0b\nRemoved: warnings having no much sense even in debug mode\nRefact: no separation for callbacks",
            "get": "http://pecl.php.net/get/eio-1.0.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "0.5.0": {
            "version": "0.5.0",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2012-06-24T06:09:13+00:00",
            "releaseNotes": "Refact: libeio upgraded\nFix: bug #62392 where eio_*stat functions didn't return st_size\nFix: package.xml referenced to some nonexistent files\nFix: garbage in result arg of the callbacks in case of error\nChange: warn about failed op in cb only when compiled with debug support\nAdd: test for stat on nonexistent files\nAdd: sockets support(eio_sendfile, eio_readahead etc.), enabled by default\nAdd: eio_seek function\nChange: numeric fd arguments are now mixed(stream, Socket, or number)",
            "get": "http://pecl.php.net/get/eio-0.5.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "0.4.0": {
            "version": "0.4.0",
            "state": "beta",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2012-01-08T04:29:55+00:00",
            "releaseNotes": "Change: libeio is now embedded, no need to install it separately\nChange: functions call info and call info cache used instead of zvals\nFix: segmentation fault on 32-bit platforms with the default 4-bit LFS",
            "get": "http://pecl.php.net/get/eio-0.4.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "0.3.0": {
            "version": "0.3.0",
            "state": "alpha",
            "license": "php",
            "releasedBy": "osmanov",
            "releaseDate": "2011-10-27T16:00:37+00:00",
            "releaseNotes": "Change: mutex switch that used in communications with libeio replaced with\neventfd; the same descriptor exported to userspace to bind with existing\nevent loops\nAdd: eio_get_eventfd function to get eventfd descriptor\nAdd: header checks in configuration \nChange: libeio initialization moved to the MINIT phase, but unfinished\nrequests are still handled in the RSHUTDOWN phase\nChange: simplified libeio callbacks",
            "get": "http://pecl.php.net/get/eio-0.3.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "0.2.0": {
            "version": "0.2.0",
            "state": "alpha",
            "license": "PHP",
            "releasedBy": "osmanov",
            "releaseDate": "2011-10-23T14:42:25+00:00",
            "releaseNotes": "Fix: heavy bulk requests damaged event loop causing much CPU consumption\nFix: in a threaded SAPI libeio in a single process might initialize mutex multiple times\nChange: switch from semaphore to mutex\nChange: dropped --with-eio-shm* configuration options",
            "get": "http://pecl.php.net/get/eio-0.2.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "0.1.1": {
            "version": "0.1.1",
            "state": "alpha",
            "license": "PHP",
            "releasedBy": "osmanov",
            "releaseDate": "2011-10-22T04:06:59+00:00",
            "releaseNotes": "Fix: eio_poll was out of sync with the IPC\nFix: pathnames in tests\nChange: dropped preprocessor checks on non-UNIX platforms, i.e. no plans to\nsupport non-UNIX",
            "get": "http://pecl.php.net/get/eio-0.1.1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "0.1.0": {
            "version": "0.1.0",
            "state": "alpha",
            "license": "PHP",
            "releasedBy": "osmanov",
            "releaseDate": "2011-10-19T11:18:12+00:00",
            "releaseNotes": "Change: refactored some tests\nAdd: request types have readable values in error messages\nAdd: errno replaced with the meaningful string in error messages\nFix: eio_chown denied uid -1 value\nFix: message about required libeio",
            "get": "http://pecl.php.net/get/eio-0.1.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "0.0.1": {
            "version": "0.0.1",
            "state": "alpha",
            "license": "PHP",
            "releasedBy": "osmanov",
            "releaseDate": "2011-10-13T03:54:17+00:00",
            "releaseNotes": "Change: Shared memory permissions are set to 0660 by default \nChange: Removed redundant code and comments\nAdd: Tests: eio_read_basic.phpt, eio_stat_basic.phpt\nFix: the package XML\nFix: docs",
            "get": "http://pecl.php.net/get/eio-0.0.1",
            "SPDX-License-Identifier": "PHP-3.01"
        }
    },
    "summary": "Provides interface to the libeio library",
    "SPDX-License-Identifier": "PHP-3.01"
}