{
    "category": "PHP",
    "deprecated": false,
    "description": "php-ast exports the AST internally used by PHP 7.\n     php-ast is significantly faster than PHP-Parser, because the AST construction is implemented in C.\n     However, php-ast may only parse code that is syntactically valid on the version of PHP it runs on.",
    "latestReleaseDate": "2022-08-09T21:45:05+00:00",
    "latestVersion": "1.1.0",
    "license": "BSD-3-Clause",
    "name": "ast",
    "php8Mentioned": true,
    "releases": {
        "1.1.0": {
            "version": "1.1.0",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2022-08-09T21:45:05+00:00",
            "releaseNotes": "- Change documentation files to properly namespace attributes as `#[\\AllowDynamicProperties]`. The reflection attributes are already correct.\n- Deprecated AST versions 50 and 60.\n- Drop support for php <= 7.1\n- Fix test failures seen in php 8.2.0beta2 due to change to var_export's output format.\n- Add support for php 8.2 readonly classes. Add `ast\\flags\\CLASS_READONLY` constant.\n- Add support for php 8.2 `true` type. Add `ast\\flags\\TYPE_TRUE` constant.\n- Fix bug in php 8.2 where ZEND_AST_ARROW_FUNC output did not include the stub `AST_RETURN` node that was included in php 8.1 and below.",
            "get": "https://pecl.php.net/get/ast-1.1.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.16": {
            "version": "1.0.16",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2021-11-27T20:11:49+00:00",
            "releaseNotes": "- Optimize instantiating properties of ast\\Node and ast\\Metadata.\n- Document that ast\\Node implements `#[AllowDynamicProperties]` in php 8.2",
            "get": "https://pecl.php.net/get/ast-1.0.16",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.15": {
            "version": "1.0.15",
            "state": "devel",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2021-11-27T17:12:22+00:00",
            "releaseNotes": "- Allow ast\\Node to have dynamic properties without emitting a notice in PHP 8.2.",
            "get": "https://pecl.php.net/get/ast-1.0.15",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.14": {
            "version": "1.0.14",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2021-07-24T14:56:40+00:00",
            "releaseNotes": "- Support php 8.1 readonly properties with the flag 'MODIFIER_READONLY'\n- Support php 8.1 first-class callable syntax, add the node kind 'AST_CALLABLE_CONVERT'\n- Change the current AST version from 80 to the new version 90. AST version 85 is no longer experimental.",
            "get": "https://pecl.php.net/get/ast-1.0.14",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.13": {
            "version": "1.0.13",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2021-07-08T15:40:05+00:00",
            "releaseNotes": "- Indicate in metadata that 'AST_CLASS_CONST_GROUP' and 'AST_CLASS_CONST_DECL' can have MODIFIER_FINAL\n  (and any modifier a class element can have, to reflect what the parser can actually parse)\n- Support php 8.1 intersection types, add node kind 'AST_TYPE_INTERSECTION'",
            "get": "https://pecl.php.net/get/ast-1.0.13",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.12": {
            "version": "1.0.12",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2021-05-16T15:01:29+00:00",
            "releaseNotes": "- Support parsing 'docComment' on php 8.1 enums",
            "get": "https://pecl.php.net/get/ast-1.0.12",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.11": {
            "version": "1.0.11",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2021-04-20T14:07:34+00:00",
            "releaseNotes": "- Add the experimental AST version 85.\n- Support php 8.1 enums, add 'type' (for enum type) to AST_CLASS nodes in AST version 85+.\n- Support php 8.1 'never' return type.",
            "get": "https://pecl.php.net/get/ast-1.0.11",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.10": {
            "version": "1.0.10",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2020-09-12T21:12:50+00:00",
            "releaseNotes": "- Support attributes syntax change (`#[...]`) in php 8.0.0RC1.\n- Change the current AST version from 70 to 80. AST version 80 is no longer experimental.\n- Add `ReflectionParameter` defaults for `ast\\parse_code` and `ast\\get_supported_versions` in php 8.\n- Add parameter types and return types to reflection for various global functions.\n  php-ast was already throwing a `TypeError` when invalid parameter types were received.\n- Always throw instead of warning when invalid parameters are passed to the ast\\Node constructor.",
            "get": "https://pecl.php.net/get/ast-1.0.10",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.9": {
            "version": "1.0.9",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2020-09-04T02:12:35+00:00",
            "releaseNotes": "- Support API change in php 8.0.0beta3.",
            "get": "https://pecl.php.net/get/ast-1.0.9",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.8": {
            "version": "1.0.8",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2020-08-05T13:59:27+00:00",
            "releaseNotes": "- Recommend using the new constant `ast\\flags\\PARAM_MODIFIER_*` when checking if parameters use constructor property promotion.\n  The values of `ast\\flags\\MODIFIER_*` and `ast\\flags\\PARAM_VARIADIC` had some overlap in some php 7 versions.\n  The new constants will have the same values as `ast\\flags\\MODIFIER_*` in PHP 8.0+, but different values in PHP 7\n  (and these flags will never be set in php 7).\n- Support PHP 8.0's named arguments.\n- Support PHP 8.0's nullsafe operator (`?->`).",
            "get": "https://pecl.php.net/get/ast-1.0.8",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.7": {
            "version": "1.0.7",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2020-07-11T20:51:21+00:00",
            "releaseNotes": "- Add the experimental AST version 80\n- In AST version 80, support returning `mixed` types as an `AST_TYPE` with type `TYPE_MIXED` instead of an `AST_NAME`.\n- In AST version 80, support PHP 8.0 attributes for declarations.\n- Support PHP 8.0's Match expressions.\n- Support PHP 8.0 constructor property promotion, and allow indicating visibility on AST nodes.\n  Note that `MODIFIER_PUBLIC` and `ast\\AST_PARAM` modifiers had overlap in php 7.4,\n  so the `MODIFIER_*` modifiers are only included in the provided metadata for php 8.0+",
            "get": "https://pecl.php.net/get/ast-1.0.7",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.6": {
            "version": "1.0.6",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2020-02-22T18:01:32+00:00",
            "releaseNotes": "- Support TYPE_STATIC for the php 8.0 static return type.",
            "get": "https://pecl.php.net/get/ast-1.0.6",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.5": {
            "version": "1.0.5",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2019-11-27T14:00:48+00:00",
            "releaseNotes": "- Add ast\\flags\\TYPE_FALSE to support PHP 8.0 Union Types.",
            "get": "https://pecl.php.net/get/ast-1.0.5",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.4": {
            "version": "1.0.4",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "tandre",
            "releaseDate": "2019-11-11T17:50:42+00:00",
            "releaseNotes": "- Add AST_TYPE_UNION to support PHP 8.0 Union Types.",
            "get": "https://pecl.php.net/get/ast-1.0.4",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.3": {
            "version": "1.0.3",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "nikic",
            "releaseDate": "2019-07-28T08:45:38+00:00",
            "releaseNotes": "- Fix build error in php 7.4.0alpha3.\n- Add `DIM_ALTERNATIVE_SYNTAX` as a flag of `AST_DIM` for `$x{'offset'}` (for php 7.4+)\n- Add `PARENTHESIZED_CONDITIONAL` as a flag of `AST_CONDITIONAL` for `($a ? $b : $c)` (for php 7.4+)\n- Bugfix: Make `ast\\kind_uses_flags(ast\\AST_ARROW_FUNC)` true in php 7.3 and lower.",
            "get": "https://pecl.php.net/get/ast-1.0.3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.2": {
            "version": "1.0.2",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "nikic",
            "releaseDate": "2019-06-30T15:11:57+00:00",
            "releaseNotes": "- Fix compatibility with (currently) PHP 7.4 and PHP 8.0.\n- Support AST_ARROW_FUNC for PHP 7.4.\n- Make $version a required parameter for `ast\\parse_*`. Previously, the absence would throw a LogicException.\n- Make AST version 70 the current version.",
            "get": "https://pecl.php.net/get/ast-1.0.2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.1": {
            "version": "1.0.1",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "nikic",
            "releaseDate": "2019-02-11T09:31:30+00:00",
            "releaseNotes": "- Fix compatibility with (currenty) PHP 7.4 and PHP 8.0.\n- Support BINARY_COALESCE as a flag of AST_ASSIGN_OP for the `??=` operator added in PHP 7.4.\n- Add AST version 70 (experimental):\n- Version 70 adds AST_PROP_GROUP with type information for property groups.\n- Version 70 adds AST_CLASS_NAME for `Foo::class`. Previously this used AST_CLASS_CONST",
            "get": "https://pecl.php.net/get/ast-1.0.1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "1.0.0": {
            "version": "1.0.0",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "nikic",
            "releaseDate": "2018-10-21T21:34:36+00:00",
            "releaseNotes": "This release is the same as version 0.1.7 with obsolete and deprecated functionality removed.\n\n- Removed AST versions prior to version 50.\n- Removed ast\\Node\\Decl class, which is no longer used.\n- Removed AST kinds AST_AND, AST_COALESCE, AST_GREATER, AST_GREATER_EQUAL, AST_OR, AST_SILENCE,\n  AST_UNARY_MINUS, and AST_UNARY_PLUS, which are no longer used.\n- Removed ASSIGN_* AST flags, which are no longer used.",
            "get": "http://pecl.php.net/get/ast-1.0.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "0.1.7": {
            "version": "0.1.7",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "nikic",
            "releaseDate": "2018-10-06T19:28:05+00:00",
            "releaseNotes": "- Added AST version 60 with the following changes:\n  - `AST_FUNC_DECL` and `AST_METHOD` no longer generate a `uses` child. Previously this child was\n    always `null`.\n  - `AST_FUNC_CONST_ELEM` now always has a `docComment` child. Previously it was absent on PHP 7.0.\n    On PHP 7.0 the value is always `null`.\n- Added `ARRAY_ELEM_REF` flag, which is used by `AST_ARRAY_ELEM` for by-reference array elements\n  and (since PHP 7.3) for by-reference destructuring. Previously this flag was represented simply\n  by the value `1`.\n- Deprecated AST versions 40 and 45.\n- Fix build against PHP 7.4-dev.",
            "get": "http://pecl.php.net/get/ast-0.1.7",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "0.1.6": {
            "version": "0.1.6",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "nikic",
            "releaseDate": "2017-10-08T16:23:20+00:00",
            "releaseNotes": "- Added ast\\get_metadata() function, which returns an array of ast\\Metadata objects, one for each\n  AST kind. The metadata contains information such as the supported flags for the kind.\n- Added ast\\get_supported_versions() function, which provides an array of currently supported AST\n  versions.",
            "get": "http://pecl.php.net/get/ast-0.1.6",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "0.1.5": {
            "version": "0.1.5",
            "state": "stable",
            "license": "BSD-3-Clause",
            "releasedBy": "nikic",
            "releaseDate": "2017-07-29T15:56:45+00:00",
            "releaseNotes": "- Fix issue #51: Make nullable array/callable have a flag of 0 in inner element, in version 40.\n- Added a constructor for the ast\\Node class.\n- Added ast\\flags\\FUNC_GENERATOR constant, which is used since PHP 7.1.\n- Added ast\\flags\\FUNC_RETURNS_REF constant, intended to supersede ast\\flags\\RETURNS_REF.\n- Added ast\\flags\\CLOSURE_USE_REF constant, used by AST_CLOSURE_VAR nodes. Previously \"1\" was used.\n- Added version 45 with the following changes (PHP 7.2 support):\n  - An `object` type annotation now returns an `AST_TYPE` with `TYPE_OBJECT` flag, rather than\n    treating `object` as a class name.\n- Added version 50 with the following changes:\n  - `ast\\Node\\Decl` nodes are no longer generated. AST kinds `AST_FUNCTION`, `AST_METHOD`,\n    `AST_CLOSURE` and `AST_CLASS` now also use the normal `ast\\Node` class. The `name` and\n    `docComment` properties are now represented as children. The `endLineno` is still represented as\n    an (undeclared) property.\n  - An integer `__declId` has been added to declaration nodes of kind `AST_FUNCTION`, `AST_METHOD`,\n    `AST_CLOSURE` and `AST_CLASS`. The `__declId` uniquely identifies a declaration within the\n\tparsed code and will remain the same if the code is parsed again. This is useful to distinguish\n\tclosures declared on the same line, or multiple conditional declarations using the same name.\n\tThe ID is not unique across different codes/files.\n  - `\\ast\\parse_file` will now consistently return an empty statement list (similar to\n    `\\ast\\parse_code`) if it is was passed a zero-byte file. Previously, it would return `null`.",
            "get": "http://pecl.php.net/get/ast-0.1.5",
            "SPDX-License-Identifier": "BSD-3-Clause"
        }
    },
    "summary": "Extension exposing PHP 7 abstract syntax tree",
    "SPDX-License-Identifier": "BSD-3-Clause"
}