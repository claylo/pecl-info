{
    "category": "PHP",
    "deprecated": false,
    "description": "This is the extension version of PEAR's PHP_Archive package. Support for\nzlib, bz2 and crc32 is achieved without any dependency other than the external\nzlib or bz2 extension.\n\n.phar files can be read using the phar stream, or with the Phar class.  If the SPL extension\nis available, a Phar object can be used as an array to iterate over a phar's contents\nor to read files directly from the phar.\n\nPhar supports tar and zip file formats as well as the native phar file format, and can also be\nused to create data-only tar and zip archives with the PharData class, even if\nwrite access is disabled by the phar.readonly ini variable.\n\nExecutable phar archives can be created using the streams API or with the Phar class, if\nthe phar.readonly ini variable is set to false.\n\nFull support for MD5 and SHA1 signatures is possible. Signatures can be required \nif the ini variable phar.require_hash is set to true. When PECL extension hash is\navailable then SHA-256 and SHA-512 signatures are supported as well.\n\nPhar is APC-compatible, the latest APC will cache files within a phar archive, resulting in\na 6x speedup measured running phpMyAdmin as a phar archive.",
    "latestReleaseDate": "2009-07-29T12:30:41+00:00",
    "latestVersion": "2.0.0",
    "license": "PHP License",
    "name": "phar",
    "summary": "allows running of complete applications out of .phar files (like Java .jar files)",
    "php8Mentioned": false,
    "releases": {
        "2.0.0": {
            "version": "2.0.0",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2009-07-29T12:30:41+00:00",
            "releaseNotes": "BC BREAKING RELEASE\n BC breaks:\n * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),\n   Phar::compressFiles()/decompressFiles() and PharFileInfo->compress()/decompress().\n * phar.extract_list and Phar::getExtractList() are removed\n\nMajor feature functionality release\n * phar.cache_list allows web-based phar applications to run at equal or faster than\n   their on-disk equivalent [Greg]\n * new default stub allows running of phar-based phars without phar extension [Greg/Steph]\n * add support for tar-based and zip-based phar archives [Greg]\n * add support for OpenSSL-based true signatures [Greg]\n * add support for signatures to tar-based phar archives [Greg]\n * add Phar::isFileFormat() [Greg]\n * add Phar::convertToExecutable(), Phar::convertToData() [Greg]\n * add Phar::compress() [Greg]\n * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to\n   decompressFiles() [Greg]\n * conversion to compressed or to other file formats automatically copies the archive\n   to a new extension (i.e. \".phar\" to \".phar.tar\" or \".tar\" to \".tar.gz\") [Steph]\n * add Phar::webPhar() for running a web-based application unmodified\n   directly from a phar archive [Greg]\n * file functions (fopen-based and stat-based) can be instructed to only look for\n   relative paths within a phar via Phar::interceptFileFuncs()\n * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]\n   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]\n * paths with . and .. work (phar://blah.phar/a/../b.php => phar://blah.phar/b.php) [Greg]\n * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]\n * add option to compress the entire phar file for phar/tar file format [Greg]\n * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]\n * implement Phar::copy(string $from, string $to) [Greg]\n * implement Phar::running(), returns path or URL to currently executed phar\n * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]\n * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]\n * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]\n * add Phar::delete() [Greg]\n * implement Phar::unlinkArchive() [Greg]\n\nSecurity addition\n * aliases are validated so that they contain no directory separators as intended\n * on conversion to other formats, user-supplied aliases are validated\n\nChanges since 2.0.0RC2:\n fixed PHP Bug #49021: phar tar signature algorithm reports as Unknown (0) in\n getSignature() call\n fixed PHP Bug #49020: phar misinterprets ustar long filename standard\n fixed PHP Bug #49018: phar tar stores long filenames with prefix/name reversed\n fixed PHP Bug #48791: open office files always reported as corrupted\n fixed PHP Bug #48783: make install will fail saying phar file exists\n fixed PHP Bug #48740: PHAR install fails when INSTALL_ROOT is not the final install location\n fixed PHP Bug #48681: openssl signature verification for tar archives broken\n fixed PHP Bug #48377: error message unclear on converting phar with existing file\n fixed isset() on sub-directories (isset(\"blah\") if file \"blah/foo.php\" exists)\n\n make phar work in PHP 6\nChanges since 2.0.0RC1:\n security vulnerability in handling of long tar filenames fixed\n fixed PECL Bug #14646: phar error message unclear with php stream wrappers\n fixed PECL Bug #16338: php_stream_copy_to_stream{,_ex}()\n fixed PHP Bug #48257: PharData throws an exception with non-phar tar\n fixed PHP Bug #47085: rename() returns true even if the file in PHAR does not exist\n fixed PHP Bug #46032: PharData::__construct() - wrong memory read\n fixed PHP Bug #46060: Phar::addEmptyDir() breaks\n fixed PHP Bug #45907: undefined reference to 'PHP_SHA512Init'\n fixed PHP Bug #45726: PHP_Archive / Archive.php missing\nChanges since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,\n conversion API refactored\nChanges since 2.0.0b1: addition of phar.cache_list, many performance improvements and bugfixes\n implement OpenSSL asynchronous true package signing\n add support for package signing to tar-based archives\n require PHP 5.2.1+",
            "get": "http://pecl.php.net/get/phar-2.0.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0RC2": {
            "version": "2.0.0RC2",
            "state": "beta",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2009-06-04T15:57:51+00:00",
            "releaseNotes": "BC BREAKING RELEASE\n BC breaks:\n * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),\n   Phar::compressFiles()/decompressFiles() and PharFileInfo->compress()/decompress().\n * phar.extract_list and Phar::getExtractList() are removed\n\nMajor feature functionality release\n * phar.cache_list allows web-based phar applications to run at equal or faster than\n   their on-disk equivalent [Greg]\n * new default stub allows running of phar-based phars without phar extension [Greg/Steph]\n * add support for tar-based and zip-based phar archives [Greg]\n * add support for OpenSSL-based true signatures [Greg]\n * add support for signatures to tar-based phar archives [Greg]\n * add Phar::isFileFormat() [Greg]\n * add Phar::convertToExecutable(), Phar::convertToData() [Greg]\n * add Phar::compress() [Greg]\n * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to\n   decompressFiles() [Greg]\n * conversion to compressed or to other file formats automatically copies the archive\n   to a new extension (i.e. \".phar\" to \".phar.tar\" or \".tar\" to \".tar.gz\") [Steph]\n * add Phar::webPhar() for running a web-based application unmodified\n   directly from a phar archive [Greg]\n * file functions (fopen-based and stat-based) can be instructed to only look for\n   relative paths within a phar via Phar::interceptFileFuncs()\n * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]\n   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]\n * paths with . and .. work (phar://blah.phar/a/../b.php => phar://blah.phar/b.php) [Greg]\n * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]\n * add option to compress the entire phar file for phar/tar file format [Greg]\n * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]\n * implement Phar::copy(string $from, string $to) [Greg]\n * implement Phar::running(), returns path or URL to currently executed phar\n * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]\n * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]\n * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]\n * add Phar::delete() [Greg]\n * implement Phar::unlinkArchive() [Greg]\n\nSecurity addition\n * aliases are validated so that they contain no directory separators as intended\n * on conversion to other formats, user-supplied aliases are validated\n\nChanges since 2.0.0RC1:\n security vulnerability in handling of long tar filenames fixed\n fixed PECL Bug #14646: phar error message unclear with php stream wrappers\n fixed PECL Bug #16338: php_stream_copy_to_stream{,_ex}()\n fixed PHP Bug #48257: PharData throws an exception with non-phar tar\n fixed PHP Bug #47085: rename() returns true even if the file in PHAR does not exist\n fixed PHP Bug #46032: PharData::__construct() - wrong memory read\n fixed PHP Bug #46060: Phar::addEmptyDir() breaks\n fixed PHP Bug #45907: undefined reference to 'PHP_SHA512Init'\n fixed PHP Bug #45726: PHP_Archive / Archive.php missing\nChanges since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,\n conversion API refactored\nChanges since 2.0.0b1: addition of phar.cache_list, many performance improvements and bugfixes\n implement OpenSSL asynchronous true package signing\n add support for package signing to tar-based archives\n require PHP 5.2.1+",
            "get": "http://pecl.php.net/get/phar-2.0.0RC2",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0RC1": {
            "version": "2.0.0RC1",
            "state": "beta",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2008-08-31T16:48:36+00:00",
            "releaseNotes": "BC BREAKING RELEASE\n BC breaks:\n * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),\n   Phar::compressFiles()/decompressFiles() and PharFileInfo->compress()/decompress().\n * phar.extract_list and Phar::getExtractList() are removed\n\nMajor feature functionality release\n * phar.cache_list allows web-based phar applications to run at equal or faster than\n   their on-disk equivalent [Greg]\n * new default stub allows running of phar-based phars without phar extension [Greg/Steph]\n * add support for tar-based and zip-based phar archives [Greg]\n * add support for OpenSSL-based true signatures [Greg]\n * add support for signatures to tar-based phar archives [Greg]\n * add Phar::isFileFormat() [Greg]\n * add Phar::convertToExecutable(), Phar::convertToData() [Greg]\n * add Phar::compress() [Greg]\n * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to\n   decompressFiles() [Greg]\n * conversion to compressed or to other file formats automatically copies the archive\n   to a new extension (i.e. \".phar\" to \".phar.tar\" or \".tar\" to \".tar.gz\") [Steph]\n * add Phar::webPhar() for running a web-based application unmodified\n   directly from a phar archive [Greg]\n * file functions (fopen-based and stat-based) can be instructed to only look for\n   relative paths within a phar via Phar::interceptFileFuncs()\n * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]\n   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]\n * paths with . and .. work (phar://blah.phar/a/../b.php => phar://blah.phar/b.php) [Greg]\n * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]\n * add option to compress the entire phar file for phar/tar file format [Greg]\n * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]\n * implement Phar::copy(string $from, string $to) [Greg]\n * implement Phar::running(), returns path or URL to currently executed phar\n * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]\n * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]\n * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]\n * add Phar::delete() [Greg]\n * implement Phar::unlinkArchive() [Greg]\n\nSecurity addition\n * aliases are validated so that they contain no directory separators as intended\n * on conversion to other formats, user-supplied aliases are validated\n\nChanges since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,\n conversion API refactored\nChanges since 2.0.0b1: addition of phar.cache_list, many performance improvements and bugfixes\n implement OpenSSL asynchronous true package signing\n add support for package signing to tar-based archives\n require PHP 5.2.1+",
            "get": "http://pecl.php.net/get/phar-2.0.0RC1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0b1": {
            "version": "2.0.0b1",
            "state": "beta",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2008-05-12T17:03:11+00:00",
            "releaseNotes": "BC BREAKING RELEASE\n BC breaks:\n * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),\n   Phar::compressFiles()/decompressFiles() and PharFileInfo->compress()/decompress().\n * phar.extract_list and Phar::getExtractList() are removed\n\nMajor feature functionality release\n * new default stub allows running of phar-based phars without phar extension [Greg/Steph]\n * add support for tar-based and zip-based phar archives [Greg]\n * add Phar::isFileFormat() [Greg]\n * add Phar::convertToExecutable(), Phar::convertToData() [Greg]\n * add Phar::compress() [Greg]\n * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to\n   decompressFiles() [Greg]\n * conversion to compressed or to other file formats automatically copies the archive\n   to a new extension (i.e. \".phar\" to \".phar.tar\" or \".tar\" to \".tar.gz\") [Steph]\n * add Phar::webPhar() for running a web-based application unmodified\n   directly from a phar archive [Greg]\n * file functions (fopen-based and stat-based) can be instructed to only look for\n   relative paths within a phar via Phar::interceptFileFuncs()\n * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]\n   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]\n * paths with . and .. work (phar://blah.phar/a/../b.php => phar://blah.phar/b.php) [Greg]\n * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]\n * add option to compress the entire phar file for phar/tar file format [Greg]\n * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]\n * implement Phar::copy(string $from, string $to) [Greg]\n * implement Phar::running(), returns path or URL to currently executed phar\n * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]\n * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]\n * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]\n * add Phar::delete() [Greg]\n * implement Phar::unlinkArchive() [Greg]\n\nSecurity addition\n * aliases are validated so that they contain no directory separators as intended\n * on conversion to other formats, user-supplied aliases are validated\n\nChanges since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,\n conversion API refactored",
            "get": "http://pecl.php.net/get/phar-2.0.0b1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0a2": {
            "version": "2.0.0a2",
            "state": "alpha",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2008-03-27T01:44:31+00:00",
            "releaseNotes": "Major feature functionality release\n * new default stub allows running of phar-based phars without phar extension [Greg/Steph]\n * add support for tar-based and zip-based phar archives [Greg]\n * add Phar::isTar(), Phar::isZip(), and Phar::isPhar() [Greg]\n * add Phar::convertToTar(), Phar::convertToZip(), and Phar::convertToPhar() [Greg]\n * add Phar::compress() [Greg]\n * conversion to compressed or to other file formats automatically copies the archive\n   to a new extension (i.e. \".phar\" to \".phar.tar\" or \".tar\" to \".tar.gz\") [Steph]\n * add Phar::webPhar() for running a web-based application unmodified\n   directly from a phar archive [Greg]\n * file functions (fopen-based and stat-based) can be instructed to only look for\n   relative paths within a phar via Phar::interceptFileFuncs()\n * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]\n   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]\n * paths with . and .. work (phar://blah.phar/a/../b.php => phar://blah.phar/b.php) [Greg]\n * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]\n * add option to compress the entire phar file for phar/tar file format [Greg]\n * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]\n * implement Phar::copy(string $from, string $to) [Greg]\n * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]\n * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]\n * add Phar::delete() [Greg]\n\nChanges since 2.0.0a1: fix build in PHP 5.2",
            "get": "http://pecl.php.net/get/phar-2.0.0a2",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "2.0.0a1": {
            "version": "2.0.0a1",
            "state": "alpha",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2008-03-26T00:23:40+00:00",
            "releaseNotes": "Major feature functionality release\n * new default stub allows running of phar-based phars without phar extension [Greg/Steph]\n * add support for tar-based and zip-based phar archives [Greg]\n * add Phar::isTar(), Phar::isZip(), and Phar::isPhar() [Greg]\n * add Phar::convertToTar(), Phar::convertToZip(), and Phar::convertToPhar() [Greg]\n * add Phar::compress() [Greg]\n * conversion to compressed or to other file formats automatically copies the archive\n   to a new extension (i.e. \".phar\" to \".phar.tar\" or \".tar\" to \".tar.gz\") [Steph]\n * add Phar::webPhar() for running a web-based application unmodified\n   directly from a phar archive [Greg]\n * file functions (fopen-based and stat-based) can be instructed to only look for\n   relative paths within a phar via Phar::interceptFileFuncs()\n * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]\n   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]\n * paths with . and .. work (phar://blah.phar/a/../b.php => phar://blah.phar/b.php) [Greg]\n * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]\n * add option to compress the entire phar file for phar/tar file format [Greg]\n * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]\n * implement Phar::copy(string $from, string $to) [Greg]\n * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]\n * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]\n * add Phar::delete() [Greg]",
            "get": "http://pecl.php.net/get/phar-2.0.0a1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.3": {
            "version": "1.2.3",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2007-11-23T00:44:06+00:00",
            "releaseNotes": "* fix creation of Phar object with relative path:\n  $a = new Phar('blah.phar');\n* fix creation and read of Phar objects on Windows, manage\n  windows path separators (on windows only)\n* phar.phar is now installed as a script, and can be run as \"phar.phar\"\n* phar.phar looks for PHP in /usr/local/bin/php by default\n* fix Bug #12492: filenew incorrectly creates file path [urkle]\n* fix Bug #12493: extract throws an error and won't open the file [urkle]",
            "get": "http://pecl.php.net/get/phar-1.2.3",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.2": {
            "version": "1.2.2",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2007-10-03T23:46:09+00:00",
            "releaseNotes": "* fix to work with PHP 5.3\n* fix Bug #12124: Phar object cannot be iterated over\n* remove unused variables\n* fix jit file open sprintf calls",
            "get": "http://pecl.php.net/get/phar-1.2.2",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.1": {
            "version": "1.2.1",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2007-08-29T23:32:22+00:00",
            "releaseNotes": "* improve speed of uncompressed phars used readonly by 2x [Greg]\n* improve speed of phars with signatures 2x [Greg]\n* add Phar::setAlias() [Greg]\n* fix too many open file handles issue [Greg]\n* fix rename [Greg]\n* add Phar::getAlias() [Marcus]\n* Made -a optional in pack subcommand of phar.phar [Marcus]\n* Fix issue with apache module and extracted archives [Marcus]\n* Send all error messages to stderr in phar.phar [Marcus]\n* Added new subcommands add and delete to phar.phar [Marcus]\n* Made Phar::loadPhar() and Phar::mapPhar() ignore extracted archives [Marcus]\n* Fix issue with compressed entries and uncompressing entries [Marcus]\n* Verify stubs before writing [Marcus]\n* Always use longest stub end to avoid issues with length field [Marcus]",
            "get": "http://pecl.php.net/get/phar-1.2.1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.2.0": {
            "version": "1.2.0",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "helly",
            "releaseDate": "2007-05-18T00:36:49+00:00",
            "releaseNotes": "* add PharFileInfo::hasMetadata(), PharFileInfo::delMetadata() [Marcus]\n* add Phar::hasMetadata(), Phar::delMetadata() [Marcus]\n* fix Phar::CanWrite() [Marcus]\n* add preliminary phar command (phar.php) [Marcus] \n* add phar command (phar.phar) [Marcus]\n* list all available compression methods using Phar::getSupportedCompression() [Marcus]\n* remove RINIT [Marcus]",
            "get": "http://pecl.php.net/get/phar-1.2.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.1.0": {
            "version": "1.1.0",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "helly",
            "releaseDate": "2007-04-12T17:07:39+00:00",
            "releaseNotes": "* implement ability connect a phar file 'phar://whatever' to a directory. That way all\n  access to that phar archive are directed to the extracted directory. This\n  allows to have the installed files and the archieve keep the same includes.\n  [Marcus]\n* implement SHA-2 (256, 512) support [Marcus]\n* implement setSignatureAlgorithm() and Phar::MD5 Phar::SHA1 Phar::SHA256 Phar::SHA512 Phar::PGP to\n  choose the kind of signature to use (PGP falls back to SHA1) [Greg]",
            "get": "http://pecl.php.net/get/phar-1.1.0",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.0.1": {
            "version": "1.0.1",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "helly",
            "releaseDate": "2007-03-28T01:51:50+00:00",
            "releaseNotes": "* Fix return value of unlink() and rename() when used for phar archievs.\n  [Marcus]",
            "get": "http://pecl.php.net/get/phar-1.0.1",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "1.0.0": {
            "version": "1.0.0",
            "state": "stable",
            "license": "PHP License",
            "releasedBy": "cellog",
            "releaseDate": "2007-03-28T00:27:14+00:00",
            "releaseNotes": "*BACKWARDS COMPATIBILITY BREAK*\nRename Phar->begin/isFlushingToPhar/commit to startBuffering/isBuffering/stopBuffering\nNote that isBuffering() returns the opposite value to isFlushingToPhar()",
            "get": "http://pecl.php.net/get/phar-1.0.0",
            "SPDX-License-Identifier": "PHP-3.01"
        }
    },
    "SPDX-License-Identifier": "PHP-3.01"
}