{
    "category": "Database",
    "deprecated": false,
    "description": "The Microsoft Drivers for PHP for SQL Server are PHP extensions that allow for the reading and writing of SQL Server data from within PHP scripts. The SQLSRV extension provides a procedural interface while the PDO_SQLSRV extension implements PDO for accessing data in all editions of SQL Server 2012 and later (including Azure SQL DB). These drivers rely on the Microsoft ODBC Driver for SQL Server to handle the low-level communication with SQL Server.\n*This package contains only the PDO_SQLSRV driver.*",
    "latestReleaseDate": "2022-05-18T16:50:38+00:00",
    "latestVersion": "5.10.1",
    "license": "The MIT License (MIT)",
    "name": "pdo_sqlsrv",
    "php8Mentioned": true,
    "releases": {
        "5.10.1": {
            "version": "5.10.1",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2022-05-18T16:50:38+00:00",
            "releaseNotes": "[Added]\n- Pull request [#1382](https://github.com/microsoft/msphpsql/pull/1382) - Support for ActiveDirectoryIntegrated authentication\n[Fixed]\n- Pull request [#1374](https://github.com/microsoft/msphpsql/pull/1374) - Fixed ActiveDirectoryMsi Authentication behavior when specified UID by laclefyoshi\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- This preview release requires ODBC Driver 17.4.2 or above. Otherwise, a warning about failing to set an attribute may be suppressed when using an older ODBC driver.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.10.1",
            "SPDX-License-Identifier": "MIT"
        },
        "5.10.0": {
            "version": "5.10.0",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2022-01-31T19:15:38+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 8.1\n- Support for macOS Monterey, Debian 11, Ubuntu 21.04 and 21.10, Alpine 3.13, 3.14 and 3.15\n- Support for Apple M1 ARM64 hardware -- requires [MS ODBC Driver 17.8+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/install-microsoft-odbc-driver-sql-server-macos?view=sql-server-ver15)\n- Adjusted connection keyword and value validation for more flexibility\n- Feature Request [#795](https://github.com/microsoft/msphpsql/issues/795) - adding support for [Table-valued parameters](https://github.com/Microsoft/msphpsql/wiki/Features#tvp)\n- Feature Request [#1320](https://github.com/microsoft/msphpsql/issues/1320) - allow PDO::ATTR_EMULATE_PREPARES to be set at the connection level\n[Removed]\n- Support for PHP 7.3\n- Support for Ubuntu 16.04, Alpine 3.11 and Alpine 3.12\n[Fixed]\n- Issue [#1244](https://github.com/microsoft/msphpsql/issues/1244) - use lower case for object names for PDO::lastInsertId() - pull request [#1245](https://github.com/microsoft/msphpsql/pull/1245) by morozov\n- Pull request [#1251](https://github.com/microsoft/msphpsql/pull/1251) - simplified implementations of last insert id and quote\n- Issue [#1258](https://github.com/microsoft/msphpsql/issues/1258) - updated pdo_sqlsrv_get_driver_methods as per documentation - pull request [#1259](https://github.com/microsoft/msphpsql/pull/1259)\n- Pull request [#1260](https://github.com/microsoft/msphpsql/pull/1260) - cleaned up redundant code\n- Issue [#1261](https://github.com/microsoft/msphpsql/issues/1261) - simplified get_field_as_string and made it more robust - pull request [#1265](https://github.com/microsoft/msphpsql/pull/1265)\n- Pull request [#1267](https://github.com/microsoft/msphpsql/pull/1267) - replaced the obsolete MACRO ZVAL_NEW_ARR with array_init\n- Pull request [#1275](https://github.com/microsoft/msphpsql/pull/1275) - fixed warning compiling core_stmt.cpp by mlocati\n- Pull request [#1288](https://github.com/microsoft/msphpsql/pull/1288) - applied mask to pdo quote for binary inputs\n- Pull request [#1290](https://github.com/microsoft/msphpsql/pull/1290) - updated list of supported processor architecture\n- Issue [#1307](https://github.com/microsoft/msphpsql/issues/1307) - added TVP support to non-procedure statements\n- Issue [#1310](https://github.com/microsoft/msphpsql/issues/1310) - adjusted sql_data_type and column size for NULL parameters - pull request [#1311](https://github.com/microsoft/msphpsql/pull/1311) by gjcarrette\n- Pull request [#1326](https://github.com/microsoft/msphpsql/pull/1326) - php drivers simply pass Azure AD Authentication to ODBC driver, which will verify the settings\n- Issue [#1329](https://github.com/microsoft/msphpsql/issues/1329) - reset sql type and column size for input params\n- Issue [#1331](https://github.com/microsoft/msphpsql/issues/1331) - restore PDO::ATTR_ERRMODE if calling PDO::lastInsertId() call fails - pull request [#1330](https://github.com/microsoft/msphpsql/pull/1330) by mpyw and pull request [#1332](https://github.com/microsoft/msphpsql/pull/1332)\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- This release requires ODBC Driver 17.4.2 or above. Otherwise, a warning about failing to set an attribute may be suppressed when using an older ODBC driver.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.10.0",
            "SPDX-License-Identifier": "MIT"
        },
        "5.10.0beta2": {
            "version": "5.10.0beta2",
            "state": "beta",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2021-12-02T16:46:58+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 8.1\n- Support for Ubuntu 21.10\n- Feature Request [#1320](https://github.com/microsoft/msphpsql/issues/1320) - allow PDO::ATTR_EMULATE_PREPARES to be set at the connection level\n[Fixed]\n- Issue [#1307](https://github.com/microsoft/msphpsql/issues/1307) - added TVP support to non-procedure statements\n- Issue [#1310](https://github.com/microsoft/msphpsql/issues/1310) - adjusted sql_data_type and column size for NULL parameters - pull request [#1311](https://github.com/microsoft/msphpsql/pull/1311) by gjcarrette\n- Pull request [#1326](https://github.com/microsoft/msphpsql/pull/1326) - php drivers simply pass Azure AD Authentication to ODBC driver, which will verify the settings\n- Issue [#1329](https://github.com/microsoft/msphpsql/issues/1329) - reset sql type and column size for input params\n- Issue [#1331](https://github.com/microsoft/msphpsql/issues/1331) - restore PDO::ATTR_ERRMODE if calling PDO::lastInsertId() call fails - pull request [#1330](https://github.com/microsoft/msphpsql/pull/1330) by mpyw and pull request [#1332](https://github.com/microsoft/msphpsql/pull/1332)\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- This preview release requires ODBC Driver 17.4.2 or above. Otherwise, a warning about failing to set an attribute may be suppressed when using an older ODBC driver.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.10.0beta2",
            "SPDX-License-Identifier": "MIT"
        },
        "5.10.0beta1": {
            "version": "5.10.0beta1",
            "state": "beta",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2021-09-08T17:43:45+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 8.1 RC 1\n- Support for Ubuntu 21.04 and Alpine 3.13\n- Support for Apple M1 ARM64 hardware (requires [MS ODBC Driver 17.8+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/install-microsoft-odbc-driver-sql-server-macos?view=sql-server-ver15)\n- Feature Request [#795](https://github.com/microsoft/msphpsql/issues/795) - adding support for [Table-valued parameters](https://github.com/Microsoft/msphpsql/wiki/Features#tvp)\n[Removed]\n- Support for Ubuntu 16.04\n[Fixed]\n- Issue [#1244](https://github.com/microsoft/msphpsql/issues/1244) - use lower case for object names for PDO::lastInsertId() - pull request [#1245](https://github.com/microsoft/msphpsql/pull/1245) by morozov\n- Pull request [#1251](https://github.com/microsoft/msphpsql/pull/1251) - simplified implementations of last insert id and quote\n- Issue [#1258](https://github.com/microsoft/msphpsql/issues/1258) - updated pdo_sqlsrv_get_driver_methods as per documentation - pull request [#1259](https://github.com/microsoft/msphpsql/pull/1259)\n- Pull request [#1260](https://github.com/microsoft/msphpsql/pull/1260) - cleaned up redundant code\n- Issue [#1261](https://github.com/microsoft/msphpsql/issues/1261) - simplified get_field_as_string and made it more robust - pull request [#1265](https://github.com/microsoft/msphpsql/pull/1265)\n- Pull request [#1267](https://github.com/microsoft/msphpsql/pull/1267) - replaced the obsolete MACRO ZVAL_NEW_ARR with array_init\n- Pull request [#1275](https://github.com/microsoft/msphpsql/pull/1275) - fixed warning compiling core_stmt.cpp by mlocati\n- Pull request [#1288](https://github.com/microsoft/msphpsql/pull/1288) - applied mask to pdo quote for binary inputs\n- Pull request [#1290](https://github.com/microsoft/msphpsql/pull/1290) - updated list of supported processor architecture\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- This preview release requires ODBC Driver 17.4.2 or above. Otherwise, a warning about failing to set an attribute may be suppressed when using an older ODBC driver.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.10.0beta1",
            "SPDX-License-Identifier": "MIT"
        },
        "5.9.0": {
            "version": "5.9.0",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2021-01-29T17:17:23+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 8.0\n- Support for macOS Big Sur, Ubuntu 20.04, Ubuntu 20.10 and Alpine 3.12\n- Support for GB18030 locale [#1115](\nhttps://github.com/microsoft/msphpsql/pull/1115)\n- Feature Request [#924](https://github.com/microsoft/msphpsql/issues/924) - extended PDO errorinfo to include [additional odbc messages if available](https://docs.microsoft.com/sql/connect/php/pdo-errorinfo) - pull request [#1133](\nhttps://github.com/microsoft/msphpsql/pull/1133)\n- [Data Classification with rank info](https://github.com/microsoft/msphpsql/wiki/Features#dataClass), which requires [MS ODBC Driver 17.4.2+](https://docs.microsoft.com/sql/connect/odbc/download-odbc-driver-for-sql-server) and [SQL Server 2019](https://www.microsoft.com/sql-server/sql-server-2019) or an Azure SQL instance that supports it\n- [Azure Active Directory Service Principal authentication support](https://docs.microsoft.com/sql/connect/php/azure-active-directory), which requires [MS ODBC Driver 17.7+](https://docs.microsoft.com/sql/connect/odbc/download-odbc-driver-for-sql-server)\n[Removed]\n- Dropped support for PHP 7.2\n- Dropped support for macOS High Sierra, Ubuntu 19.10 and Debian 8\n[Fixed]\n- Pull Request [#1127](https://github.com/microsoft/msphpsql/pull/1127) - removed TSRMLS macros in preparation for PHP 8 by remicollet\n- Pull Request [#1136](https://github.com/microsoft/msphpsql/pull/1136) - improved performance when handling decimal numbers as inputs or outputs and removed unncessary conversions for numeric values\n- Pull Request [#1143](https://github.com/microsoft/msphpsql/pull/1143) - if an exception occurs when executing a query, it will not change the output parameters\n- Pull Request [#1144](https://github.com/microsoft/msphpsql/pull/1144) - use the correct C types when binding output parameters with integer values\n- Pull Request [#1146](https://github.com/microsoft/msphpsql/pull/1146) - improved performance when fetching numbers using client buffers\n- Pull Request [#1165](https://github.com/microsoft/msphpsql/pull/1165) - set query timeout without using LOCK TIMEOUT, which saves an extra trip to the server\n- Issue [#1170](https://github.com/microsoft/msphpsql/issues/1170) - when fetching large data types such as ntext, check more than only the display size - pull request [#1172](https://github.com/microsoft/msphpsql/pull/1172)\n- Pull Request [#1205](https://github.com/microsoft/msphpsql/pull/1205) - minimized compilation warnings on Linux and macOS \n- Pull Request [#1209](https://github.com/microsoft/msphpsql/pull/1209) - fixed a bug when fetching varbinary max fields as char or wide chars\n- Issue [#1210](https://github.com/microsoft/msphpsql/issues/1210) - switched from preview to beta terminology to enable Pickle support\n- Issue [#1213](https://github.com/microsoft/msphpsql/issues/1213) - the MACOSX_DEPLOYMENT_TARGET in config files caused linker errors in macOS Big Sur - Pull Request [#1215](https://github.com/microsoft/msphpsql/pull/1215)\n- Pull Request [#1226](https://github.com/microsoft/msphpsql/pull/1226) - replaced the problematic strlen function \n- Pull Request [#1227](https://github.com/microsoft/msphpsql/pull/1227) - addressed static code analyis issues\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- This preview release requires ODBC Driver 17.4.2 or above. Otherwise, a warning about failing to set an attribute may be suppressed when using an older ODBC driver.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.9.0",
            "SPDX-License-Identifier": "MIT"
        },
        "5.9.0beta2": {
            "version": "5.9.0beta2",
            "state": "beta",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2020-12-02T17:17:57+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 8.0\n[Removed]\n- Dropped support for PHP 7.2\n[Fixed]\n- Pull Request [#1205](https://github.com/microsoft/msphpsql/pull/1205) - minimized compilation warnings on Linux and macOS \n- Pull Request [#1209](https://github.com/microsoft/msphpsql/pull/1209) - fixed a bug in fetching varbinary max fields as char or wide chars\n- Issue [#1210](https://github.com/microsoft/msphpsql/issues/1210) - switched from preview to beta terminology to enable Pickle support\n- Issue [#1213](https://github.com/microsoft/msphpsql/issues/1213) - the MACOSX_DEPLOYMENT_TARGET in config files caused linker errors in macOS Big Sur - Pull Request [#1215](https://github.com/microsoft/msphpsql/pull/1215)\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- This preview release requires ODBC Driver 17.4.2 or above. Otherwise, a warning about failing to set an attribute may be suppressed when using an older ODBC driver.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.9.0beta2",
            "SPDX-License-Identifier": "MIT"
        },
        "5.9.0preview1": {
            "version": "5.9.0preview1",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2020-10-05T14:57:23+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 8.0 RC 1\n- Support for Ubuntu 20.04 and Alpine 3.12\n- Support for GB18030 locale [#1115](\nhttps://github.com/microsoft/msphpsql/pull/1115)\n- Feature Request [#924](https://github.com/microsoft/msphpsql/issues/924) - extended PDO errorinfo to include [additional odbc messages if available](https://github.com/microsoft/msphpsql/wiki/Features#pdoErrorInfo) - pull request [#1133](\nhttps://github.com/microsoft/msphpsql/pull/1133)\n- [Data Classification with rank info](https://github.com/microsoft/msphpsql/wiki/Features#dataClass), which requires [MS ODBC Driver 17.4.2+](https://docs.microsoft.com/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-ver15) and [SQL Server 2019](https://www.microsoft.com/sql-server/sql-server-2019) or an Azure SQL instance that supports it\n[Removed]\n- Dropped support for Ubuntu 19.10 and Debian 8.\n[Fixed]\n- Pull Request [#1127](https://github.com/microsoft/msphpsql/pull/1127) - removal of TSRMLS macros in preparation for PHP 8 by remicollet\n- Pull Request [#1136](https://github.com/microsoft/msphpsql/pull/1136) - improved performance when handling decimal numbers as inputs or outputs and removed unncessary conversions for numeric values\n- Pull Request [#1143](https://github.com/microsoft/msphpsql/pull/1143) - if an exception occurs when executing a query, will not change the output parameters\n- Pull Request [#1144](https://github.com/microsoft/msphpsql/pull/1144) - use the correct C types when binding output parameters with integer values\n- Pull Request [#1146](https://github.com/microsoft/msphpsql/pull/1146) - improved performance when fetching numbers using client buffers\n- Issue [#1170](https://github.com/microsoft/msphpsql/issues/1170) - when fetching large data types such as ntext will check more than only the display size - pull request [#1172](https://github.com/microsoft/msphpsql/pull/1172)\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- This preview release requires ODBC Driver 17.4.2 or above. Otherwise, a warning about failing to set an attribute may be suppressed when using an older ODBC driver.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.9.0preview1",
            "SPDX-License-Identifier": "MIT"
        },
        "5.8.1": {
            "version": "5.8.1",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2020-04-15T15:23:04+00:00",
            "releaseNotes": "[Fixed]\n- Pull Request [#1094](https://github.com/microsoft/msphpsql/pull/1094) - Fixed default locale issues in Alpine Linux \n- Pull Request [#1095](https://github.com/microsoft/msphpsql/pull/1095) - Removed unnecessary data structure to support Client-Side Cursors feature in Alpine Linux\n- Pull Request [#1095](https://github.com/microsoft/msphpsql/pull/1107) - Fixed logging issues when both drivers are enabled in Alpine Linux\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.8.1",
            "SPDX-License-Identifier": "MIT"
        },
        "5.8.0": {
            "version": "5.8.0",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2020-01-31T17:17:52+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 7.4\n- Support for [Microsoft ODBC Driver 17.5](\nhttps://docs.microsoft.com/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-ver15) on all platforms\n- Support for Debian 10 and Red Hat 8 - require MS ODBC Driver 17.4+\n- Support for macOS Catalina, Alpine Linux 3.11 and Ubuntu 19.10 - require ODBC Driver 17.5+\n- Feature Request [#929](https://github.com/microsoft/msphpsql/issues/929) - new [Language option](https://github.com/microsoft/msphpsql/wiki/Features#language) - Pull Request [#930](https://github.com/microsoft/msphpsql/pull/930)\n- [Data Classification Sensitivity Metadata Retrieval](https://github.com/microsoft/msphpsql/wiki/Features#data-classification-sensitivity-metadata) - requires ODBC Driver 17.4.2+ and [SQL Server 2019](https://www.microsoft.com/sql-server/sql-server-2019)\n- Feature Request [#1018](https://github.com/microsoft/msphpsql/issues/1018) - support for [PHP extended string types](https://github.com/microsoft/msphpsql/wiki/Features#natlTypes) - Pull Request [#1043](https://github.com/microsoft/msphpsql/pull/1043)\n- [Always Encrypted with secure enclaves](https://github.com/microsoft/msphpsql/wiki/Features#alwaysencryptedV2) - requires ODBC Driver 17.4+ and [SQL Server 2019](https://www.microsoft.com/sql-server/sql-server-2019)\n- Feature Request [#1063](https://github.com/microsoft/msphpsql/issues/1063) - add configurable options for locale settings in Linux and macOS  - Pull Request [#1069](https://github.com/microsoft/msphpsql/pull/1069)\n[Removed]\n- Dropped support for [PHP 7.1](https://www.php.net/supported-versions.php)\n- Dropped support for SQL Server 2008 R2, macOS Sierra, Ubuntu 18.10 and Ubuntu 19.04.\n[Fixed]\n- Pull Request [#972](https://github.com/microsoft/msphpsql/pull/972) - Removed redundant calls to retrieve the number of columns or rows in the current query result set\n- Pull Request [#978](https://github.com/microsoft/msphpsql/pull/978) - PDO_SQLSRV implementation of PDO::getColumnMeta now references cached metadata rather than making an ODBC call every time\n- Pull Request [#979](https://github.com/microsoft/msphpsql/pull/979) - Added support for Data Classification Sensitivity metadata retrieval\n- Pull Request [#985](https://github.com/microsoft/msphpsql/pull/985) - Fixed memory issues with Data Classification data structures\n- Issue [#432](https://github.com/microsoft/msphpsql/issues/432) - Having any invalid UTF-8 name in the connection string will no longer invoke misleading error messages\n- Issue [#909](https://github.com/microsoft/msphpsql/issues/909) - Fixed potential exception with locale issues in macOS \n- Pull Request [#992](https://github.com/microsoft/msphpsql/pull/992) - Produced the correct error when requesting Data Classification metadata with ODBC drivers prior to 17\n- Pull Request [#1001](https://github.com/microsoft/msphpsql/pull/1001) - Fixed compilation issue with PHP 7.4 alpha\n- Pull Request [#1004](https://github.com/microsoft/msphpsql/pull/1004) - Fixed another compilation issue with PHP 7.4 alpha\n- Pull Request [#1008](https://github.com/microsoft/msphpsql/pull/1008) - Improved data caching when fetching datetime objects\n- Pull Request [#1011](https://github.com/microsoft/msphpsql/pull/1011) - Fixed a potential buffer overflow when parsing for escaped braces in the connection string\n- Pull Request [#1015](https://github.com/microsoft/msphpsql/pull/1015) - Fixed compilation issues and addressed various memory leaks detected by PHP 7.4 beta 1 \n- Issue [#1027](https://github.com/microsoft/msphpsql/issues/1027) - Fixed how drivers handle query timeout settings\n- Pull Request [#1049](https://github.com/microsoft/msphpsql/pull/1049) - Performance improvement for fetching from tables with many columns - cached the derived php types with column metadata to streamline data retrieval\n- Pull Request [#1068](https://github.com/microsoft/msphpsql/pull/1068) - Some cosmetic changes to source code as per suggestions from a static analysis tool\n- Issue [#1079](https://github.com/microsoft/msphpsql/issues/1079) - Support sql_variant types when using client buffers\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- In Alpine Linux, the Client-Side Cursors feature may cause an access violation if both sqlsrv and pdo_sqlsrv are enabled. Either enable only sqlsrv or pdo_sqlsrv, or build PHP from source by compiling the drivers statically.\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.8.0",
            "SPDX-License-Identifier": "MIT"
        },
        "5.7.1preview": {
            "version": "5.7.1preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2019-12-03T17:52:19+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 7.4\n- Support for Red Hat 8 and macOS Catalina (10.15)\n- Feature Request [#1018](https://github.com/microsoft/msphpsql/issues/1018) - support for [PHP extended string types](https://github.com/microsoft/msphpsql/wiki/Features#natlTypes) - Pull Request [#1043](https://github.com/microsoft/msphpsql/pull/1043)\n- [Always Encrypted with secure enclaves](https://github.com/microsoft/msphpsql/wiki/Features#alwaysencryptedV2), which requires [MS ODBC Driver 17.4+](https://docs.microsoft.com/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-ver15) and [SQL Server 2019](https://www.microsoft.com/sql-server/sql-server-2019)\n[Removed]\n- Dropped support for [PHP 7.1](https://www.php.net/supported-versions.php)\n[Fixed]\n- Issue [#1027](https://github.com/microsoft/msphpsql/issues/1027) - Fixed how drivers handle query timeout settings\n- Pull Request [#1049](https://github.com/microsoft/msphpsql/pull/1049) - performance improvement for fetching from tables with many columns - cached the derived php types with column metadata to streamline data retrieval\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - Issue [#1050](https://github.com/microsoft/msphpsql/issues/1050) - With Always Encrypted enabled, insertion requires the column list for any tables with identity columns\n  - [Always Encrypted limitations](https://docs.microsoft.com/sql/connect/php/using-always-encrypted-php-drivers#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Data Classification metadata retrieval requires ODBC Driver 17.4.2.1+ and [SQL Server 2019](https://www.microsoft.com/sql-server/sql-server-2019)\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.7.1preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.7.0preview": {
            "version": "5.7.0preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2019-09-05T18:35:59+00:00",
            "releaseNotes": "[Added]\n- Support for PHP 7.4 RC 1\n- Support for Linux Ubuntu 19.04 and Debian 10\n- Feature Request [#929](https://github.com/microsoft/msphpsql/issues/929) - new [Language option](https://github.com/microsoft/msphpsql/wiki/Features#language) - Pull Request [#930](https://github.com/microsoft/msphpsql/pull/930)\n- [Data Classification Sensitivity Metadata Retrieval](https://github.com/microsoft/msphpsql/wiki/Features#data-classification-sensitivity-metadata), which requires [MS ODBC Driver 17.2+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server) and [SQL Server 2019 release candidate](https://docs.microsoft.com/sql/sql-server/sql-server-ver15-release-notes?view=sqlallproducts-allversions#-release-candidate-rc)\n[Removed]\n- Dropped support for Ubuntu 18.10\n[Fixed]\n- Issue [#570](https://github.com/microsoft/msphpsql/issues/570) - Fixed fetching varbinary data using client buffer with sqlsrv\n- Pull Request [#972](https://github.com/microsoft/msphpsql/pull/972) - Removed redundant calls to retrieve the number of columns or rows in the current query result set\n- Pull Request [#978](https://github.com/microsoft/msphpsql/pull/978) - PDO_SQLSRV implementation of PDO::getColumnMeta now references cached metadata rather than making an ODBC call every time\n- Pull Request [#979](https://github.com/microsoft/msphpsql/pull/979) - Added support for data classification sensitivity metadata retrieval\n- Pull Request [#985](https://github.com/microsoft/msphpsql/pull/985) - Fixed memory issues with data classification data structures\n- Issue [#432](https://github.com/microsoft/msphpsql/issues/432) - Having any invalid UTF-8 name in the connection string will no longer invoke misleading error messages\n- Issue [#909](https://github.com/microsoft/msphpsql/issues/909) - Fixed potential exception with locale issues in macOS \n- Pull Request [#992](https://github.com/microsoft/msphpsql/pull/992) - Produced the correct error when requesting Data Classification metadata with ODBC drivers prior to 17\n- Pull Request [#1001](https://github.com/microsoft/msphpsql/pull/1001) - Fixed compilation issue with PHP 7.4 alpha\n- Pull Request [#1004](https://github.com/microsoft/msphpsql/pull/1004) - Fixed another compilation issue with PHP 7.4 alpha\n- Pull Request [#1008](https://github.com/microsoft/msphpsql/pull/1008) - Improved data caching when fetching datetime objects\n- Pull Request [#1011](https://github.com/microsoft/msphpsql/pull/1011) - Fixed a potential buffer overflow when parsing for escaped braces in the connection string\n- Pull Request [#1015](https://github.com/microsoft/msphpsql/pull/1015) - Fixed compilation issues and addressed various memory leaks detected by PHP 7.4 beta 1 \n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - [Always Encrypted limitations](https://docs.microsoft.com/en-us/sql/connect/php/using-always-encrypted-php-drivers?view=sql-server-2017#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Data Classification metadata retrieval is not compatible with ODBC Driver 17.4.1\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)\n- With ColumnEncryption enabled, calling stored procedure with XML parameter does not work (Issue [#674](https://github.com/Microsoft/msphpsql/issues/674))\n- In SUSE 15, Azure Active Directory connections may fail if PHP is installed from packages (Issue [#934](https://github.com/Microsoft/msphpsql/issues/934))",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.7.0preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.6.1": {
            "version": "5.6.1",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2019-03-19T22:47:44+00:00",
            "releaseNotes": "[Fixed]\n- Issue [#937](https://github.com/Microsoft/msphpsql/issues/937) - fixed assumptions made when calculating field or column metadata which may have resulted in application termination\n- Pull Request [#946](https://github.com/Microsoft/msphpsql/pull/946) - fixed PDOStatement::getColumnMeta() to return false when something goes wrong\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - [Always Encrypted limitations](https://docs.microsoft.com/en-us/sql/connect/php/using-always-encrypted-php-drivers?view=sql-server-2017#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)\n- With ColumnEncryption enabled, calling stored procedure with XML parameter does not work (Issue [#674](https://github.com/Microsoft/msphpsql/issues/674))\n- In SUSE 15, Azure Active Directory connections may fail if PHP is installed from packages (Issue [#934](https://github.com/Microsoft/msphpsql/issues/934))",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.6.1",
            "SPDX-License-Identifier": "MIT"
        },
        "5.6.0": {
            "version": "5.6.0",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2019-02-21T23:13:51+00:00",
            "releaseNotes": "[Added]\n- Added support for PHP 7.3\n- Added support for Linux SUSE 15, Ubuntu 18.10 and mac OS Mojave\n- Feature Request [#415](https://github.com/Microsoft/msphpsql/pull/886) - new options at connection and statement levels for both drivers for formatting decimal values in the fetched results\n- Added support for Azure AD Access Token (in Linux / macOS this requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server) and [unixODBC](http://www.unixodbc.org/) 2.3.6+)\n- Added support for Authentication with Azure Active Directory using Managed Identity for Azure Resources (requires [MS ODBC Driver 17.3+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server))\n- Feature Request [#842](https://github.com/Microsoft/msphpsql/pull/842) - new PDO_STMT_OPTION_FETCHES_DATETIME_TYPE flag for pdo_sqlsrv to return datetime as objects\n[Removed]\n- Dropped support for Linux Ubuntu 17.10 and mac OS El Capitan\n- Dropped support for PHP 7.0 - [Version 5.3](https://docs.microsoft.com/sql/connect/php/system-requirements-for-the-php-sql-driver?view=sql-server-2017) is the last to support PHP 7.0.\n[Fixed]\n- Issue [#434](https://github.com/Microsoft/msphpsql/issues/434) - To avoid possible crashes, before freeing stmt in the destructor check if its dbh driver data is NULL\n- Pull Request [#833](https://github.com/Microsoft/msphpsql/pull/833) - Streamlined the error handling to remove a potential cause of crash\n- Pull Request [#836](https://github.com/Microsoft/msphpsql/pull/836) - Modified the config files to enable Spectre Mitigations (use /Qspectre switch) for PHP 7.2 (see related Request [#878](https://github.com/Microsoft/msphpsql/pull/878))\n- Pull Request [#854](https://github.com/Microsoft/msphpsql/pull/854) - Clear Azure Key Vault data after connection attributes are successfully set or when exception is thrown\n- Pull Request [#855](https://github.com/Microsoft/msphpsql/pull/855) - Improved performance by saving meta data before fetching and skipping unnecessary conversions for numeric data\n- Pull Request [#865](https://github.com/Microsoft/msphpsql/pull/865) - Corrected the way SQLPutData and SQLParamData are used when sending stream data to the server\n- Pull Request [#878](https://github.com/Microsoft/msphpsql/pull/878) - Modified the config files to enable Spectre Mitigations for PHP 7.1 (see related Request [#836](https://github.com/Microsoft/msphpsql/pull/836))\n- Pull Request [#891](https://github.com/Microsoft/msphpsql/pull/891) - Improved performance of Unicode conversions\n- Pull Request [#892](https://github.com/Microsoft/msphpsql/pull/892) - Removed warning messages while compiling extensions\n- Pull Request [#904](https://github.com/Microsoft/msphpsql/pull/904) - Enabled compiling extensions statically into PHP\n- Pull Request [#907](https://github.com/Microsoft/msphpsql/pull/907) - Initialized output param buffer when allocating extra space\n- Pull Request [#919](https://github.com/Microsoft/msphpsql/pull/919) - Initialized a boolean variable before passing it by reference into a function that will modify its value\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - [Always Encrypted limitations](https://docs.microsoft.com/en-us/sql/connect/php/using-always-encrypted-php-drivers?view=sql-server-2017#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)\n- With ColumnEncryption enabled, calling stored procedure with XML parameter does not work (Issue [#674](https://github.com/Microsoft/msphpsql/issues/674))\n- In SUSE 15, Azure Active Directory connections may fail if PHP is installed from packages (Issue [#934](https://github.com/Microsoft/msphpsql/issues/934))",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.6.0",
            "SPDX-License-Identifier": "MIT"
        },
        "5.5.0preview": {
            "version": "5.5.0preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2018-12-07T17:21:46+00:00",
            "releaseNotes": "[Added]\n- Added support for PHP 7.3.0\n- Added support for Linux Ubuntu 18.10 and mac OS Mojave\n- Feature Request [#415](https://github.com/Microsoft/msphpsql/pull/886) - new options at connection and statement levels for both drivers for formatting decimal values in the fetched results\n[Fixed]\n- Pull Request [#854](https://github.com/Microsoft/msphpsql/pull/854) - Clear Azure Key Vault data after connection attributes are successfully set or when exception is thrown\n- Pull Request [#855](https://github.com/Microsoft/msphpsql/pull/855) - Improved performance by saving meta data before fetching and skipping unnecessary conversions for numeric data\n- Pull Request [#865](https://github.com/Microsoft/msphpsql/pull/865) - Corrected the way SQLPutData and SQLParamData are used when sending stream data to the server\n- Pull Request [#878](https://github.com/Microsoft/msphpsql/pull/878) - Modified the config files to enable Spectre Mitigations for PHP 7.1 (see related Request [#836](https://github.com/Microsoft/msphpsql/pull/836))\n- Pull Request [#891](https://github.com/Microsoft/msphpsql/pull/891) - Improved performance of Unicode conversions\n- Pull Request [#892](https://github.com/Microsoft/msphpsql/pull/892) - Removed warning messages while compiling extensions\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- No support for inout / output params when formatting decimal values\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - [Always Encrypted limitations](https://docs.microsoft.com/en-us/sql/connect/php/using-always-encrypted-php-drivers?view=sql-server-2017#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.7\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)\n- With ColumnEncryption enabled, calling stored procedure with XML parameter does not work (Issue [#674](https://github.com/Microsoft/msphpsql/issues/674))\n- With ColumnEncryption enabled, fetching varbinary(max), varchar(max) or nvarchar(max) may fail with [ODBC Driver 17.3 CTP](https://blogs.msdn.microsoft.com/sqlnativeclient/2018/09/24/odbc-driver-17-3-preview-for-sql-server-released/)",
            "get": "https://pecl.php.net/get/pdo_sqlsrv-5.5.0preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.4.0preview": {
            "version": "5.4.0preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2018-09-24T17:01:38+00:00",
            "releaseNotes": "[Added]\n- Added support for PHP 7.3.0 RC 1\n- Added support for Azure AD Access Token (in Linux / macOS this requires [MS ODBC Driver 17+](https://docs.microsoft.com/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server) and [unixODBC](http://www.unixodbc.org/) 2.3.6+)\n- Feature Request [#842](https://github.com/Microsoft/msphpsql/pull/842) - new PDO_STMT_OPTION_FETCHES_DATETIME_TYPE flag for pdo_sqlsrv to return datetime as objects\n- Compatible with [ODBC Driver 17.3 CTP](https://blogs.msdn.microsoft.com/sqlnativeclient/2018/09/24/odbc-driver-17-3-preview-for-sql-server-released/)\n[Removed]\n- Dropped support for Ubuntu 17.10\n- Dropped support for PHP 7.0 - [Version 5.3](https://docs.microsoft.com/sql/connect/php/system-requirements-for-the-php-sql-driver?view=sql-server-2017) is the last to support PHP 7.0.\n[Fixed]\n- Issue [#434](https://github.com/Microsoft/msphpsql/issues/434) - To avoid the pitfall that could result in a crash, before freeing stmt in the destructor check if its dbh driver data is NULL\n- Pull Request [#836](https://github.com/Microsoft/msphpsql/pull/836) - Modified the config files to enable Spectre Mitigations (use /Qspectre switch) for PHP 7.2\n- Pull Request [#833](https://github.com/Microsoft/msphpsql/pull/833) - Streamlined the error handling to remove a potential cause of crash\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - [Always Encrypted limitations](https://docs.microsoft.com/en-us/sql/connect/php/using-always-encrypted-php-drivers?view=sql-server-2017#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.6\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)\n- With ColumnEncryption enabled, calling stored procedure with XML parameter does not work (Issue [#674](https://github.com/Microsoft/msphpsql/issues/674))\n- With ColumnEncryption enabled, fetching varbinary(max), varchar(max) or nvarchar(max) may fail with ODBC Driver 17.3 CTP",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.4.0preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.3.0": {
            "version": "5.3.0",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "yitam",
            "releaseDate": "2018-07-20T18:02:01+00:00",
            "releaseNotes": "[Added]\n- Added support for Azure Key Vault for Always Encrypted functionality. Always Encrypted functionality is supported on Linux and macOS through Azure Key Vault\n- Added support for connection resiliency on Linux and macOS (requires version 17.2 or higher of the [ODBC driver](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017))\n- Added support for macOS High Sierra (requires version 17 or higher of the [ODBC driver](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017))\n- Added support for Ubuntu 18.04 (requires version 17.2 or higher of the [ODBC driver](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017))\n[Fixed]\n- Issue [#577](https://github.com/Microsoft/msphpsql/issues/577) - Idle Connection Resiliency doesn't work with Column Encryption enabled connections (fixed in MS ODBC Driver 17.1)\n- Issue [#678](https://github.com/Microsoft/msphpsql/issues/678) - Idle Connection Resiliency doesn't work with Connection Pooling (fixed in MS ODBC Driver 17.1)\n- Issue [#705](https://github.com/Microsoft/msphpsql/issues/705) - Always Encrypted - Retrieving a negative decimal value (edge case) as output parameter causes truncation\n- Issue [#706](https://github.com/Microsoft/msphpsql/issues/706) - Always Encrypted - Cannot insert double with precision and scale (38, 38)\n- Issue [#707](https://github.com/Microsoft/msphpsql/issues/707) - Always Encrypted - Fetching decimals / numerics as output parameters bound to PDO::PARAM_BOOL or PDO::PARAM_INT returns floats, not integers \n- Issue [#735](https://github.com/Microsoft/msphpsql/issues/735) - Extended the buffer size for PDO::lastInsertId so that data types other than integers can be supported\n- Pull Request [#759](https://github.com/Microsoft/msphpsql/pull/759) - Removed the limitation of binding a binary as inout param as PDO::PARAM_STR with SQLSRV_ENCODING_BINARY\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. Attempting to set the locale after connecting will not work\n- Always Encrypted requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)\n  - Only Windows Certificate Store and Azure Key Vault are supported. Custom Keystores are not yet supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted enabled, named parameters in subqueries are not supported\n  - [Always Encrypted limitations](https://docs.microsoft.com/en-us/sql/connect/php/using-always-encrypted-php-drivers?view=sql-server-2017#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Connection pooling on Linux or macOS is not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.6\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostic information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)\n- With ColumnEncryption enabled, calling stored procedure with XML parameter does not work (Issue [#674](https://github.com/Microsoft/msphpsql/issues/674))",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.3.0",
            "SPDX-License-Identifier": "MIT"
        },
        "5.2.1preview": {
            "version": "5.2.1preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2018-05-30T18:09:04+00:00",
            "releaseNotes": "[Added]\n- Added support for Azure Key Vault for Always Encrypted for basic CRUD functionalities such that Always Encrypted feature is also available to Linux or macOS users \n- Added support for macOS High Sierra (requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017))\n[Fixed]\n- Issue [#577](https://github.com/Microsoft/msphpsql/issues/577) - Idle Connection Resiliency doesn't work with Column Encryption enabled connection\n- Issue [#678](https://github.com/Microsoft/msphpsql/issues/678) - Idle Connection Resiliency doesn't work with Connection Pooling bug\n- Issue [#705](https://github.com/Microsoft/msphpsql/issues/705) - AE - Retrieving a negative decimal value (edge case) as output parameter causes truncation\n- Issue [#706](https://github.com/Microsoft/msphpsql/issues/706) - AE - Cannot insert double with precision and scale (38, 38)\n- Issue [#707](https://github.com/Microsoft/msphpsql/issues/707) - AE - Fetching decimals / numerics as output parameters bound to PDO::PARAM_BOOL or PDO::PARAM_INT returns floats, not integers \n- Issue [#735](https://github.com/Microsoft/msphpsql/issues/735) - Extended the buffer size for PDO lastInsertId such that data types other than integers can be supported\n[Limitations]\n- No support for inout / output params when using sql_variant type\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. The subsequent locale setting will not work\n- Always Encrypted feature, which requires [MS ODBC Driver 17+](https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-2017)\n  - only Windows Certificate Store and Azure Key Vault are supported\n  - Issue [#716](https://github.com/Microsoft/msphpsql/issues/716) - With Always Encrypted feature enabled, Named Parameters in Sub Queries are not supported\n  - [Always Encrypted limitations](https://docs.microsoft.com/en-us/sql/connect/php/using-always-encrypted-php-drivers?view=sql-server-2017#limitations-of-the-php-drivers-when-using-always-encrypted)\n[Known Issues]\n- Connection pooling on Linux or macOS not recommended with [unixODBC](http://www.unixodbc.org/) < 2.3.6\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Features#pooling)\n- With ColumnEncryption enabled, calling stored procedure with XML parameter does not work (Issue [#674](https://github.com/Microsoft/msphpsql/issues/674))",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.2.1preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.2.0": {
            "version": "5.2.0",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2018-03-23T21:29:52+00:00",
            "releaseNotes": "[Added]\n- Added support for Always Encrypted with basic CRUD functionalities (see here [here] (https://github.com/Microsoft/msphpsql/wiki/Features#aebindparam))\n  - Support for Windows Certificate Store (use connection keyword ColumnEncryption)\n  - Support for inserting into and modifying an encrypted column\n  - Support for fetching from an encrypted column\n- Added support for PHP 7.2\n- Added support for MSODBC 17\n- Added support for Ubuntu 17 (requires MSODBC 17)\n- Added support for Debian 9 (requires MSODBC 17)\n- Added support for SUSE 12\n- Added Driver option to set the ODBC driver, Added \"Driver\" option, valid values are ODBC Driver 17 for SQL Server, ODBC Driver 13 for SQL Server, and ODBC Driver 11 for SQL Server\n  - The default driver is ODBC Driver 17 for SQL Server\n[Changed]\n- Implementation of PDO::lastInsertId($name) to return the last inserted sequence number if the sequence name is supplied to the function (lastInsertId)\n[Fixed]\n- Issue #555 - Hebrew strings truncation (requires MSODBC 17)\n- Adjusted precisions for numeric/decimal inputs with Always Encrypted\n- Support for non-UTF8 locales in Linux and macOS\n- Fixed crash caused by executing an invalid query in a transaction (Issue #434)\n- Added error handling for using PDO::SQLSRV_ATTR_DIRECT_QUERY or PDO::ATTR_EMULATE_PREPARES in a Column Encryption enabled connection\n- Added error handling for binding TEXT, NTEXT or IMAGE as output parameter (Issue #231)\n- PDO::quote with string containing ASCII NUL character (Issue #538)\n- Decimal types with no decimals are correctly handled when AE is enabled (PR #544)\n- BIGINT as an output param no longer results in value out of range exception when the returned value is larger than a maximum integer (PR #567)\n[Removed]\n- No longer support Ubuntu 15\n- Supplying tablename into PDO::lastInsertId($name) no longer return the last inserted row (lastInsertId [lastInsertId](https://github.com/Microsoft/msphpsql/wiki/Features#aebindparam))\n[Limitations]\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. The subsequent locale setting will not work\n- Always Encrypted functionalities are only supported using MSODBC 17\n- Always Encrypted limitations [Always Encrypted limitations](https://github.com/Microsoft/msphpsql/wiki/Features#aelimitation)\n- When using sqlsrv_query with Always Encrypted feature, SQL type has to be specified for each input (see here [here](https://github.com/Microsoft/msphpsql/wiki/Features#aebindparam))\n- No support for inout / output params when using sql_variant type\n[Known Issues]\n- Connection pooling on Linux doesn't work properly when using the MSODBC 17 preview\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples here [here](https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)\n- Calling stored procedure with XML parameter does not work with Column Encryption enabled (Issue #674)\n- Connection with Connection Resiliency enabled so not resume properly with Connection Pooling (Issue #678)\n- Cannot connect with both Connection Resiliency enabled and ColumnEncryption enabled (Issue #577)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.2.0",
            "SPDX-License-Identifier": "MIT"
        },
        "5.2.0RC1": {
            "version": "5.2.0RC1",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-12-21T23:25:29+00:00",
            "releaseNotes": "[Added]\n- Added support for Ubuntu 17 (requires ODBC 17 preview)\n- Added support for Debian 9 (requires ODBC 17 preview)\n[Fixed]\n- Adjusted precisions for numeric/decimal inputs with Always Encrypted\n- Fixed bugs when binding parameters with Always Encrypted\n- Fixed warnings as per Prefast code analysis\n[Limitations]\n- In Linux and macOS, setlocale() only takes effect if it is invoked before the first connection. The subsequent locale setting will not work\n- Always Encrypted functionalities are only supported using MSODBC 17 preview\n  - ODBC binaries for macOS available upon request\n- MSODBC 17 preview msodbcsql.msi only works for Windows10\n- Always Encrypted limitations\n- No support for inout / output params when using sql_variant type\n- Does not support non-UTF8 locales in Linux and macOS with Always Encrypted\n[Known Issues]\n- Connection pooling on Linux doesn't work properly when using the MSODBC17 preview\n- When pooling is enabled in Linux or macOS\n  - unixODBC <= 2.3.4 (Linux and macOS) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.2.0RC1",
            "SPDX-License-Identifier": "MIT"
        },
        "5.2.0RC": {
            "version": "5.2.0RC",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-12-20T20:32:08+00:00",
            "releaseNotes": "[Added]\n- Azure Active Directory Authentication with ActiveDirectoryPassword and SqlPassword\n[Fixed]\n- Fixed output parameter returning garbage when the parameter is initialized to a type that is different from the output type (issue #378)\n- Fixed incorrectly binding of unicode parameter when emulate prepare is on and the encoding is set at the statement level (issue #92)\n- Fixed binary column binding when emulate prepare is on (issue #140)\n[Known Issues]\n- User defined data types and SQL_VARIANT ([issue #127]\n- When pooling is enabled in Linux or MAC\n  - unixODBC 2.3.1 (Linux) and unixODBC 2.3.4 (MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples (https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.2.0RC",
            "SPDX-License-Identifier": "MIT"
        },
        "5.1.2preview": {
            "version": "5.1.2preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-11-22T17:11:43+00:00",
            "releaseNotes": "[Fixed]\n- PDO::quote with string containing ASCII NUL character (Issue [#538]( https://github.com/Microsoft/msphpsql/issues/538))\n- Appropriate error message is returned when calling nextRowset() or sqlsrv_next_result() on an empty result set (issue [#507 ](https://github.com/Microsoft/msphpsql/issues/507))\n- Decimal types with no decimals are correctly handled when AE is enabled (PR [#544](https://github.com/Microsoft/msphpsql/pull/544))\n- Search for installed ODBC drivers in Linux/macOS first before attempting to connect using the default ODBC driver \n- BIGINT as an output param no longer results in value out of range exception when the returned value is larger than a maximum integer ([PR #567](https://github.com/Microsoft/msphpsql/pull/567))\n[Limitations]\n- Always Encrypted functionalities are only supported using [MSODBC 17 preview](https://github.com/Microsoft/msphpsql/tree/dev/ODBC%2017%20binaries%20preview)\n  - ODBC binaries for macOS available upon request\n- MSODBC 17 preview msodbcsql.msi only works for Windows10\n- [Always Encrypted limitations](https://github.com/Microsoft/msphpsql/wiki/Features#aelimitation)\n- When using sqlsrv_query with Always Encrypted feature, SQL type has to be specified for each input (see [here](https://github.com/Microsoft/msphpsql/wiki/Features#aebindparam))\n- No support for inout / output params when using sql_variant type\n[Known Issues]\n- Connection pooling on Linux doesn't work properly when using the MSODBC17 preview\n- When pooling is enabled in Linux or MAC\n  - unixODBC <= 2.3.4 (Linux and MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.1.2preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.1.1preview": {
            "version": "5.1.1preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-10-25T20:44:27+00:00",
            "releaseNotes": "[Fixed]\n- PDO::quote with string containing ASCII NUL character (Issue [#538]( https://github.com/Microsoft/msphpsql/issues/538))\n- Appropriate error message is returned when calling nextRowset() or sqlsrv_next_result() on an empty result set (issue [#507 ](https://github.com/Microsoft/msphpsql/issues/507))\n- Decimal types with no decimals are correctly handled when AE is enabled (PR [#544](https://github.com/Microsoft/msphpsql/pull/544))\n- Search for installed ODBC drivers in Linux/macOS first before attempting to connect using the default ODBC driver \n- BIGINT as an output param no longer results in value out of range exception when the returned value is larger than a maximum integer ([PR #567](https://github.com/Microsoft/msphpsql/pull/567))\n[Limitations]\n- Always Encrypted functionalities are only supported using [MSODBC 17 preview](https://github.com/Microsoft/msphpsql/tree/dev/ODBC%2017%20binaries%20preview)\n  - ODBC binaries for macOS available upon request\n- MSODBC 17 preview msodbcsql.msi only works for Windows10\n- [Always Encrypted limitations](https://github.com/Microsoft/msphpsql/wiki/Features#aelimitation)\n- When using sqlsrv_query with Always Encrypted feature, SQL type has to be specified for each input (see [here](https://github.com/Microsoft/msphpsql/wiki/Features#aebindparam))\n- No support for inout / output params when using sql_variant type\n[Known Issues]\n- Connection pooling on Linux doesn't work properly when using the MSODBC17 preview\n- When pooling is enabled in Linux or MAC\n  - unixODBC <= 2.3.4 (Linux and MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples [here](https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.1.1preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.1.0preview": {
            "version": "5.1.0preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-09-20T20:45:58+00:00",
            "releaseNotes": "[Added]\n- Added support for Always Encrypted with basic CRUD functionalities (see [here](https://github.com/Microsoft/msphpsql/wiki/Features#aebindparam))\n  - Support for Windows Certificate Store (use connection keyword ColumnEncryption)\n  - Support for custom key store provider (use connection keywords ColumnEncryption, CEKeystoreProvider, CEKeystoreName, CEKeystoreEncryptKey)\n  - Support for inserting into an encrypted column\n  - Support for fetching from an encrypted column\n- Added support for MSODBC 17 preview\n- Added Driver option to set the ODBC driver, Added\"Driver\" option, valid values are ODBC Driver 13 for SQL Server,ODBC Driver 11 for SQL Server, and ODBC Driver 17 for SQL Server\n  - If the user intends to use the new Always Encrypted features, we recommend you to specify explicitly the 'Driver' option to 'ODBC Driver 17 for SQL Server' in the connection string\n[Limitation]\n- Always Encrypted functionalities are only supported using [MSODBC 17 preview](https://github.com/Microsoft/msphpsql/tree/dev/ODBC%2017%20binaries%20preview)\n  - ODBC binaries for macOS available upon request\n- MSODBC 17 preview msodbcsql.msi only works for Windows10\n- [Always Encrypted limitations](https://github.com/Microsoft/msphpsql/wiki/Features#aelimitation)\n- when using sqlsrv_query with Always Encrypted feature, SQL type has to be specified for each input (see [here](https://github.com/Microsoft/msphpsql/wiki/Features#aebindparam))\n- No support for inout / output params when using sql_variant type\n[Known Issues]\n- Connection pooling on Linux doesn't work properly if the user uses the MSODBC17 preview\n- PDO::quote returns truncated string with garbage characters appended if the string contains a ASCII NUL ('/0') character\n- When pooling is enabled in Linux or MAC\n  - unixODBC 2.3.4 or prior (Linux and MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples (https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.1.0preview",
            "SPDX-License-Identifier": "MIT"
        },
        "5.0.0preview": {
            "version": "5.0.0preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-07-31T22:11:41+00:00",
            "releaseNotes": "[Added]\n- Added support for PHP 7.2 Beta 1\n[Changed]\n- Implementation of PDO::lastInsertId($name) to return the last inserted sequence number if the sequence name is supplied to the function ([lastInsertId](https://github.com/Microsoft/msphpsql/wiki/Features#lastinsertid))\n[Removed]\n- No longer support Ubuntu 15\n- Supplying tablename into PDO::lastInsertId($name) no longer return the last inserted row ([lastInsertId](https://github.com/Microsoft/msphpsql/wiki/Features#lastinsertid))\n[Limitation]\n- No support for inout / output params when using sql_variant type\n[Known Issues]\n- When pooling is enabled in Linux or MAC\n  - unixODBC 2.3.4 or prior (Linux and MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples (https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-5.0.0preview",
            "SPDX-License-Identifier": "MIT"
        },
        "4.3.0": {
            "version": "4.3.0",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "hadisfard",
            "releaseDate": "2017-07-06T18:56:07+00:00",
            "releaseNotes": "[Added]\n- Added Unicode Column name support (issue #138). \n- Support for Always On Availability groups via Transparent Network IP Resolution (TNIR)  \n- Added support for sql_variant data type with limitation (issue #51 and issue #127) \n- Support drivers on Debian Jessie (tested on Debian 8.7) \n- Connection Resiliency support in Windows \n- Connection pooling support for Linux and macOS  \n- Support for Mac(El Capitan and above) \n- Azure Active Directory Authentication with ActiveDirectoryPassword and SqlPassword \n[Fixed]\n- Fixed PECL installation errors when PHP was installed from source (issue #213). \n- Fixed segmentation fault with PDOStatement::getColumnMeta() when the supplied column index is out of range (issue #224). \n- Fixed the assertion error (Linux) when fetching data from a binary column using the binary encoding (issue #226). \n- Fixed issue output parameters bound to empty string (issue #182). \n- Fixed issue with SQLSRV_ATTR_FETCHES_NUMERIC_TYPE when column return type is set on statement (issue #173). \n- Fixed a memory leak in closing connection resources. \n- Fixed load ordering issue in MacOS (issue #417) \n- Added a workaround for a bug in unixODBC 2.3.4 when connection pooling is enabled. \n- Fixed the issue with driver loading order in macOS \n- Fixed null returned when an empty string is set to an output parameter (issue #308). \n- Fixed incorrectly binding of unicode parameter when emulate prepare is on and the encoding is set at the statement level (issue #92). \n- Fixed binary column binding when emulate prepare is on (issue #140). \n- Improved performance by implementing a cache to store column SQL types and display sizes (issue #189). \n- Fixed issue with the unsupported attribute PDO::ATTR_PERSISTENT in connection (issue #65). \n- Fixed the issue with executing DELETE operation on a non-existent value (issue #336). \n- Fixed incorrectly binding of unicode parameter when emulate prepare is on and the encoding is set at the statement level (issue #92). \n- Fixed wrong value returned when fetching varbinary value on Linux (issue #270). \n- Fixed binary data not returned when the column is bound by name (issue #35). \n- Fixed exception thrown on closeCursor() when the statement has not been executed (issue #267). \n[Limitation]\n- Limited support for inout / output params when using sql_variant type\n[Known Issues]\n- When pooling is enabled in Linux or MAC\n  - unixODBC 2.3.4 or prior (Linux and MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples (https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.3.0",
            "SPDX-License-Identifier": "MIT"
        },
        "4.3.0RC1": {
            "version": "4.3.0RC1",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "hadisfard",
            "releaseDate": "2017-06-21T23:28:52+00:00",
            "releaseNotes": "[Added]\n- Added Transparent Network IP Resolution (TNIR) feature.\n[Fixed]\n- Fixed a memory leak in closing connection resources.\n- Fixed load ordering issue in MacOS [issue #417]\n[Limitation]\n- Limited support for inout / output params when using sql_variant type\n[Known Issues]\n- When pooling is enabled in Linux or MAC\n  - unixODBC 2.3.4 or prior (Linux and MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples (https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.3.0RC1",
            "SPDX-License-Identifier": "MIT"
        },
        "4.2.0preview": {
            "version": "4.2.0preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-05-19T19:32:37+00:00",
            "releaseNotes": "[Added]\n- Added support for sql_variant data type with limitation ([issue #51] and [issue #127])\n- This is a preview for Debian Jessie (tested on Debian 8.7)\n[Fixed]\n- Increased Test Coverage\n- General bug fixes after running static analyses\n[Limitation]\n- Limited support for input / output params when using sql_variant \n[Known Issues]\n- User defined data types \n- When pooling is enabled in Linux or MAC\n  - unixODBC 2.3.4 or prior (Linux and MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples (https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.2.0preview",
            "SPDX-License-Identifier": "MIT"
        },
        "4.1.9preview": {
            "version": "4.1.9preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "hadisfard",
            "releaseDate": "2017-05-10T23:37:05+00:00",
            "releaseNotes": "[Added]\n- Azure Active Directory Authentication with ActiveDirectoryPassword and SqlPassword\n[Fixed]\n- Fixed output parameter returning garbage when the parameter is initialized to a type that is different from the output type (issue #378)\n- Fixed incorrectly binding of unicode parameter when emulate prepare is on and the encoding is set at the statement level (issue #92)\n- Fixed binary column binding when emulate prepare is on (issue #140)\n[Known Issues]\n- User defined data types and SQL_VARIANT ([issue #127]\n- When pooling is enabled in Linux or MAC\n  - unixODBC 2.3.1 (Linux) and unixODBC 2.3.4 (MAC) might not return proper diagnostics information, such as error messages, warnings and informative messages\n  - due to this unixODBC bug, fetch large data (such as xml, binary) as streams as a workaround. See the examples (https://github.com/Microsoft/msphpsql/wiki/Connection-Pooling-on-Linux-and-Mac)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.1.9preview",
            "SPDX-License-Identifier": "MIT"
        },
        "4.1.8preview": {
            "version": "4.1.8preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-04-10T19:59:44+00:00",
            "releaseNotes": "[Added]\n- Connection Resiliency now supported in Windows\n- Connection pooling now works in MAC\n[Fixed]\n- Added a workaround for a bug in unixODBC 2.3.4 when connection pooling is enabled\n- Fixed the issue in MAC such that the order of which drivers are loaded first no longer matters\n- Improved performance by implementing a cache to store column SQL types and display sizes (issue #189)\n- Fixed issue with the unsupported attribute PDO::ATTR_PERSISTENT in connection (issue #65)\n- Fixed issue when deleting on something that doesn't exist (issue #336)\n[Known Issues]\n- User defined data types and SQL_VARIANT\n- Binary column binding with emulate prepare (issue #140)",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.1.8preview",
            "SPDX-License-Identifier": "MIT"
        },
        "4.1.7preview": {
            "version": "4.1.7preview",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-03-07T01:46:42+00:00",
            "releaseNotes": "[Added]\n- The early technical preview (ETP) with basic functionalities is now available on MAC OS X. Tested on OS versions El Capitan (OS X 10.11) \n[Fixed]\n- Fixed null returned when an empty string is set to an output parameter (issue #308)\n- Fixed memory leaks in buffered result sets\n- Fixed wrong value returned when fetching varbinary value on Linux (issue #270)\n- Fixed clang compile errors\n- Fixed binary data not returned when the column is bound by name (issue #35)\n- Fixed exception thrown on closeCursor() when the statement has not been executed (issue #267)\n[Known Issues]\n- User defined data types and SQL_VARIANT\n- Binary column binding with emulate prepare (issue #140)\n- In MAC OS X, if loading both sqlsrv and pdo_sqlsrv, the order matters (even when dynamically). For PDO scripts, load pdo_sqlsrv.so first\n- Segmentation fault may result when an unsupported attribute is used for connection\n- Connection pooling not working in MAC OS X",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.1.7preview",
            "SPDX-License-Identifier": "MIT"
        },
        "4.1.6.1": {
            "version": "4.1.6.1",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2017-02-08T19:13:44+00:00",
            "releaseNotes": "[Added]\n- Merged Windows and Linux source code.\n- Enabled connection pooling with unixODBC in Linux.\n[Fixed]\n- Fixed segmentation fault with PDOStatement::getColumnMeta() when the supplied column index is out of range.\n- Fixed the assertion error (Linux) when fetching data from a binary column using the binary encoding.\n- Fixed PECL installation errors when PHP was installed from source.",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.1.6.1",
            "SPDX-License-Identifier": "MIT"
        },
        "4.1.6": {
            "version": "4.1.6",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "hadisfard",
            "releaseDate": "2017-02-07T18:25:15+00:00",
            "releaseNotes": "[Added]\n- Merged Windows and Linux source code.\n- Enabled connection pooling with unixODBC in Linux.\n[Fixed]\n- Fixed segmentation fault with PDOStatement::getColumnMeta() when the supplied column index is out of range.\n- Fixed the assertion error (Linux) when fetching data from a binary column using the binary encoding.\n- Fixed PECL installation errors when PHP was installed from source.",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.1.6",
            "SPDX-License-Identifier": "MIT"
        },
        "4.0.8": {
            "version": "4.0.8",
            "state": "stable",
            "license": "The MIT License (MIT)",
            "releasedBy": "hadisfard",
            "releaseDate": "2016-12-19T21:16:50+00:00",
            "releaseNotes": "[Added]\n- SQLSRV_ATTR_FETCHES_NUMERIC_TYPE attribute support.\n- Unicode Column name support.\n[Fixed]\n- Fixed precision issues when double data type returned as strings using buffered queries.\n- Fixed issue with buffered cursor in PDO_SQLSRV driver when CharacterSet is UTF-8.\n- Fixed segmentation fault in error cases when error message is returned with emulate prepare attribute is set to true.\n- Fixed issue with empty output parameters on stored procedure.\n- Fixed memory leaks in buffered queries.",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.0.8",
            "SPDX-License-Identifier": "MIT"
        },
        "4.0.7": {
            "version": "4.0.7",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2016-11-17T20:04:46+00:00",
            "releaseNotes": "This version is for PHP 7 only.\nThis preview contains the PDO_SQLSRV drivers for PHP 7 (64-bit) with limitations. Upcoming release(s) will contain more functionality, bug fixes, and more.",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.0.7",
            "SPDX-License-Identifier": "MIT"
        },
        "4.0.6": {
            "version": "4.0.6",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2016-10-22T00:38:52+00:00",
            "releaseNotes": "This version is for PHP 7 only.\nThis preview contains the PDO_SQLSRV drivers for PHP 7 (64-bit) with limitations. Upcoming release(s) will contain more functionality, bug fixes, and more.",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.0.6",
            "SPDX-License-Identifier": "MIT"
        },
        "4.0.5": {
            "version": "4.0.5",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2016-09-30T20:45:53+00:00",
            "releaseNotes": "This version is for PHP 7 only.\nThis preview contains the PDO_SQLSRV drivers for PHP 7 (64-bit) with limitations. Upcoming release(s) will contain more functionality, bug fixes, and more.",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.0.5",
            "SPDX-License-Identifier": "MIT"
        },
        "4.0.4": {
            "version": "4.0.4",
            "state": "devel",
            "license": "The MIT License (MIT)",
            "releasedBy": "mbar",
            "releaseDate": "2016-09-27T18:19:43+00:00",
            "releaseNotes": "This version is for PHP 7 only.\nThis preview contains the PDO_SQLSRV drivers for PHP 7 (64-bit) with limitations (see Limitations below for details). Upcoming release(s) will contain more functionality, bug fixes, and more.",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-4.0.4",
            "SPDX-License-Identifier": "MIT"
        },
        "3.0.1": {
            "version": "3.0.1",
            "state": "stable",
            "license": "Apache 2.0",
            "releasedBy": "jguerin",
            "releaseDate": "2012-04-10T11:35:14+00:00",
            "releaseNotes": "Cumulative Update 1 for Microsoft Drivers 3.0 for PHP for SQL Server",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-3.0.1",
            "SPDX-License-Identifier": "Apache-2.0"
        },
        "2.0.1": {
            "version": "2.0.1",
            "state": "stable",
            "license": "Apache 2.0",
            "releasedBy": "jguerin",
            "releaseDate": "2011-06-02T18:05:03+00:00",
            "releaseNotes": "Introduction into PECL repository",
            "get": "http://pecl.php.net/get/pdo_sqlsrv-2.0.1",
            "SPDX-License-Identifier": "Apache-2.0"
        }
    },
    "summary": "Microsoft Drivers for PHP for SQL Server (PDO_SQLSRV)",
    "SPDX-License-Identifier": "MIT"
}