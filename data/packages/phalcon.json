{
    "category": "System",
    "deprecated": false,
    "description": "Phalcon is an open source full stack framework for PHP, written as a C-extension. Phalcon is optimized for high\n    performance. Its unique architecture allows the framework to always be memory resident, offering its functionality\n    whenever its needed, without expensive file stats and file reads that traditional PHP frameworks employ.",
    "latestReleaseDate": "2025-03-09T00:19:42+00:00",
    "latestVersion": "5.9.0",
    "license": "BSD 3-Clause License",
    "name": "phalcon",
    "php8Mentioned": true,
    "releases": {
        "5.9.0": {
            "version": "5.9.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2025-03-09T00:19:42+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Changed `Phalcon\\Filter\\Validation\\Validator\\Email` to allow UTF8 in local part. [#16637](https://github.com/phalcon/cphalcon/issues/16637)\n- Changed `Phalcon\\Cache\\Cache::getMultiple()` to use `mget()` when the `Phalcon\\Cache\\Adapter\\Redis` is used. [#16689](https://github.com/phalcon/cphalcon/issues/16689)\n- Changed `Storage\\Adapter\\Redis` to accept `ssl` in the options for secure connections. [#16711](https://github.com/phalcon/cphalcon/issues/16711)\n\n### Added\n- Added `dispatch:beforeCallAction` and `dispatch:afterCallAction` to last-minute modifications to handler and method (mostly for debugging).\n\n### Fixed\n\n- Fixed `Phalcon\\Forms\\Form` and `Phalcon\\Filter\\Validation` to correctly handle the `validate()` response when using validation class `beforeValidate()` [#16702](https://github.com/phalcon/cphalcon/issues/16702)\n- Fixed `Phalcon\\Support\\Debug` to use correct passed arguments in `set_error_handler` callback. PHP v7.2.0 deprecated `errcontext` and has been removed since php v8.0.0 [#16649](https://github.com/phalcon/cphalcon/issues/16686)\n- Fixed `Phalcon\\Http\\Response\\Cookies`, `Phalcon\\Http\\Response\\CookiesInterface` and `Phalcon\\Http\\Cookie` to use correct cookie default arguments, avoid deprecated null assign warning when trying to assign the same cookie twice [#16649](https://github.com/phalcon/cphalcon/issues/16649)\n- Fixed `Phalcon\\Encryption\\Crypt` to use `strlen` instead of `mb_strlen` for padding calculations [#16642](https://github.com/phalcon/cphalcon/issues/16642)\n- Fixed `Phalcon\\Filter\\Validation\\Validator\\File\\MimeType::validate` to close the handle when using `finfo` [#16647](https://github.com/phalcon/cphalcon/issues/16647)\n- Fixed `Phalcon\\Mvc\\Model\\Manager::getRelationRecords` to explicitly set the `referencedModel` in the conditions along with the `referencedFields` [#16655](https://github.com/phalcon/cphalcon/pull/16655)\n- Fixed `Phalcon\\Image\\Adapters\\AbstractAdapter::watermark` to correctly calculate the Y offset [#16658](https://github.com/phalcon/cphalcon/issues/16658)\n- Fixed `Phalcon\\Dispatcher\\AbstractDispatcher` when calling action methods that do not define parameters to prevent `Unknown named parameter` error.\n- Fixed `Phalcon\\Di\\Injectable` to reference the correct instance of `Phalcon\\Di\\Di` in the docblock property [#16634](https://github.com/phalcon/cphalcon/issues/16634)\n- Fixed `Phalcon\\Filter\\Filter` to have the correct docblock for IDE completion\n- Fixed `Phalcon\\Mvc\\Model\\Query` to use the lifetime in the \"cache\" service if none has been supplied by the options [#16696](https://github.com/phalcon/cphalcon/issues/16696)\n- Fixed `Phalcon\\Session\\Adapter\\Stream::gc()` to throw an exception if something is wrong with `glob()` [#16713](https://github.com/phalcon/cphalcon/issues/16713)\n- Fixed `Phalcon\\Http\\Request::getBasicAuth()` to return a `null` password if not defined on the server [#16668](https://github.com/phalcon/cphalcon/issues/16668)",
            "get": "https://pecl.php.net/get/phalcon-5.9.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.8.0": {
            "version": "5.8.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2024-07-09T22:45:33+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Changed `Phalcon\\Mvc\\Model`, `Phalcon\\Support\\Collection` and `Phalcon\\Support\\Registry` to correctly implement   `\\Serializable` interface. [#16591](https://github.com/phalcon/cphalcon/issues/16591)\n- Changed the `Phalcon\\Mvc\\Router\\Group::getHostname()` to return `null` also. [#16601](https://github.com/phalcon/cphalcon/issues/16601)\n- Changed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::compileSource` to also return `array` [#16608](https://github.com/phalcon/cphalcon/issues/16608)\n\n### Added\n\n- Added events and `Phalcon\\Events\\Manager` for `Phalcon\\Storage\\Adapter\\Apcu`,\n  `Phalcon\\Storage\\Adapter\\Redis`,\n  `Phalcon\\Storage\\Adapter\\Memory`,\n  `Phalcon\\Storage\\Adapter\\Libmemcached`,\n  `Phalcon\\Storage\\Adapter\\Stream`,\n  `Phalcon\\Storage\\Adapter\\Weak`,\n  `Phalcon\\Cache\\Adapter\\Apcu`,\n  `Phalcon\\Cache\\Adapter\\Redis`,\n  `Phalcon\\Cache\\Adapter\\Memory`,\n  `Phalcon\\Cache\\Adapter\\Libmemcached`,\n  `Phalcon\\Cache\\Adapter\\Stream`,\n  `Phalcon\\Cache\\Adapter\\Weak`\n  `Phalcon\\Cache\\AbstractCache`. [#16606](https://github.com/phalcon/cphalcon/issues/16606)\n\n### Fixed\n\n- Fixed `Phalcon\\Support\\Helper\\PascalCase` causing memory leak by anonymous function [#16593](https://github.com/phalcon/cphalcon/issues/16593)\n- Fixed `Phalcon\\Mvc\\Model\\Query` to rollback failed transactions and re-throw exception for data consistency [#16604](https://github.com/phalcon/cphalcon/issues/16604)",
            "get": "https://pecl.php.net/get/phalcon-5.8.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.7.0": {
            "version": "5.7.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2024-05-20T13:21:21+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Changed `Phalcon\\Support\\HelperFactory` to use the internal mapper for better memory management [#16571](https://github.com/phalcon/cphalcon/issues/16571)\n\n### Added\n\n- New ini setting `phalcon.form.strict_entity_property_check` for `Phalcon\\Forms\\Form` to enable strict entity property checking. [#16567](https://github.com/phalcon/cphalcon/issues/16567)\n\n### Fixed\n\n- Fixed `Phalcon\\Mvc\\Cli\\Router` to extend the `Phalcon\\Mvc\\Cli\\RouterInterface` [#16551](https://github.com/phalcon/cphalcon/issues/16551)\n- Fixed `Phalcon\\Filter\\Validation\\Validator\\StringLength::validate()` to correctly use the `include` parameter [#16560](https://github.com/phalcon/cphalcon/issues/16560)\n- Fixed `Phalcon\\Db\\Column::TYPE_BINARY` and `Phalcon\\Db\\Column::TYPE_TINYINTEGER` to have unique values [#16532](https://github.com/phalcon/cphalcon/issues/16532)\n- Fixed `Phalcon\\Forms\\Form` to bind only existing properties on entities, based on `phalcon.form.strict_entity_property_check` setting. [#16567](https://github.com/phalcon/cphalcon/issues/16567)\n- Fixed `Phalcon\\Filter\\Sanitize\\BoolVal` to correctly handle integers. [#16582](https://github.com/phalcon/cphalcon/issues/16582)",
            "get": "https://pecl.php.net/get/phalcon-5.7.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.6.2": {
            "version": "5.6.2",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2024-03-14T17:11:51+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Changed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::filter` to use the helper with `upper` and `lower` for UTF-8 characters [#16543](https://github.com/phalcon/cphalcon/issues/16543)\n- Changed `Phalcon\\Di\\AbstractInjectionAware` to extend `stdClass` for PHP 8.2 deprecation warnings [#16543](https://github.com/phalcon/cphalcon/issues/16543)",
            "get": "https://pecl.php.net/get/phalcon-5.6.2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.6.1": {
            "version": "5.6.1",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2024-02-08T17:50:31+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Changed `Phalcon\\Cli\\Router::setDefaultAction` and `Phalcon\\Cli\\Router::setDefaultModule` to return the object back for a fluent interface [#16328](https://github.com/phalcon/cphalcon/issues/16328)\n\n### Fixed\n\n- Fixed `Phalcon\\Db\\Adapter\\Pdo\\Postgresql::describeColumns()` to return the correct string back [#16371](https://github.com/phalcon/cphalcon/issues/16371)\n- Fixed `Phalcon/Filter/Validation::validate()` and `Phalcon/Filter/Validation/ValidationInterface::validate()` to return also `bool` [#16337](https://github.com/phalcon/cphalcon/issues/16337)\n- Fixed `Phalcon\\Mvc\\Model::toArray` to ignore getters when the field name is `source`. [#16514](https://github.com/phalcon/cphalcon/issues/16514)\n- Fixed `Phalcon\\Http\\Request::getPut` to correctly get form encoded data [#16519](https://github.com/phalcon/cphalcon/issues/16519)\n- Fixed deprecation warning in callables `Use of \"static\" in callables is deprecated` for PHP 8.2+ [#16263](https://github.com/phalcon/cphalcon/issues/16263)",
            "get": "https://pecl.php.net/get/phalcon-5.6.1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.6.0": {
            "version": "5.6.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2024-01-09T23:42:28+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Changed `Phalcon\\Db\\Adapter\\Pdo\\Mysql` to not use specific flags for `PDO` (`PDO::ATTR_EMULATE_PREPARES` or `PDO::ATTR_STRINGIFY_FETCHES`) for performance reasons [#16474](https://github.com/phalcon/cphalcon/issues/16474)\n- Merged `Phalcon\\Db\\AbstractDb` with `Phalcon\\Db\\Adapter\\AbstractAdapter` since the former was not used [#16474](https://github.com/phalcon/cphalcon/issues/16474)\n\n### Added\n\n- Added `resetColumns()`, `resetFrom()`, `resetWhere()`, `resetGroupBy()`, `resetHaving()`, `resetOrderBy()`, `resetLimit()`, `resetFlags()` to the `Phalcon\\Datamapper\\Query\\AbstractQuery` to allow resetting query filters.\n\n### Fixed\n\n- Fixed `Phalcon\\Mvc\\Model::count` to ignore the `order` parameter (needed for Posgresql) [#16471](https://github.com/phalcon/cphalcon/issues/16471)\n- Fixed `Phalcon\\Mvc\\Model::toArray` added parameter to ignore getters in order not to break serialize. [#16490](https://github.com/phalcon/cphalcon/issues/16490)\n- Fixed `Phalcon\\Mvc\\Model::toArray` changing the conditionals for population to remove segfault. [#16498](https://github.com/phalcon/cphalcon/issues/16498)",
            "get": "https://pecl.php.net/get/phalcon-5.6.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.5.0": {
            "version": "5.5.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2023-12-25T18:28:30+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Shifted minimal support from PHP 7.4 to PHP 8.0 [#16477](https://github.com/phalcon/cphalcon/issues/16477)\n- Changed `Phalcon\\Mvc\\Model::toArray` to use getters if present [#16320](https://github.com/phalcon/cphalcon/issues/16320)\n- Adjusted return types identical to original interface `int|false` in `Phalcon\\Session\\Adapter\\*::gc()` [#16477](https://github.com/phalcon/cphalcon/issues/16477)\n- Changed return type of `Phalcon\\Config\\Adapter\\Ini::cast()` to `mixed` [#16477](https://github.com/phalcon/cphalcon/issues/16477)\n\n### Added\n\n- Added support for PHP 8.3 [#16477](https://github.com/phalcon/cphalcon/issues/16477)\n\n### Fixed\n\n- Fixed `Phalcon\\Filter\\Validation\\Validator\\Numericality` to return false when input has spaces [#16461](https://github.com/phalcon/cphalcon/issues/16461)\n- Fixed `Phalcon\\Mvc\\Model\\ResultsetSimple::toArray` to ignore numeric indexes in case results come as not `fetch_assoc` [#16467](https://github.com/phalcon/cphalcon/issues/16467)",
            "get": "https://pecl.php.net/get/phalcon-5.5.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.4.0": {
            "version": "5.4.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2023-10-25T15:22:57+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Changed\n\n- Changed `Phalcon\\Mvc\\Model::getMessages()` to also filter with an array of fields [#16265](https://github.com/phalcon/cphalcon/issues/16265)\n- Changed `Phalcon\\DataMapper\\Query\\Select::columns()` to accept an array of columns (keys as aliases) instead of `func_get_args` [#16451](https://github.com/phalcon/cphalcon/issues/16451)\n- Changed `Phalcon\\Html\\Helper\\AbstractSeries::__invoke()` to no longer clear the internal store when called [#16441](https://github.com/phalcon/cphalcon/issues/16441)\n\n### Added\n\n- Added the ability to define interpolator characters for the `Phalcon\\Logger\\Formatter\\Line` [#16430](https://github.com/phalcon/cphalcon/issues/16430)\n- Added `Phalcon\\Html\\Helper\\AbstractSeries::reset()` to clear the internal store when needed [#16441](https://github.com/phalcon/cphalcon/issues/16441)\n\n### Fixed\n\n- Model Annotation strategy did not work with empty_string [#16426](https://github.com/phalcon/cphalcon/issues/16426)\n- View::reset() sets content to null instead of default empty string [#16437](https://github.com/phalcon/cphalcon/issues/16437)\n- Fixed `Phalcon\\Filter\\Validation\\Validator\\Size\\*` validators to correctly detect the size of uploaded files [#16390](https://github.com/phalcon/cphalcon/issues/16390)",
            "get": "https://pecl.php.net/get/phalcon-5.4.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.3.1": {
            "version": "5.3.1",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2023-09-12T13:17:32+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Fixed\n- Fixed infinite save loop in `Phalcon\\Mvc\\Model::save()` [#16395](https://github.com/phalcon/cphalcon/issues/16395)\n- Fixed undefined column with columnMap and model caching [#16420](https://github.com/phalcon/cphalcon/issues/16420)\n- Fixed memory leak in `Phalcon\\Mvc\\Router::handle()` [#16431](https://github.com/phalcon/cphalcon/pull/16431)",
            "get": "https://pecl.php.net/get/phalcon-5.3.1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.3.0": {
            "version": "5.3.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2023-08-15T20:34:53+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Added\n\n- Added `Phalcon\\Mvc\\Model::appendMessagedFrom` for code consistency and to add messages from another model [#16391](https://github.com/phalcon/cphalcon/issues/16391)\n- Added `Phalcon\\Autoload\\Loader::isRegistered` for debugging purposes [#16391](https://github.com/phalcon/cphalcon/issues/16391)\n- Added `Phalcon\\Mvc\\Model\\Metadata::initializeMetadata` [#16393] (https://github.com/phalcon/cphalcon/issues/16393)\n- Added `Phalcon\\Mvc\\Model\\Metadata::getMetaDataUniqueKey` [#16393] (https://github.com/phalcon/cphalcon/issues/16393)\n- Added `Phalcon\\Mvc\\Model\\Metadata::getColumnMapUniqueKey` [#16393] (https://github.com/phalcon/cphalcon/issues/16393)\n- Added `Phalcon\\Encryption\\Security\\JWT\\Builder::addHeader()` to allow adding custom headers [#16396](https://github.com/phalcon/cphalcon/issues/16396)\n\n### Changed\n\n- Refactored `Phalcon\\Mvc\\Model::doLowUpdate` and `Phalcon\\Mvc\\Model::postSaveRelatedRecords` for better code logic and a clearer separation of behaviour, although it lead to partially repeated code. [#16391](https://github.com/phalcon/cphalcon/issues/16391)\n- Cleaned `Phalcon\\Mvc\\Model\\Metadata::initialize` [#16393] (https://github.com/phalcon/cphalcon/issues/16393)\n\n### Fixed\n\n- Parse multipart/form-data from PUT request [#16271](https://github.com/phalcon/cphalcon/issues/16271)\n- Set Dynamic Update by default system-wide [#16343](https://github.com/phalcon/cphalcon/issues/16343)\n- Fixed memory leak in Micro application [#16404](https://github.com/phalcon/cphalcon/pull/16404)",
            "get": "https://pecl.php.net/get/phalcon-5.3.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.2.3": {
            "version": "5.2.3",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2023-07-26T18:19:37+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Fixed\n- Tried to reproduce the behavior described in #16244 but had no success. [#16244](https://github.com/phalcon/cphalcon/issues/16244)\n- Extended `Phalcon\\Di\\Injectable` from `stdClass` to remove the deprecation warning (dynamic properties) for PHP 8.2 [#16308](https://github.com/phalcon/cphalcon/issues/16308)\n- Corrected the return type of `Phalcon\\Mvc\\View::getVar()` so that stubs can be accurate. [#16276](https://github.com/phalcon/cphalcon/issues/16276)\n- Changed all the `encode`/`decode` methods for JSON to use the `Phalcon\\Support\\Helper\\Json\\*` classes. [#15608](https://github.com/phalcon/cphalcon/issues/15608)\n- Changed the `Phalcon\\Support\\Helper\\Json\\*` classes to clear up `json_last_error()` before doing any conversions. [#15608](https://github.com/phalcon/cphalcon/issues/15608)\n- Fixed `Phalcon\\Http\\Request::getJsonRawBody` to protect from empty body [#16373](https://github.com/phalcon/cphalcon/issues/16373)\n\n### Added\n- Added `getAdapter()` in `Phalcon\\Mvc\\Model\\Metadata` to retrieve the internal cache adapter if necessary. [#16244](https://github.com/phalcon/cphalcon/issues/16244)\n- Added `Phalcon\\Storage\\Adapter\\Weak` implemented with WeakReference has a cache/retrieval solution for objects not yet collected by the Garbage Collection. [#16372](https://github.com/phalcon/cphalcon/issues/16372)",
            "get": "https://pecl.php.net/get/phalcon-5.2.3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.2.2": {
            "version": "5.2.2",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2023-06-18T21:24:04+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Fixed\n- Fixed `Encryption\\Crypt::checkCipherHashIsAvailable` to allow proper setting of the hash [#16314](https://github.com/phalcon/cphalcon/issues/16314)\n- Removed `unlikely` from `if` statements from the Stream storage adapter and Json serializer [#16339](https://github.com/phalcon/cphalcon/issues/16339)\n- Fixed `Storage\\Adapter\\Stream::get()/set()` to correctly calculate the path if the prefix is present in the key [#16348](https://github.com/phalcon/cphalcon/issues/16348)\n- Fixed `Html\\Helper\\Input\\Checkbox` to correctly process empty values [#15959](https://github.com/phalcon/cphalcon/issues/15959)",
            "get": "https://pecl.php.net/get/phalcon-5.2.2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.2.1": {
            "version": "5.2.1",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2023-02-28T19:44:01+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Fixed\n- Fixed compilation under PHP 8.2 [#16293](https://github.com/phalcon/cphalcon/issues/16293), [#16295](https://github.com/phalcon/cphalcon/issues/16295)",
            "get": "https://pecl.php.net/get/phalcon-5.2.1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.2.0": {
            "version": "5.2.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2023-02-27T02:36:28+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Fixed\n- Fixed `Phalcon\\Html\\Helper\\Title::prepend` to correctly prepend text in subsequent calls [#16283](https://github.com/phalcon/cphalcon/issues/16283)\n\n### Added\n- Added support for PHP 8.2 [#15973](https://github.com/phalcon/cphalcon/issues/15973)",
            "get": "https://pecl.php.net/get/phalcon-5.2.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.1.4": {
            "version": "5.1.4",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2023-01-10T22:17:01+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n### Fixed\n- Fixed `Phalcon\\Acl\\Adapter\\Memory::isAllowed` to not use the deprecated `ReflectionType::getClass` [#16255](https://github.com/phalcon/cphalcon/issues/16255)",
            "get": "https://pecl.php.net/get/phalcon-5.1.4",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.1.3": {
            "version": "5.1.3",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-12-25T04:59:23+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Mvc\\Micro::handle` to type check an object for the `finish` [#16240](https://github.com/phalcon/cphalcon/issues/16240)\n- Fixed `Phalcon\\DI\\Service::resolve` to not call the `get()` from the container and cause an infinite loop [#15032](https://github.com/phalcon/cphalcon/issues/15032)",
            "get": "https://pecl.php.net/get/phalcon-5.1.3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.1.2": {
            "version": "5.1.2",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-12-01T02:15:43+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Support\\Debug` to correctly calculate the documents URL for the hyperlinks [#16223](https://github.com/phalcon/cphalcon/issues/16223)\n- Fixed `Phalcon\\Html\\TagFactory` docblock for autocompletion (https://github.com/phalcon/cphalcon/commit/0129658f3ac468dcc5294d401403e166302a8069)\n- Fixed `Phalcon\\Db\\Profiler` by correctly calculating the seconds (reapplied changes) [#15822](https://github.com/phalcon/cphalcon/issues/15822)\n- Added `Phalcon\\Html\\TagFactory` to the `Phalcon\\Di\\FactoryDefault\\Cli` [#16233](https://github.com/phalcon/cphalcon/issues/16233)",
            "get": "https://pecl.php.net/get/phalcon-5.1.2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.1.1": {
            "version": "5.1.1",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-11-13T09:48:48+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Filter::sanitize` to return correct data when `noRecursive` is `true` [#16199](https://github.com/phalcon/cphalcon/issues/16199)\n- Fixed `Phalcon\\Html\\Escaper::html` to not return `null` when a zero string is passed [#16202](https://github.com/phalcon/cphalcon/issues/16202)",
            "get": "https://pecl.php.net/get/phalcon-5.1.1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.1.0": {
            "version": "5.1.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-11-01T22:56:08+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::isTagFactory` to correctly detect a `TagFactory` object without throwing an error [#16097](https://github.com/phalcon/cphalcon/issues/16097)\n- Fixed default values for `Phalcon\\Cli`, `Phalcon\\Dispatcher` and `Phalcon\\Application` components to ensure not `null` values are passed to methods [#16186](https://github.com/phalcon/cphalcon/issues/16186)\n- Fixed `Phalcon\\Form::clear` to correctly clear the elements and not recurse [#15956](https://github.com/phalcon/cphalcon/issues/15956)\n\n## Added\n- Added `Phalcon\\Http\\Request::getPatch()` to get a value from a PATCH request [#16188](https://github.com/phalcon/cphalcon/issues/16188)\n- Added `Phalcon\\Http\\Request::getFilteredPatch()` to get a value filtered from a PATCH request [#16188](https://github.com/phalcon/cphalcon/issues/16188)\n- Added `Phalcon\\Http\\Request::hasPatch()` to check if a value exist in a PATCH request [#16188](https://github.com/phalcon/cphalcon/issues/16188)",
            "get": "https://pecl.php.net/get/phalcon-5.1.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.5": {
            "version": "5.0.5",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-10-24T19:49:52+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Config\\Config::setData` to pass the `insensitive` flag to child objects [#16171](https://github.com/phalcon/cphalcon/issues/16171)\n- Fixed `Phalcon\\Config\\Adapter\\Groupped::__construct` to pass the `insensitive` flag to child objects [#16171](https://github.com/phalcon/cphalcon/issues/16171)\n- Fixed `Phalcon\\Session\\Manager::setName`, removing the regex check for the name for custom adapters to work with `create_sid()` [#16170](https://github.com/phalcon/cphalcon/issues/16170)\n- Fixed `PdoResult::fetchAll` when passed class name in 2nd argument [#16177](https://github.com/phalcon/cphalcon/issues/16177)\n- Fixed `Forms\\Form::label` to accept an array as a default variable [#16180](https://github.com/phalcon/cphalcon/issues/16180)",
            "get": "https://pecl.php.net/get/phalcon-5.0.5",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.4": {
            "version": "5.0.4",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-10-18T00:52:46+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Encryption\\Security` to take into account the `workFactor` in the cost calculation [#16153](https://github.com/phalcon/cphalcon/issues/16153)\n- Removed double unserializing during Model caching [#16035](https://github.com/phalcon/cphalcon/issues/16035), [#16131](https://github.com/phalcon/cphalcon/issues/16131)\n- Fixed `Phalcon\\Db\\Adapter\\Pdo\\Mysql::describeIndexes` to assign an empty string in the index type of `null` and remove warnings [#16157](https://github.com/phalcon/cphalcon/issues/16157)\n- Fixed `Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeIndexes` to assign an empty string in the index type of `null` and remove warnings [#16157](https://github.com/phalcon/cphalcon/issues/16157)\n- Fixed `Phalcon\\Mvc\\Model\\Manager::notifyEvent` to return `true` instead of `null` on success [#16161](https://github.com/phalcon/cphalcon/issues/16161)\n- Fixed `Phalcon\\Encryption\\Security\\JWT\\Validator::validateExpiration` to correctly validate the `exp` claim [#16166](https://github.com/phalcon/cphalcon/issues/16166)",
            "get": "https://pecl.php.net/get/phalcon-5.0.4",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.3": {
            "version": "5.0.3",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-10-06T21:04:54+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Fixed `Phalcon\\Filter\\Sanitize\\StringVal` to accept flags for `htmlspecialchars()` [#16135](https://github.com/phalcon/cphalcon/issues/16135)\n\n## Fixed\n- Fixed `Phalcon\\Html\\Escaper::attributes()` to honor the `$flags` set for `htmlspecialchars()` [#16134](https://github.com/phalcon/cphalcon/issues/16134)",
            "get": "https://pecl.php.net/get/phalcon-5.0.3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.2": {
            "version": "5.0.2",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-09-27T15:42:08+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Html\\Escaper::attributes()` to accept any value and transform it to string [#16123](https://github.com/phalcon/cphalcon/issues/16123)\n- Fixed `Phalcon\\Logger\\AbstractLogger::getLevelNumber()` to better check for string levels [#16123](https://github.com/phalcon/cphalcon/issues/16123)",
            "get": "https://pecl.php.net/get/phalcon-5.0.2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.1": {
            "version": "5.0.1",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "niden",
            "releaseDate": "2022-09-23T19:53:43+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Encryption\\Security\\JWT\\Token\\Token::validate()` to correctly call validator methods [#16115](https://github.com/phalcon/cphalcon/issues/16115)\n\n## Added\n- Added `Phalcon\\Encryption\\Security\\JWT\\Validator::get()` and `Phalcon\\Encryption\\Security\\JWT\\Validator::set()` for validation data [#16115](https://github.com/phalcon/cphalcon/issues/16115)",
            "get": "https://pecl.php.net/get/phalcon-5.0.1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0": {
            "version": "5.0.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-09-22T23:36:45+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Changed `Phalcon\\Logger\\Adapter\\Stream::process` to open the log file, check for locks, write contents and close the stream [#16072](https://github.com/phalcon/cphalcon/issues/16072)\n- Changed getters and setters from shorthand format to full methods [#16102](https://github.com/phalcon/cphalcon/issues/16102)\n- Changed return types to `array` in `Phalcon\\Annotations\\Reflection` class methods [#16106](https://github.com/phalcon/cphalcon/issues/16106)\n- Changed `Phalcon\\Html\\Escaper::attributes()` to also accept an array of attributes [#16108](https://github.com/phalcon/cphalcon/issues/16108)\n\n## Fixed\n- Fixed and improved return type of `object` and `?object` [#16023](https://github.com/phalcon/cphalcon/issues/16023)\n- Fixed `Phalcon\\Filter\\Validation\\Validator\\Digit` to use only strings for `ctype_*` calls [#16064](https://github.com/phalcon/cphalcon/issues/16064)\n- Fixed `Phalcon\\Flash\\AbstractFlash::outputMessage` to return the message (implicitFlush) [#16063](https://github.com/phalcon/cphalcon/issues/16063)\n- Fixed `Phalcon\\Filter\\Validation\\Validator\\Numericality` to correctly detect illegal characters within string numbers [#16070](https://github.com/phalcon/cphalcon/issues/16070)\n- Fixed segmentation fault on Reflection of `Phalcon\\Mvc\\Model` class [#16080](https://github.com/phalcon/cphalcon/issues/16080)\n- Fixed segmentation fault on Reflection [#16096](https://github.com/phalcon/cphalcon/issues/16096)\n\n## Added\n- Added `Phalcon\\Encryption\\Security\\JWT\\Token::validate()` to validate a token's claims [#16094](https://github.com/phalcon/cphalcon/issues/16094)\n- Added `Phalcon\\Encryption\\Security\\JWT\\Token::verify()` to verify a token's signature [#16094](https://github.com/phalcon/cphalcon/issues/16094)\n- Added `Phalcon\\Encryption\\Security\\JWT\\Validator::getErrors()` to return any errors with the validation as an array [#16094](https://github.com/phalcon/cphalcon/issues/16094)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0RC4": {
            "version": "5.0.0RC4",
            "state": "beta",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-08-08T19:48:07+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Reverted to single quotes when volt code generates PHP code.\n- Any `tag` helpers only accept parameters with double quotes\n- Renamed `Phalcon\\Tag::form()` to `Phalcon\\Tag::formLegacy` (helper `form_legacy`) [#16019](https://github.com/phalcon/cphalcon/issues/16019)\n- Fixed\n- `Phalcon\\Cli\\Router::getMatchedRoute()`\n- `Phalcon\\Cli\\RouterInterface::getMatchedRoute()`\n- `Phalcon\\Mvc\\Router::getMatchedRoute()`\n- `Phalcon\\Mvc\\RouterInterface::getMatchedRoute()` to return `RouterInterface` or `null` [#16030](https://github.com/phalcon/cphalcon/issues/16030)\n- Fixed\n- `Phalcon/Storage/Serializer/Base64::unserialize()`\n- `Phalcon/Storage/Serializer/Igbinary::unserialize()`\n- `Phalcon/Storage/Serializer/Igbinary::serialize()`\n- `Phalcon/Storage/Serializer/Php::unserialize()` to reset isSuccess value [#16040](https://github.com/phalcon/cphalcon/issues/16040)\n- Fixed `Phalcon\\Paginator\\Adapter\\Model::paginate()` fix group parameter breaking total items [#16042](https://github.com/phalcon/cphalcon/issues/16042)\n- Fixed `Phalcon\\Mvc\\Model::doLowUpdate()` prevent RawValue getting overwritten [#16037](https://github.com/phalcon/cphalcon/issues/16037)\n- Refactored `Phalcon\\Image\\*`\n- Reorganized code in the image adapters\n- Simplified various areas, speeding up processing\n- Removed `getInternalImImage()` (same as `getImage()`) for `Phalcon\\Image\\Adapter\\Imagick`\n- Added better support for webm images [#15977](https://github.com/phalcon/cphalcon/issues/15977)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0RC4",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0RC3": {
            "version": "5.0.0RC3",
            "state": "beta",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-07-12T11:53:27+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- Fixed `Phalcon\\Tag::textArea()` to check if the value is `null` before calling `htmlspecialchars` [#15992](https://github.com/phalcon/cphalcon/issues/15992)\n- Fixed\n  - `Phalcon/Filter/Validation/Validator/Alnum`\n  - `Phalcon/Filter/Validation/Validator/Alpha`\n  - `Phalcon/Filter/Validation/Validator/Confirmation`\n  - `Phalcon/Filter/Validation/Validator/CreditCard`\n  - `Phalcon/Filter/Validation/Validator/StringLength/Max`\n  - `Phalcon/Filter/Validation/Validator/StringLength/Min` to check if the value is `null` before calling internal PHP methods [#15992](https://github.com/phalcon/cphalcon/issues/15992)\n- Fixed `Phalcon\\Html\\Helper\\Title` to properly use indent and delimiter [#15984](https://github.com/phalcon/cphalcon/issues/15984)\n- Fixed `Phalcon\\Mvc\\View\\Engine\\Volt::isIncluded()` and `Phalcon\\Mvc\\View\\Engine\\Volt::length()` to check for null values before calls to php methods [#15984](https://github.com/phalcon/cphalcon/issues/15984)\n- Fixed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::expression()` to use double quotes instead of single ones [#15984](https://github.com/phalcon/cphalcon/issues/15984)\n- Fixed `Phalcon\\Support\\Version::getPart()` to always return string values [#15984](https://github.com/phalcon/cphalcon/issues/15984)\n- Fixed `Phalcon\\Dispatcher\\DispatcherInterface::setModuleName()` to accept `null` [#15997](https://github.com/phalcon/cphalcon/issues/15997)\n- Fixed `Phalcon\\Dispatcher\\AbstractDispatcher::setModuleName()` to accept `null` [#15997](https://github.com/phalcon/cphalcon/issues/15997)\n- Fixed `Phalcon\\Dispatcher\\AbstractDispatcher::getModuleName()` to also return `null` [#15997](https://github.com/phalcon/cphalcon/issues/15997)\n\n## Added\n- Added support for `webp` images for `Phalcon\\Image\\Adapter\\Gd` [#15977](https://github.com/phalcon/cphalcon/issues/15977)\n- Added `Phalcon\\Mvc\\Model\\ManagerInterface::getBuilder()` to return the existing builder (created by `createBuilder()`) [#15966](https://github.com/phalcon/cphalcon/issues/15966)\n- Added `Phalcon\\Mvc\\Model\\Manager::getBuilder()` to return the existing builder (created by `createBuilder()`) [#15966](https://github.com/phalcon/cphalcon/issues/15966)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0RC3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0RC2": {
            "version": "5.0.0RC2",
            "state": "beta",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-06-09T22:54:42+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Changed the `StringVal` filter to now use `htmlspecialchars()` [#15978](https://github.com/phalcon/cphalcon/issues/15978)\n\n## Fixed\n- Fixed `Phalcon\\Http\\Response::getQualityHeader()` to check if the server variable is `null` before performing `preg_split` [#15984](https://github.com/phalcon/cphalcon/issues/15984)\n\n## Added\n- Added `StringValLegacy` filter using `filter_var()` for PHP less than 8.1 [#15978](https://github.com/phalcon/cphalcon/issues/15978)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0RC2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0RC1": {
            "version": "5.0.0RC1",
            "state": "beta",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-05-31T16:34:39+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Changed `Phalcon\\Session\\Bag::__construct()` to accept a `Phalcon\\Session\\Manager` as the first parameter and `name` as the second one [#15904](https://github.com/phalcon/cphalcon/issues/15904)\n- Changed `Phalcon\\Logger\\Logger` to no longer depend on PSR interfaces [#15925](https://github.com/phalcon/cphalcon/issues/15925)\n- Changed `Phalcon\\Cache\\Cache` to no longer depend on PSR interfaces [#15927](https://github.com/phalcon/cphalcon/issues/15927)\n- Changed `Phalcon\\Html\\Link` to no longer depend on PSR interfaces [#15930](https://github.com/phalcon/cphalcon/issues/15930)\n\n## Fixed\n- Fixed `Phalcon\\Html\\Helper\\Input\\Numeric` to produce correct elements [#15896](https://github.com/phalcon/cphalcon/issues/15896)\n- Fixed `Phalcon\\Storage\\Adapter\\*` to correctly store `null` values [#15904](https://github.com/phalcon/cphalcon/issues/15904)\n\n## Added\n- Added `Phalcon\\Encryption\\Crypt::isValidDecryptLength($input)` to allow checking for the length of the decryption string [#15879](https://github.com/phalcon/cphalcon/issues/15879)\n- Added `Phalcon\\Di\\InitializationAwareInterface` to allow auto calling the `initialize` method when accessing service through DIC [#15916](https://github.com/phalcon/cphalcon/pull/15916)\n- Added\n- `Phalcon\\Storage\\Serializer\\MemcachedIgbinary`\n- `Phalcon\\Storage\\Serializer\\MemcachedJson`\n- `Phalcon\\Storage\\Serializer\\MemcachedPhp`\n- `Phalcon\\Storage\\Serializer\\RedisIgbinary`\n- `Phalcon\\Storage\\Serializer\\RedisJson`\n- `Phalcon\\Storage\\Serializer\\RedisMsgpack`\n- `Phalcon\\Storage\\Serializer\\RedisNone`\n- `Phalcon\\Storage\\Serializer\\RedisPhp` to be used if adapter serialization is required [#15904](https://github.com/phalcon/cphalcon/issues/15904)\n- Added\n- `Phalcon\\Logger\\LoggerInterface`\n- `Phalcon\\Logger\\AbstractLogger` to be used in the logger class but also the proxy-psr3 repo [#15925](https://github.com/phalcon/cphalcon/issues/15925)\n- Added\n- `Phalcon\\Cache\\CacheInterface`\n- `Phalcon\\Cache\\AbstractCache` to be used in the cache class but also the proxy-psr16 repo [#15927](https://github.com/phalcon/cphalcon/issues/15927)\n- Added\n- EvolvableLinkInterface.zep\n- `Phalcon\\Html\\Link\\Interfaces\\EvolvableLinkProviderInterface`\n- `Phalcon\\Html\\Link\\Interfaces\\LinkInterface`\n- `Phalcon\\Html\\Link\\Interfaces\\LinkProviderInterface`\n- `Phalcon\\Html\\Link\\AbstractLink`\n- `Phalcon\\Html\\Link\\AbstractLinkProvider` to be used in the link class but also the proxy-psr13 repo [#15930](https://github.com/phalcon/cphalcon/issues/15930)\n- Added `Phalcon\\Translate\\Adapter\\Csv::toArray()` and `Phalcon\\Translate\\Adapter\\NativeArray::toArray()` to return the translation array back  [#15902](https://github.com/phalcon/cphalcon/issues/15902)\n-\n## Removed\n- Removed `Phalcon\\Container\\Container` and moved its contents to the `proxy-psr11` repo [#15928](https://github.com/phalcon/cphalcon/issues/15928)\n- Removed `Phalcon\\Http\\Message\\*` and `Phalcon\\Http\\Server\\*` classes. This removes PSR from Phalcon. PSR-7 available in v6 [#15929](https://github.com/phalcon/cphalcon/issues/15929)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0RC1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0beta3": {
            "version": "5.0.0beta3",
            "state": "beta",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-02-06T20:25:58+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Renamed `Phalcon\\Db\\Result\\Pdo` to `Phalcon\\Db\\Result\\PdoResult` to avoid collisions with `\\PDO` [#15874](https://github.com/phalcon/cphalcon/issues/15854)\n\n## Fixed\n- Fixed `Phalcon\\Logger\\AbstractAdapter::getFormattedItem()` to not add `PHP_EOL` at the end of the message and added it to the `Phalcon\\Logger\\Adapter\\Stream` [#14547](https://github.com/phalcon/cphalcon/issues/14547)\n- Fixed `Phalcon\\Html\\Helper\\Title:__invoke()` to not use the `$separator` as parameter - no need to redefine it in a view [#15866](https://github.com/phalcon/cphalcon/issues/15866)\n- Fixed the delimiters for `Phalcon\\Support\\Helper\\SnakeCase` and `Phalcon\\Support\\Helper\\KamelCase` [#15850](https://github.com/phalcon/cphalcon/issues/15850)\n- Fixed `Phalcon\\Mvc\\Router\\Route::getName()` and `Phalcon\\Mvc\\Router\\Route::getHostname()` to also return `null` [#15880](https://github.com/phalcon/cphalcon/issues/15880)\n- Fixed `Phalcon\\Mvc\\Router\\RouteInterface::getName()` and `Phalcon\\Mvc\\Router\\RouteInterface::getHostname()` to also return `null` [#15880](https://github.com/phalcon/cphalcon/issues/15880)\n- Fixed `Phalcon\\Mvc\\Model::findFirst()` to return `mixed` or `null` [#15883](https://github.com/phalcon/cphalcon/issues/15883)\n\n## Added\n- Added `Phalcon\\Html\\Helper\\Title:setSeparator` to allow setting the separator independently [#15866](https://github.com/phalcon/cphalcon/issues/15866)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0beta3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0beta2": {
            "version": "5.0.0beta2",
            "state": "beta",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2022-01-06T15:42:31+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Fixed\n- `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::functionCall()` to check for container presence before checking the `tag` service [#15842](https://github.com/phalcon/cphalcon/issues/15842)\n- `Phalcon\\Di\\FactoryDefault()` to set `assets` and `tag` as shared services [#15847](https://github.com/phalcon/cphalcon/issues/15847)\n- `Phalcon\\Forms\\Element\\AbstractElement::getLocalTagFactory()` to return the tagFactory from itself, the form, the DI or a new instance [#15847](https://github.com/phalcon/cphalcon/issues/15847)\n- Changed references to `sha1` with `hash(\"sha256\", $data)` to ensure that there are no collisions from the hashing algorithm  [#15844](https://github.com/phalcon/cphalcon/issues/15844)\n- Changed `Phalcon\\Support\\Helper\\Str\\Camelize` to accept a third boolean parameter indicating whether the result will have the first letter capitalized or not [#15850](https://github.com/phalcon/cphalcon/issues/15850)\n\n## Added\n- Added `Phalcon\\Support\\Helper\\Str\\KebabCase`, `Phalcon\\Support\\Helper\\Str\\PascalCase` and `Phalcon\\Support\\Helper\\Str\\SnakeCase` helpers [#15850](https://github.com/phalcon/cphalcon/issues/15850)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0beta2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0beta1": {
            "version": "5.0.0beta1",
            "state": "beta",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2021-12-25T17:58:10+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Marked as deprecated:\n- `Phalcon\\Mvc\\Model::existsBelongsTo()`\n- `Phalcon\\Mvc\\Model::existsHasMany()`\n- `Phalcon\\Mvc\\Model::existsHasOne()`\n- `Phalcon\\Mvc\\Model::existsHasOneThrough()`\n- `Phalcon\\Mvc\\Model::existsHasManyToMany()`\n- `Phalcon\\Translate\\Adapter\\Csv::exists()`\n- `Phalcon\\Translate\\Adapter\\Gettext::exists()`\n- `Phalcon\\Translate\\Adapter\\NativeArray::exists()` [#15785](https://github.com/phalcon/cphalcon/issues/15785)\n- Moved `Phalcon\\Container` to `Phalcon\\Container\\Container` [#15796](https://github.com/phalcon/cphalcon/issues/15796)\n- Changed the `Phalcon\\Support\\Collection::get()` to return the default value if the key does not exist or the value is `null` to mirror the behavior of v3. [#15370](https://github.com/phalcon/cphalcon/issues/15370)\n- Moved `Phalcon\\Registry` to `Phalcon\\Support\\Registry` [#15802](https://github.com/phalcon/cphalcon/issues/15802)\n- Moved `Phalcon\\Url` to `Phalcon\\Mvc\\Url` [#15798](https://github.com/phalcon/cphalcon/issues/15798)\n- Moved `Phalcon\\Loader` to `Phalcon\\Autoload\\Loader` [#15797](https://github.com/phalcon/cphalcon/issues/15797)\n- Changes to `Phalcon\\Autoload\\Loader`:\n- Renamed `registerClasses()` to `setClasses()`\n- Renamed `registerDirectories()` to `setDirectories()`\n- Renamed `registertExtensions()` to `setExtensions()`\n- Renamed `registertFiles()` to `setFiles()`\n- Renamed `registertNamespaces()` to `setNamespaces()` [#15797](https://github.com/phalcon/cphalcon/issues/15797)\n- Moved `Phalcon\\Di` to `Phalcon\\Di\\Di` [#15799](https://github.com/phalcon/cphalcon/issues/15799)\n- Removed references to `Phalcon\\Tag` from the framework in favor of `Phalcon\\Html\\TagFactory` [#15801](https://github.com/phalcon/cphalcon/issues/15801)\n- `Phalcon\\Forms\\Form` requires a `Phalcon\\Html\\TagFactory` to be set before it can render elements [#15801](https://github.com/phalcon/cphalcon/issues/15801)\n- `Phalcon\\Di\\FactoryDefault` will now return a `Phalcon\\Html\\TagFactory` for the `tag` service [#15801](https://github.com/phalcon/cphalcon/issues/15801)\n\n## Fixed\n- `Phalcon\\Logger\\LoggerFactory::load()` to correctly use the key of the adapters array as the name of the adapter [#15831](https://github.com/phalcon/cphalcon/issues/15831)\n\n## Added\n- Added:\n- `Phalcon\\Mvc\\Model::hasBelongsTo()`\n- `Phalcon\\Mvc\\Model::hasHasMany()`\n- `Phalcon\\Mvc\\Model::hasHasOne()`\n- `Phalcon\\Mvc\\Model::hasHasOneThrough()`\n- `Phalcon\\Mvc\\Model::hasHasManyToMany()`\n- `Phalcon\\Translate\\Adapter\\Csv::has()`\n- `Phalcon\\Translate\\Adapter\\Gettext::has()`\n- `Phalcon\\Translate\\Adapter\\NativeArray::has()` [#15785](https://github.com/phalcon/cphalcon/issues/15785)\n- Added `filter`, `camelize`, `dynamic` and `uncamelize` in `Phalcon\\Support\\HelperFactory` [#15805](https://github.com/phalcon/cphalcon/issues/15805)\n- Added `Phalcon\\Autoload\\Loader::getDebug()` to collect debugging information from the loader (enabled from the constructor) [#15797](https://github.com/phalcon/cphalcon/issues/15797)\n\n## Fixed\n- Fixed `Phalcon\\Dispatcher\\Dispatcher::setParams()` not updating local params during `dispatch()` loop [#15603](https://github.com/phalcon/cphalcon/issues/15603)\n- Fixed related records auto-save with `belongsTo()` relation [#15148](https://github.com/phalcon/cphalcon/issues/15148)\n\n## Removed\n- Removed `Phalcon\\Exception`; replaced by `\\Exception` [#15800](https://github.com/phalcon/cphalcon/issues/15800)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0beta1",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0alpha7": {
            "version": "5.0.0alpha7",
            "state": "alpha",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2021-11-17T08:21:24+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Changes to the `Phalcon\\Acl`:\n- Renamed `Phalcon\\Acl\\ComponentAware` to `Phalcon\\Acl\\ComponentAwareInterface`\n- Renamed `Phalcon\\Acl\\RoleAware` to `Phalcon\\Acl\\RoleAwareInterface` [#15691](https://github.com/phalcon/cphalcon/issues/15691)\n- Changed `require` to `require_once` in `Phalcon\\Loader` to avoid conflicts with other loaders [#15489](https://github.com/phalcon/cphalcon/issues/15489)\n- Changed `require` to `require_once` in `Phalcon\\Cli\\Console` and `Phalcon\\Mvc\\Application` for a bit of extra performance [#15489](https://github.com/phalcon/cphalcon/issues/15489)\n- `Phalcon\\Collection` has been moved under the `Support` namespace:\n- Renamed  `Phalcon\\Collection` to `Phalcon\\Support\\Collection`\n- Renamed  `Phalcon\\Collection\\Exception` to `Phalcon\\Support\\Collection\\Exception`\n- Renamed  `Phalcon\\Collection\\ReadOnly` to `Phalcon\\Support\\Collection\\ReadOnly`\n- Renamed  `Phalcon\\Collection` to `Phalcon\\Support\\Collection` [#15700](https://github.com/phalcon/cphalcon/issues/15700)\n- Changes to `Phalcon\\Session\\Bag`:\n- Changed `Phalcon\\Session\\Bag::construct` to accept a container instead of internally calling the default\n- Changed `Phalcon\\Session\\Bag::construct` to throw an exception if the container is not specified\n- Changed `Phalcon\\Session\\Bag::init` to store the data in the session [#15494](https://github.com/phalcon/cphalcon/issues/15494)\n- Changed `Phalcon\\Events\\Event::construct()` to allow `source` to be nullable [#15133](https://github.com/phalcon/cphalcon/issues/15133)\n- Changes to `Phalcon\\Crypt`\n- Moved `Phalcon\\Crypt\\Exception` to `Phalcon\\Crypt\\Exception\\Exception`\n- Moved `Phalcon\\Crypt\\Mismatch` to `Phalcon\\Crypt\\Exception\\Mismatch`\n- Changed the ccm/gcm modes to store the `authTag` with the encryption string and process it with the decryption string [#15717](https://github.com/phalcon/cphalcon/issues/15717)\n- Created new namespace `Phalcon\\Encryption`\n- Moved `Phalcon\\Crypt` to `Phalcon\\Encryption\\Crypt`\n- Moved `Phalcon\\Security` to `Phalcon\\Encryption\\Security`\n- Moved the whole `Security` namespace under `Encryption`\n- `Security\\JWT\\Exceptions\\UnsupportedAlgorithmException` to `Encryption\\Security\\JWT\\Exceptions\\UnsupportedAlgorithmException`\n- `Security\\JWT\\Exceptions\\ValidatorException` to `Encryption\\Security\\JWT\\Exceptions\\ValidatorException`\n- `Security\\JWT\\Signer\\AbstractSigner` to `Encryption\\Security\\JWT\\Signer\\AbstractSigner`\n- `Security\\JWT\\Signer\\Hmac` to `Encryption\\Security\\JWT\\Signer\\Hmac`\n- `Security\\JWT\\Signer\\None` to `Encryption\\Security\\JWT\\Signer\\None`\n- `Security\\JWT\\Signer\\SignerInterface` to `Encryption\\Security\\JWT\\Signer\\SignerInterface`\n- `Security\\JWT\\Token\\AbstractItem` to `Encryption\\Security\\JWT\\Token\\AbstractItem`\n- `Security\\JWT\\Token\\Enum` to `Encryption\\Security\\JWT\\Token\\Enum`\n- `Security\\JWT\\Token\\Item` to `Encryption\\Security\\JWT\\Token\\Item`\n- `Security\\JWT\\Token\\Parser` to `Encryption\\Security\\JWT\\Token\\Parser`\n- `Security\\JWT\\Token\\Signature` to `Encryption\\Security\\JWT\\Token\\Signature`\n- `Security\\JWT\\Token\\Token` to `Encryption\\Security\\JWT\\Token\\Token`\n- `Security\\JWT\\Builder` to `Encryption\\Security\\JWT\\Builder`\n- `Security\\JWT\\Validator` to `Encryption\\Security\\JWT\\Validator`\n- `Security\\JWT\\Validator` to `Encryption\\Security\\JWT\\Validator`\n- `Security\\Exception` to `Encryption\\Security\\Exception`\n- `Security\\Random` to `Encryption\\Security\\Random` [#15729](https://github.com/phalcon/cphalcon/issues/15729)\n- Renamed\n- `Phalcon\\Crypt\\Crypt::getHashAlgo()` to `Phalcon\\Crypt\\Crypt::getHashAlgorithm()`\n- `Phalcon\\Crypt\\Crypt::getAvailableHashAlgos()` to `Phalcon\\Crypt\\Crypt::getAvailableHashAlgorithms()`\n- `Phalcon\\Crypt\\Crypt::setHashAlgo()` to `Phalcon\\Crypt\\Crypt::setHashAlgorithm()` [#15717](https://github.com/phalcon/cphalcon/issues/15717)\n- Renamed `Phalcon\\Factory\\AdapterFactory::getAdapters()` to `Phalcon\\Factory\\AdapterFactory::getServices()` [#15717](https://github.com/phalcon/cphalcon/issues/15717)\n- Changed `Phalcon\\Crypt\\Crypt::__construct()` to have `useSigning` set to `true` by default [#15717](https://github.com/phalcon/cphalcon/issues/15717)\n- Changes to `Phalcon\\Config`\n- Moved `Phalcon\\Config` to `Phalcon\\Config\\Config`\n- Changed `Phalcon\\Config\\Config::path` by making the `delimiter` parameter a `string`\n- Changed `Phalcon\\Config\\Adapter\\Ini::__construct` to not accept `null` as the mode. The default is now `INI_SCANNER_NORMAL` (2)\n- Refactored the code for more efficiency and speed [#15720](https://github.com/phalcon/cphalcon/issues/15720)\n- Changed `Phalcon\\Db\\Adapter\\AdapterInterface::getInternalHandler()` and `Phalcon\\Db\\Adapter\\Pdo\\AbstractPdo::getInternalHandler()` to return `var` instead of `\\PDO` for custom adapters with different engines [#15119](https://github.com/phalcon/cphalcon/issues/15119)\n- Moved `Phalcon\\Filter` to `Phalcon\\Filter\\Filter`; added more tests [#15726](https://github.com/phalcon/cphalcon/issues/15726)\n- Changed `Phalcon\\Mvc\\Model::getPreparedQuery()` to return `QueryInterface` instead of `Query` [#15562](https://github.com/phalcon/cphalcon/issues/15562)\n- Moved `Phalcon\\Cache` to `Phalcon\\Cache\\Cache` [#15728](https://github.com/phalcon/cphalcon/issues/15728)\n- Changed `Phalcon\\Factory\\AdapterFactory` to define the factory exception in `getExceptionClass()` instead of a property. [#15728](https://github.com/phalcon/cphalcon/issues/15728)\n- Renamed `Phalcon\\Db\\Adapter\\AbstractAdapter::getSqlVariables()` to `Phalcon\\Db\\Adapter\\AbstractAdapter::getSQLVariables()` to align with the rest of the `getSQL*` methods [#15637](https://github.com/phalcon/cphalcon/issues/15637)\n- Moved `Phalcon\\Logger` to `Phalcon\\Logger\\Logger` [#15727](https://github.com/phalcon/cphalcon/issues/15727)\n- Changes to `Phalcon\\Escaper`\n- Moved `Phalcon\\Escaper` to `Phalcon\\Html\\Escaper`\n- Moved `Phalcon\\Escaper\\EscaperInterface` to `Phalcon\\Html\\Escaper\\EscaperInterface`\n- Moved `Phalcon\\Escaper\\Exception` to `Phalcon\\Html\\Escaper\\Exception`\n- Deprecated methods (to be removed at a future version)\n- `escapeCss()` becomes `css()`\n- `escapeJs()`, becomes `js()`\n- `escapeHtml()` becomes `html()`\n- `escapeHtmlAttr()` becomes `attributes()`\n- `escapeUrl()` becomes `url()`\n- `setHtmlQuoteType()` becomes `setFlags()` [#15757](https://github.com/phalcon/cphalcon/issues/15757)\n- Changed `Phalcon\\Encryption\\Security::hash()` to also use `password_hash()` and accept `ARGON2*` algorithms [#15731](https://github.com/phalcon/cphalcon/issues/15731)\n- Removed uncamelize of `realClassName` in `Phalcon\\Mvc\\Router\\Route::getRoutePaths()` if definition is string to make processing same as if array definition [#15067](https://github.com/phalcon/cphalcon/issues/15067)\n- Changed `Phalcon\\Validation::getValue()` behavior to get value from `data` if not found in `entity`. [#14203](https://github.com/phalcon/cphalcon/issues/14203)\n- Changed `Phalcon\\Forms\\Form::isValid()` signature: added `whitelist` argument. [#14203](https://github.com/phalcon/cphalcon/issues/14203)\n- Changed `Phalcon\\Support\\Collection\\ReadOnly` to `Phalcon\\Support\\Collection\\ReadOnlyCollection` to avoid conflicts with the read-only feature in PHP 8.1 [#15767](https://github.com/phalcon/cphalcon/issues/15767)\n- Removed `Phalcon\\Text` - replaced by `Phalcon\\Support\\Helper\\Str\\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Removed `Phalcon\\Helper\\Arr` - replaced by `Phalcon\\Support\\Helper\\Arr\\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Removed `Phalcon\\Helper\\File` - replaced by `Phalcon\\Support\\Helper\\File\\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Removed `Phalcon\\Helper\\Json` - replaced by `Phalcon\\Support\\Helper\\Json\\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Removed `Phalcon\\Helper\\Number` - replaced by `Phalcon\\Support\\Helper\\Number\\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Removed `Phalcon\\Helper\\Str` - replaced by `Phalcon\\Support\\Helper\\Str\\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Removed references to `Phalcon\\Text`, `Phacon\\Helper\\*` from the code replacing it with `Phalcon\\Support\\Helper\\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Synchronized tests with `phalcon/phalcon` thus increasing coverage [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Changed `Phalcon\\Assets\\Manager` to require a `Phalcon\\Html\\TagFactory` in its constructor [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n\n## Added\n- Added more tests in the suite for additional code coverage [#15691](https://github.com/phalcon/cphalcon/issues/15691)\n- Added `Phalcon\\Events\\AbstractEventsAware` class to handle the Events Manager when necessary [#15691](https://github.com/phalcon/cphalcon/issues/15691)\n- Added `Phalcon\\Acl\\Adapter\\AdapterInterface::getInheritedRoles()` and `Phalcon\\Acl\\Adapter\\Memory::getInheritedRoles()` that returns the inherited roles based on a passed role name (or all if no parameter supplied) [#15154](https://github.com/phalcon/cphalcon/issues/15154)\n- Changes to `Phalcon\\Crypt`\n- Added `Phalcon\\Crypt\\Padding\\PadInteface` and padding adapters\n- `Phalcon\\Crypt\\Padding\\Ansi`\n- `Phalcon\\Crypt\\Padding\\Iso10126`\n- `Phalcon\\Crypt\\Padding\\IsoIek`\n- `Phalcon\\Crypt\\Padding\\Noop`\n- `Phalcon\\Crypt\\Padding\\PadInterface`\n- `Phalcon\\Crypt\\Padding\\Pkcs7`\n- `Phalcon\\Crypt\\Padding\\Space`\n- `Phalcon\\Crypt\\Padding\\Zero`\n- Added `Phalcon\\Crypt\\PadFactory` to easily create padding adapters\n- Added more tests increasing coverage [#15717](https://github.com/phalcon/cphalcon/issues/15717)\n- Added `Phalcon\\Cache\\Adapter\\*::setForever()` and `Phalcon\\Storage\\Adapter\\*::setForever()` to allow storing a key forever [#15485](https://github.com/phalcon/cphalcon/issues/15485)\n- Added `Phalcon\\Encryption\\Security::getHashInformation()` to return information for a hash [#15731](https://github.com/phalcon/cphalcon/issues/15731)\n- Added constants `Phalcon\\Encryption\\Security::CRYPT_ARGON2I` and `Phalcon\\Encryption\\Security::CRYPT_ARGON2ID` [#15731](https://github.com/phalcon/cphalcon/issues/15731)\n- Added `allowEmpty` checks to common validators [#15515](https://github.com/phalcon/cphalcon/issues/15515)\n- Added `Phalcon\\Forms\\Form::getFilteredValue()` to get filtered value without providing entity [#15438](https://github.com/phalcon/cphalcon/issues/15438)\n- Added `Phalcon\\Forms\\Form::setWhitelist()` and `Phalcon\\Forms\\Form::getWhitelist()` [#14203](https://github.com/phalcon/cphalcon/issues/14203)\n- Added `dirtyState` serialization in `Phalcon\\Mvc\\Model` [#15571](https://github.com/phalcon/cphalcon/issues/15571)\n- Added short versions of helpers for `Phalcon\\Html\\TagFactory` (call service as a method) [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Added short versions of helpers for `Phalcon\\Support\\HelperFactory` (call service as a method) [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Added `Phalcon\\Html\\Helper\\Doctype` helper for `doctype` generation [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Added `style` or `link` tag option for `Phalcon\\Html\\Helper\\Style` [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n\n## Fixed\n- Fixed `Query::getExpression()` return type [#15553](https://github.com/phalcon/cphalcon/issues/15553)\n- Fixed `Phalcon\\Mvc\\Model::getRelated()` to correctly return relationships (cached or not) when the foreign key has changed [#15649](https://github.com/phalcon/cphalcon/issues/15649)\n- Fixed `Phalcon\\Db\\Adapter\\Pdo\\*`, `Phalcon\\Mvc\\Model` and `Phalcon\\Mvc\\Model\\MetaData\\Strategy\\Annotations` to treat `BIGINT` numbers as string [#15632](https://github.com/phalcon/cphalcon/issues/15632)\n- Fixed `Phalcon\\Crypt\\Crypt::decrypt()` to correctly calculate the hash when using signed mode [#15717](https://github.com/phalcon/cphalcon/issues/15717)\n- Fixed `Phalcon\\Mvc\\Model\\Manager::isVisibleModelProperty()` to correctly check if setting property is visible [#15276](https://github.com/phalcon/cphalcon/issues/15276)\n- Fixed `Phalcon\\Config\\Config::merge` to retain numeric indexes in deep merges [#14705](https://github.com/phalcon/cphalcon/issues/14705)\n- Fixed globals (Zephir change) to correctly display string values for global settings in `phpinfo()` [#15269](https://github.com/phalcon/cphalcon/issues/15269)\n- Fixed `Phalcon\\Storage\\Adapter\\Redis::getAdapter()` and `Phalcon\\Cache\\Adapter\\Redis::getAdapter()` to accept the connection timeout in the constructor `options` [#15744](https://github.com/phalcon/cphalcon/issues/15744)\n- Fixed `Phalcon\\Db\\Adapter\\AbstractAdapter::getSQLVariables()` to return an empty array when initialized [#15637](https://github.com/phalcon/cphalcon/issues/15637)\n- Fixed `Phalcon\\Cache\\Adapter\\*` and `Phalcon\\Storage\\Adapter\\*` to delete a key when `set()` is called with a zero or negative TTL [#15485](https://github.com/phalcon/cphalcon/issues/15485)\n- Fixed `Phalcon\\Db\\Adapter\\Pdo\\Mysql` to not use `PDO::ATTR_EMULATE_PREPARES` and `PDO::ATTR_STRINGIFY_FETCHES` by default. This allows numbers to be returned with resultsets instead of strings for numeric fields [#15361](https://github.com/phalcon/cphalcon/issues/15361)\n- Fixed `Phalcon\\Validation\\Validator\\File` to use `messageFileEmpty` [#14928](https://github.com/phalcon/cphalcon/issues/14928)\n- Fixed `Phalcon\\Db\\RawValue` usage bugs in `Phalcon\\Mvc\\Model::doLowUpdate()` [#15413](https://github.com/phalcon/cphalcon/issues/15413)\n- Fixed `type` attribute for stylesheet links [#15776](https://github.com/phalcon/cphalcon/issues/15776)\n- Fixed `Phalcon\\Debug` to not throw an exception if a URL service is not present [#15381](https://github.com/phalcon/cphalcon/issues/15381)\n\n## Removed\n- Removed `Phalcon\\Kernel` - obsolete [#15776](https://github.com/phalcon/cphalcon/issues/15776)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0alpha7",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0alpha6": {
            "version": "5.0.0alpha6",
            "state": "alpha",
            "license": "BSD 3-Clause License",
            "releasedBy": "jeckerson",
            "releaseDate": "2021-09-16T21:34:07+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Adjusted the constructor for `Phalcon\\Storage\\Adapter\\*` and `Phalcon\\Cache\\Adapter\\*` to allow an empty key prefix to be set if needed. [#15480](https://github.com/phalcon/cphalcon/issues/15480)\n- Changed:\n- `Phalcon\\Db\\Adapter\\AdapterInterface:lastInsertId()` to be identical as `Pdo:lastInsertId()`\n- `Phalcon\\Db\\Adapter\\AdapterInterface:close()` now returns `void` instead of `bool`\n- `Phalcon\\Db\\Adapter\\AdapterInterface:connect()` now returns `void` instead of `bool` and 1st argument default value is empty `array` instead of `null` [#15659](https://github.com/phalcon/cphalcon/issues/15659)\n\n## Added\n- Added `Phalcon\\Security\\JWT\\Builder::addClaim` for custom JWT claims. [#15656](https://github.com/phalcon/cphalcon/issues/15656)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0alpha6",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0alpha5": {
            "version": "5.0.0alpha5",
            "state": "alpha",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2021-09-16T13:06:40+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Merged all architectures (`build/phalcon/32bits`, `build/phalcon/64bits` and `build/phalcon/safe`) into single universal inside `build/phalcon` [#15647](https://github.com/phalcon/cphalcon/issues/15647)\n\n## Fixed\n- Fixed C code in `build/` directory [#15647](https://github.com/phalcon/cphalcon/issues/15647)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0alpha5",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "5.0.0alpha3": {
            "version": "5.0.0alpha3",
            "state": "alpha",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2021-07-02T13:05:36+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md\n\n## Changed\n- Changed version format to allow alpha/beta/RC releases on PECL.\n- Changed:\n  - `Phalcon\\Mvc\\Model\\Resultset\\Complex::__construct` now accepts `Psr\\SimpleCache\\CacheInterface` for the cache\n  - `Phalcon\\Mvc\\Model\\Resultset\\Simple::__construct` now accepts `Psr\\SimpleCache\\CacheInterface` for the cache\n  - `Phalcon\\Mvc\\Model\\Resultset::__construct` now accepts `Psr\\SimpleCache\\CacheInterface` for the cache\n  - `Phalcon\\Mvc\\Model\\Resultset::getCache` now returns `Psr\\SimpleCache\\CacheInterface` [#15471](https://github.com/phalcon/cphalcon/issues/15471)\n- Changed `Phalcon\\Db\\Adapter\\AbstractAdapter:delete()` signature of optional parameters. [#15363](https://github.com/phalcon/cphalcon/issues/15363)\n- Changed `bindCounts` argument to array type in:\n  - `Phalcon\\Db\\Dialect:getColumnList()`\n  - `Phalcon\\Db\\Dialect:getSqlColumn()`\n  - `Phalcon\\Db\\Dialect:getSqlExpression()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionBinaryOperations()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionCase()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionCastValue()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionConvertValue()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionFunctionCall()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionGroupBy()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionHaving()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionJoins()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionLimit()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionList()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionObject()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionOrderBy()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionScalar()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionUnaryOperations()`\n  - `Phalcon\\Db\\Dialect:getSqlExpressionWhere()`\n  - `Phalcon\\Db\\DialectInterface:getSqlExpression()`\n\n## Fixed\n- Fixed `Phalcon\\Db\\Adapter\\AbstractAdapter:delete()` when `bindTypes` argument is passed. [#15363](https://github.com/phalcon/cphalcon/issues/15363)\n- Fixed `Phalcon\\Storage\\Adapter\\Redis::getAdapter` to use passed `connectionTimeout`, `retryInterval` and `readTimeout` options for the connection [#15484](https://github.com/phalcon/cphalcon/issues/15484)\n- Fixed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler` for a use case when a block will return null vs an array for `statementList` in PHP 8 [#15556](https://github.com/phalcon/cphalcon/issues/15556)",
            "get": "https://pecl.php.net/get/phalcon-5.0.0alpha3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "4.1.2": {
            "version": "4.1.2",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2021-04-25T16:59:30+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-4.1.md\n\n# [4.1.2](https://github.com/phalcon/cphalcon/releases/tag/v4.1.2) (2021-04-22)\n\n## Changed\n- Corrected version in package.xml",
            "get": "https://pecl.php.net/get/phalcon-4.1.2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "4.1.0": {
            "version": "4.1.0",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2020-11-12T18:36:27+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-4.1.md\n\n# [4.1.0](https://github.com/phalcon/cphalcon/releases/tag/v4.1.0) (2020-10-31)\n## Added\n- Added JWT (JSON Web Tokens) support under `Phalcon\\Security\\JWT`. Offers support for:\n- Token\n- Parser\n- Builder\n- Validator\n- Signers (None, HMAC)\n- Base64 encode/decodeUrl helper class\n[#13856](https://github.com/phalcon/cphalcon/issues/13856)\n- Added additional HTML helpers under `Phalcon\\Html\\Helper`: `Anchor`, `Base`, `Body`, `Button`, `Close`, `Element`, `Form`, `Img`, `Input\\Color`, `Input\\Date`, `Input\\DateTime`, `Input\\DateTimeLocal`, `Input\\Email`, `Input\\File`, `Input\\Hidden`, `Input\\Image`, `Input\\Input`, `Input\\Month`, `Input\\Numeric`, `Input\\Password`, `Input\\Range`, `Input\\Select`, `Input\\Search`, `Input\\Submit`, `Input\\Tel`, `Input\\Text`, `Input\\Textarea`, `Input\\Time`, `Input\\Url`, `Input\\Week`, `Label`, `Link`, `Meta`, `Ol`, `Script`, `Style`, `Title`, `Ul`\n[#14696](https://github.com/phalcon/cphalcon/issues/14696)\n- Added `Phalcon\\Http\\Request::getPreferredIsoLocaleVariant()` to return the base language if this is a specific one (`en` vs `en-US`) [#3135](https://github.com/phalcon/cphalcon/issues/3135)\n- Added `preload` for Volt, which will send a HTTP/2 preload header [#13128](https://github.com/phalcon/cphalcon/issues/13128)\n- Added `Phalcon\\Helper\\Arr::blackList()` to exclude elements of an array by the keys obtained from the elements of a blacklist [#14801](https://github.com/phalcon/cphalcon/issues/14801) [@TimurFlush](https://github.com/TimurFlush)\n- Added `Phalcon\\Debug::renderHtml()` to get a HTML representation of the exception [#14794](https://github.com/phalcon/cphalcon/issues/14794) [@TimurFlush](https://github.com/TimurFlush)\n- Added `Phalcon\\Mvc\\Router\\Annotations->setActionPreformatCallback($callback)` to set a callback which pre-formats actions to custom pattern [#14819](https://github.com/phalcon/cphalcon/pull/14819)\n- Added new PDO wrapper for the Data Mapper implementation, with decorated instance, locator and profiler\n- `Phalcon\\DataMapper\\Pdo\\Connection`\n- `Phalcon\\DataMapper\\Pdo\\Connection\\Decorated`\n- `Phalcon\\DataMapper\\Pdo\\Profiler\\Profiler`\n- `Phalcon\\DataMapper\\Pdo\\Profiler\\MemoryLogger`\n- `Phalcon\\DataMapper\\Pdo\\ConnectionLocator`\nThis component will be used in the Data Mapper implementation but can be used as a stand alone component for PDO connections. [#14733](https://github.com/phalcon/cphalcon/issues/14733)\n- Added new Query Builder, as well as a factory, for the Data Mapper implementation supporting CRUD with bound parameters\n- `Phalcon\\DataMapper\\Query\\Bind`\n- `Phalcon\\DataMapper\\Query\\Delete`\n- `Phalcon\\DataMapper\\Query\\Insert`\n- `Phalcon\\DataMapper\\Query\\Select`\n- `Phalcon\\DataMapper\\Query\\Update`\n- `Phalcon\\DataMapper\\Query\\QueryFactory`\nThis component can be used to create SQL statements using a fluent interface. Optionally the statements can be executed from the builder itself using the `DataMapper\\Pdo` connection. [#14734](https://github.com/phalcon/cphalcon/issues/14734)\n- Added `Phalcon\\Mvc\\Micro\\LazyLoader::getHandler()` to return real handler when using lazy loaded controllers for `Phalcon\\Mvc\\Micro` [#14871](https://github.com/phalcon/cphalcon/issues/14871) [@Jurigag](https://github.com/Jurigag)\n- Added `Phalcon\\Collection\\CollectionInterface` and `Phalcon\\Config\\ConfigInterface` to use as typehints when extending or implementing custom classes [#15106](https://github.com/phalcon/cphalcon/issues/15106) [@BeMySlaveDarlin](https://github.com/BeMySlaveDarlin)\n- Added `Phalcon\\Db\\Adapter\\AdapterInterface::getDefaultValue()` and `supportsDefaultValue()` methods to properly support the `DEFAULT` keyword [#15180](https://github.com/phalcon/cphalcon/issues/15180)\n- Added `Phalcon\\Db\\Adapter\\AbstractAdapter::supportsDefaultValue()` method to properly support the `DEFAULT` keyword [#15180](https://github.com/phalcon/cphalcon/issues/15180)\n\n## Changed\n- Added service checks for the session. Now cookies will be saved in the session only when the `session` service is defined [#11770](https://github.com/phalcon/cphalcon/issues/11770), [#14649](https://github.com/phalcon/cphalcon/pull/14649)\n- Changed `Phalcon\\Db\\Adapter\\*::getRawSQLStatement()` to return the full SQL query with parameters [#12196](https://github.com/phalcon/cphalcon/issues/12196)\n- Changed `Phalcon\\Filter::sanitize` to throw a `E_USER_NOTICE` when a filter does not exist. [#14679](https://github.com/phalcon/cphalcon/issues/14679)\n- PHQL now supports the use of any printable characters from the extended ASCII\ntable for escaped identifiers. The exception characters are `[` and `]`. To\nuse `[` and `]` escape they (`\\[`, `\\]`) [#14535](https://github.com/phalcon/cphalcon/issues/14535)\n- Removed UTF-8 charset when using `Phalcon\\Http\\Response::setJsonContent` to apply with rfc7159\n- Changed the visibility of properties in `Phalcon\\Http\\Message\\Uri` to work with `clone`. [#15040](https://github.com/phalcon/cphalcon/issues/15040)\n- Change `Phalcon\\Validation\\AbstractValidator::__construct`. Save custom validator message in options. [#15053](https://github.com/phalcon/cphalcon/issues/15053) [@ivan-zolotavin](https://github.com/ivan-zolotavin)\n- Add proxy methods without `_` prefix in methods names: `getRelatedRecords()`, `groupResult()`, `exists()`, `preSaveRelatedRecords()`, `preSave()`, `doLowUpdate()`, `postSaveRelatedRecords()`, `postSave()`, `cancelOperation()`, `doLowInsert()`, `getConnection()`, `getConnectionService()`, `getVersion()`, `getSpecial()` [#14971](https://github.com/phalcon/cphalcon/pull/14971)\n- Modified `Phalcon\\Mvc\\Model\\Relation` to accept callable params for model relations. [#15158](https://github.com/phalcon/cphalcon/issues/15158)\n\n## Fixed\n- Fixed `Phalcon\\Db\\Dialect\\Mysql::getColumnDefinition` to recognize `size` for `DATETIME`, `TIME` and `TIMESTAMP` columns [#13297](https://github.com/phalcon/cphalcon/issues/13297)\n- Fixed `Phalcon\\Events\\Manager` to provide callable support [#13322](https://github.com/phalcon/cphalcon/issues/13322), [#15045](https://github.com/phalcon/cphalcon/pull/15045)\n- Fixed `Phalcon\\Validation\\Validator\\Uniqueness` fixed except query [#15084](https://github.com/phalcon/cphalcon/issues/15084)\n- Fixed `Phalcon\\Mvc\\Model` to also check the params option in cascade relations when deleting [#15098](https://github.com/phalcon/cphalcon/issues/15098)\n- Fixed `Phalcon\\Mvc\\Model` to also check the params option in restricted relations when deleting [#15172](https://github.com/phalcon/cphalcon/issues/15172)\n- Fixed `Phalcon\\Mvc\\Model::findFirst()` to return correct value [#15077](https://github.com/phalcon/cphalcon/issues/15077)\n- Fixed `Phalcon\\Mvc\\Model\\CriteriaInterface::where()` parameters [#15144](https://github.com/phalcon/cphalcon/issues/15144)\n- Fixed `Phalcon\\Http\\Response\\Cookies::set()` to utilize the options parameter correctly [#15129](https://github.com/phalcon/cphalcon/issues/15129)\n- Fixed `Phalcon\\Http\\Cookie::send()` to define `options` parameter [#15142](https://github.com/phalcon/cphalcon/issues/15142)\n- Fixed `Phalcon\\Crypt` performance issues. [#15118](https://github.com/phalcon/cphalcon/issues/15118)\n- Fixed `Phalcon\\Mvc\\Router\\Route` unicode support in patterns [#15102](https://github.com/phalcon/cphalcon/issues/15102)\n- Fixed fatal error in `Phalcon\\Mvc\\Model::cloneResultMap()` when column map is used with `orm.cast_on_hydrate` turned on. [#14617](https://github.com/phalcon/cphalcon/issues/14617)\n- Fixed `Phalcon\\Mvc\\Model::sum()`, `average()`, `minimum()`, `maxmium()`, `count()` to utilize the transaction parameter. [#15113](https://github.com/phalcon/cphalcon/issues/15113)\n- Fixed `Phalcon\\Mvc\\Model::__set()` to clear `dirtyRelated` when empty array is set. [#14822](https://github.com/phalcon/cphalcon/issues/14822)\n- Fixed `Phalcon\\Mvc\\Model` to skip columns with default values when the `DEFAULT` keyword is not supported by the database adapter (SQLite) [#15180](https://github.com/phalcon/cphalcon/issues/15180)\n- Fixed `Phalcon\\Mvc\\Router` to handle numeric routes properly [#14926](https://github.com/phalcon/cphalcon/issues/14926)\n- Fixed `Phalcon\\Session\\Adapter\\Redis` and `Phalcon\\Session\\Adapter\\Libmemcached` to utilize the prefix option [#15184](https://github.com/phalcon/cphalcon/issues/15184)\n- Fixed `Phalcon\\Mvc\\Model` to save the modified properties of previously queried single related records. [#15148](https://github.com/phalcon/cphalcon/issues/15148)\n\n## Removed\n- Removed `Phalcon\\Http\\Cookie` binding to session [#11770](https://github.com/phalcon/cphalcon/issues/11770)\n- `Phalcon\\Http\\Cookie` no longer depends on the session service and data will not be duplicated in the session. This made it difficult to use cookies in stateless applications (SPA).\n- Removed unused property `Phalcon\\Mvc\\Router::uriSource`. [#15123](https://github.com/phalcon/cphalcon/issues/15123)",
            "get": "https://pecl.php.net/get/phalcon-4.1.0",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "4.0.6": {
            "version": "4.0.6",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2020-05-16T18:24:38+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-4.0.md\n\n# [4.0.6]\n## Added\n\n## Changed\n- Changed `Volt::convertEncoding` to no longer using `iconv` for a fallback since it causes issues with macOS [#14912](https://github.com/phalcon/cphalcon/issues/14912)\n- Changed schema manipulation in `Phalcon\\Db\\Dialect\\Mysql` - unquote numerical defaults [#14888](https://github.com/phalcon/cphalcon/pull/14888), [#14974](https://github.com/phalcon/cphalcon/pull/14974)\n- Changed the default ACL access level from boolean `FALSE` to `Enum::DENY` [#14974](https://github.com/phalcon/cphalcon/pull/14974)\n- Changed the way `Phalcon\\Http\\Response::__construct` checks `content` data type. Now a `TypeError` will be thrown if incompatible data type was passed [#14983](https://github.com/phalcon/cphalcon/issues/14983)\n- Changed return type hints of the following `Phalcon\\Flash\\FlashInterface`'s methods: `error`, `message`, `notice`, `success` and `warning` [#14994](https://github.com/phalcon/cphalcon/issues/14994)\n- Changed return type hint for `Phalcon\\Mvc\\ModelInterface::sum` [#15000](https://github.com/phalcon/cphalcon/issues/15000)\n- Changed return type for `Phalcon\\Mvc\\Model\\Criteria::getLimit` so that integer, NULL or array will be returned [#15004](https://github.com/phalcon/cphalcon/issues/15004)\n- Changed return type hint for `Phalcon\\Mvc\\Model\\Manager::getCustomEventsManager` to return NULL instead of boolean FALSE if there is no special events manager [#15008](https://github.com/phalcon/cphalcon/issues/15008)\n- Changed `Phalcon\\Mvc\\Model\\MetaData::getDI` so that now it will throw a `Phalcon\\Mvc\\Model\\Exception` if there is no `DiInterface` instance  [#15011](https://github.com/phalcon/cphalcon/issues/15011)\n- Changed `Phalcon\\Http\\Request::getJsonRawBody` to use `json_decode` instead of `Phalcon\\Json::decode` [#14936](https://github.com/phalcon/cphalcon/issues/14936)\n- Changed `Phalcon\\Factory\\AbstractFactory` to expose `getService` which will throw an exception if it does not exist. Removed `checkService` and adjusted all references in `newInstance()` calls. [#15038](https://github.com/phalcon/cphalcon/issues/15038)\n- Changed the visibility of methods and properties in `Phalcon\\Http\\Message\\Response`, `Phalcon\\Http\\Message\\ServerRequest` and `Phalcon\\Http\\Message\\Uri` to work with `clone`. [#15040](https://github.com/phalcon/cphalcon/issues/15040)\n\n## Fixed\n- Fixed `Phalcon\\Mvc\\Model\\Query\\Builder::getPhql` to add single quote between string value on a simple condition [#14874](https://github.com/phalcon/cphalcon/issues/14874)\n- Fixed recognizing language operators inside Volt's echo mode (`{{ ... }}`) [#14476](https://github.com/phalcon/cphalcon/issues/14476)\n- Fixed `Tag::friendlyTitle` to correctly convert titles under MacOS and Windows [#14866](https://github.com/phalcon/cphalcon/issues/14866)\n- Fixed the Volt compiler to no longer parse `cache` fragments and thus searching for the `viewCache` service (deprecated for v4) [#14907](https://github.com/phalcon/cphalcon/issues/14907)\n- Fixed `IN` operator precedence in Volt [#14816](https://github.com/phalcon/cphalcon/issues/14816)\n- Fixed testing suite to work with PHPUnit 9 when we upgrade [#14837](https://github.com/phalcon/cphalcon/issues/14837)\n- Fixed return type hints of the following `Phalcon\\Acl\\AbstractAdapter`'s methods: `getActiveAccess`, `getActiveRole` and `getActiveComponent` [#14974](https://github.com/phalcon/cphalcon/pull/14974)\n- Fixed default value of the following `Phalcon\\Annotations\\Annotation`'s properties: `$arguments` and `$exprArguments` [#14977](https://github.com/phalcon/cphalcon/issues/14977)\n- Fixed return type hints of the following `Phalcon\\Annotations\\Annotation`'s methods: `getArgument`, `getName` and `getNamedArgument` [#14977](https://github.com/phalcon/cphalcon/issues/14977)\n- Fixed incorrect return type hint for `Phalcon\\Http\\Response\\Cookies::setSignKey` [#14982](https://github.com/phalcon/cphalcon/issues/14982)\n- Fixed return type hints for `Phalcon\\Config\\ConfigFactory::load` and `Phalcon\\Config\\ConfigFactory::newInstance` to explicitly indicate the return type as `Phalcon\\Config` instance [#14978](https://github.com/phalcon/cphalcon/issues/14978)\n- Fixed return type hints for the following methods [#14987](https://github.com/phalcon/cphalcon/issues/14987):\n  - `Phalcon\\Dispatcher\\AbstractDispatcher::dispatch`\n  - `Phalcon\\Dispatcher\\DispatcherInterface::dispatch`\n  - `Phalcon\\Filter::get`\n  - `Phalcon\\Http\\Message\\AbstractCommon::cloneInstance`\n  - `Phalcon\\Http\\Message\\AbstractCommon::processWith`\n  - `Phalcon\\Http\\Message\\AbstractMessage::withAddedHeader`\n  - `Phalcon\\Http\\Message\\AbstractMessage::withBody`\n  - `Phalcon\\Http\\Message\\AbstractMessage::withHeader`\n  - `Phalcon\\Http\\Message\\AbstractMessage::withProtocolVersion`\n  - `Phalcon\\Http\\Message\\AbstractMessage::withoutHeader`\n  - `Phalcon\\Http\\Message\\AbstractRequest::withMethod`\n  - `Phalcon\\Http\\Message\\AbstractRequest::withRequestTarget`\n  - `Phalcon\\Http\\Message\\AbstractRequest::withUri`\n  - `Phalcon\\Mvc\\Model\\Binder::findBoundModel`\n  - `Phalcon\\Validation::getEntity`\n  - `Phalcon\\Validation\\ValidationInterface::getEntity`\n- Fixed default value of `Phalcon\\Crypt::$key` to satisfy the interface [#14989](https://github.com/phalcon/cphalcon/issues/14989)\n- Fixed return type hint for `Phalcon\\Di::getInternalEventsManager` [#14992](https://github.com/phalcon/cphalcon/issues/14992)\n- Fixed return type hints of the following `Phalcon\\Flash\\AbstractFlash`'s methods: `error`, `notice`, `success` and `warning` [#14994](https://github.com/phalcon/cphalcon/issues/14994)\n- Fixed return type hint for `Phalcon\\Translate\\InterpolatorFactory::newInstance` [#14996](https://github.com/phalcon/cphalcon/issues/14996)\n- Fixed return type hint for `Phalcon\\Mvc\\Model::sum` [#15000](https://github.com/phalcon/cphalcon/issues/15000)\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\CriteriaInterface::getLimit` and `Phalcon\\Mvc\\Model\\Criteria::getLimit` to follow documentation and original purpose [#15004](https://github.com/phalcon/cphalcon/issues/15004)\n- Fixed return type hint for `Phalcon\\Mvc\\Model::count` and `Phalcon\\Mvc\\ModelInterface::count` to reflect original behavior [#15006](https://github.com/phalcon/cphalcon/issues/15006)\n- Fixed return type hint for `Phalcon\\Mvc\\Model::getEventsManager` to reflect original behavior [#15008](https://github.com/phalcon/cphalcon/issues/15008)\n- Fixed return type hint for `Phalcon\\Mvc\\Model::average` and `Phalcon\\Mvc\\ModelInterface::average` to reflect original behavior [#15013](https://github.com/phalcon/cphalcon/issues/15013)\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\MetaData::getColumnMap` and `Phalcon\\Mvc\\Model\\MetaData::getReverseColumnMap` to reflect original behavior [#15015](https://github.com/phalcon/cphalcon/issues/15015)\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\MetaDataInterface::getColumnMap` and `Phalcon\\Mvc\\Model\\MetaDataInterface::getReverseColumnMap` to reflect original behavior [#15015](https://github.com/phalcon/cphalcon/issues/15015)\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\CriteriaInterface::getColumns` and `Phalcon\\Mvc\\Model\\Criteria::getColumns` to reflect original behavior [#15017](https://github.com/phalcon/cphalcon/issues/15017)\n- Fixed return type hint for `Phalcon\\Db\\Column::getSize` and `Phalcon\\Db\\ColumnInterface::getSize` to reflect original behavior [#15019](https://github.com/phalcon/cphalcon/issues/15019)\n- Fixed return type hint for `Phalcon\\Db\\Column::getAfterPosition` and `Phalcon\\Db\\ColumnInterface::getAfterPosition` to reflect original behavior [#15021](https://github.com/phalcon/cphalcon/issues/15021)\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\Manager::executeQuery` and `Phalcon\\Mvc\\Model\\Manager::ManagerInterface` to reflect original behavior [#15024](https://github.com/phalcon/cphalcon/issues/15024)\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\Resultset::getFirst` and `Phalcon\\Mvc\\Model\\ResultsetInterface::getFirst` to reflect original behavior [#15027](https://github.com/phalcon/cphalcon/issues/15027)\n- Rollback the regression changes for `Phalcon\\Mvc\\Model\\Query::_prepareSelect` to properly prepare a SQL `SELECT` statement from a PHQL one [#14657](https://github.com/phalcon/cphalcon/issues/14657)\n- Fixed `SerializerInterface` usage for `Phalcon\\Mvc\\Model\\Resultset\\Complex::unserialize` as well as `Phalcon\\Mvc\\Model\\Resultset\\Complex::unserialize` [#14942](https://github.com/phalcon/cphalcon/issues/14942)\n\n## Removed\n- Removed `Phalcon\\Translate\\InterpolatorFactory::$mapper` as well as `Phalcon\\Translate\\InterpolatorFactory::$services` in favor of `Phalcon\\Factory\\AbstractFactory` ones [#15036](https://github.com/phalcon/cphalcon/issues/15036)",
            "get": "https://pecl.php.net/get/phalcon-4.0.6",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "4.0.5": {
            "version": "4.0.5",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2020-03-07T20:53:55+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-4.0.md\n\n# [4.0.5]\n## Added\n\n## Changed\n\n## Fixed\n- Fixed `Phalcon\\Db::fetchAll` to correctly return data when `Enum::FETCH_COLUMN` is supplied. [#13321](https://github.com/phalcon/cphalcon/issues/13321)\n- Fixed Postgres NULL values to not be required during model update. [#14862](https://github.com/phalcon/cphalcon/issues/14862)\n- Fixed MySQL alter column when default value contains not only CURRENT_TIMESTAMP [#14880](https://github.com/phalcon/cphalcon/issues/14880)\n- Fixed MySQL default value with ON UPDATE expression [#14887](https://github.com/phalcon/cphalcon/pull/14887)\n- Fixed `Str::dirFromFile()` to replace `.` with `-` to avoid issues with Windows environments [#14858](https://github.com/phalcon/cphalcon/issues/14858)",
            "get": "https://pecl.php.net/get/phalcon-4.0.5",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "4.0.4": {
            "version": "4.0.4",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2020-02-15T22:16:25+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-4.0.md\n\n# [4.0.4]\n## Added\n- Added a way to utilize GitHub actions to run database tests against each RDBMS and reworked the testing suite. [#14779](https://github.com/pha$\n- Added the latest version of Codeception (v4) and utilized the phalcon4 module. [#14779](https://github.com/phalcon/cphalcon/issues/14779)\n\n## Changed\n- Changed Column 'notNull' definition to make possible create nullable (NULL) columns [#14804](https://github.com/phalcon/cphalcon/pull/14804)\n\n## Fixed\n- Fixed `Phalcon\\Db\\Adapter\\Pdo\\Postgresql` to correctly identify `bool` fields instead of treating them as `tinyint` [#14722](https://github.co$\n- Fixed `Phalcon\\Cli\\Console` to pass current container to the `Phalcon\\Mvc\\ModuleDefinitionInterface::registerAutoloaders()` [#14787](https://g$\n- Fixed `Phalcon\\Db\\Dialect\\Mysql::createTable()` to create default value with CURRENT_TIMESTAMP ON UPDATE/DELETE [#14797]\n- Fixed `Phalcon\\Storage\\Adapter\\*` to no longer accept the `serializer` option as it was clashing with the factory [#14828](https://github.com/$\n- Fixed `Phalcon\\Http\\Request` to return the correct host on an `UnexpectedValueException` [#14763](https://github.com/phalcon/cphalcon/issues/1$\n- Fixed `Phalcon\\Assets\\Collection` to initialize `position` to 0 [#14848](https://github.com/phalcon/cphalcon/pull/14848)",
            "get": "https://pecl.php.net/get/phalcon-4.0.4",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "4.0.3": {
            "version": "4.0.3",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2020-01-25T22:30:51+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-4.0.md\n\n# [4.0.3]\n## Fixed\n- Fixed `Phalcon\\Db\\Adapter\\Pdo\\Mysql` Tinyint(1) is handled as boolean under MySql [#14708](https://github.com/phalcon/cphalcon/issues/14708)\n- Fixed `Phalcon\\Mvc\\View\\Engine\\Volt` to produce the correct order of variables for the `join` filter [#14771](https://github.com/phalcon/cphalcon/issues/14771)\n- Fixed `Phalcon\\Storage\\Adapter\\Stream::getKeys()` bug in the absence of a directory with a prefix name [#14725](https://github.com/phalcon/cphalcon/issues/14725), [#14721](https://github.com/phalcon/cphalcon/pull/14721)\n- Fixed `Phalcon\\Debug::onUncaughtException` Should accept `\\Throwable` instead of `\\Exception` as an argument [#14738](https://github.com/phalcon/cphalcon/pull/14738)\n- Fixed `Phalcon\\Validation\\ValidatorFactory` Should return Phalcon\\Validation\\ValidatorInterface [14749](https://github.com/phalcon/cphalcon/pull/14749)\n- Fixed `Phalcon\\Mvc\\Model\\Binder` to now correctly call `has` and `set` on the cache object [#14743](https://github.com/phalcon/cphalcon/pull/14743)\n- Fixed `Phalcon\\Session\\Adapter\\Stream` and `Phalcon\\Storage\\Adapter\\Stream` to correctly handle simultaneous read/write [#14694](https://github.com/phalcon/cphalcon/issues/14694)\n- Fixed `Phalcon\\Config\\ConfigFactory` to always add the correct extension [#14756](https://github.com/phalcon/cphalcon/issues/14756)",
            "get": "https://pecl.php.net/get/phalcon-4.0.3",
            "SPDX-License-Identifier": "BSD-3-Clause"
        },
        "4.0.2": {
            "version": "4.0.2",
            "state": "stable",
            "license": "BSD 3-Clause License",
            "releasedBy": "ruudboon",
            "releaseDate": "2020-01-11T23:44:56+00:00",
            "releaseNotes": "Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-4.0.md\n\n# [4.0.2]\n## Added\n\n## Changed\n- Changed the logic when logging times for `Phalcon\\Logger` to use `DateTimeImmutable` so as to handle microseconds if necessary. [#2893](https://github.com/phalcon/cphalcon/issues/2893)\n- Changed `Phalcon\\Http\\Cookie::send` and `Phalcon\\Http\\Cookie::delete` to allow for `samesite` to be passed in the `options` when using PHP > 7.3 [#14627](https://github.com/phalcon/cphalcon/issues/14627)\n\n## Fixed\n- Fixed `Phalcon\\Mvc\\Model\\Criteria` Di isn't set when using `Criteria::fromInput()` [#14538](https://github.com/phalcon/cphalcon/issues/14639)\n- Fixed `Phalcon\\Db\\Dialect\\Mysql` removing unnecessary parentheses for `double` and `float` [#14645](https://github.com/phalcon/cphalcon/pull/14645) [@pfz](https://github.com/pfz)\n- Fixed `Phalcon\\Http\\Cookie::delete` to parse the correct parameters - cannot use alternative syntax until PHP 7.3 [#14643](https://github.com/phalcon/cphalcon/issues/14643)\n- Fixed `Phalcon\\Mvc\\Model::__isset` to take into account non visible properties by checking the getter if it exists [#13518](https://github.com/phalcon/cphalcon/issues/13518) [#13900](https://github.com/phalcon/cphalcon/issues/13900)\n- Fixed `Phalcon\\Mvc\\Model::__set` to return a more informative message if we are tying to access a non visible property [#13518](https://github.com/phalcon/cphalcon/issues/13518) [#13900](https://github.com/phalcon/cphalcon/issues/13900)\n- Fixed `Phalcon\\Mvc\\Model\\Resultset\\Simple::toArray` to correctly process virtual fields [#14669](https://github.com/phalcon/cphalcon/issues/14669)\n- Fixed `Phalcon\\Session\\Manager::getUniqueKey` to prefix the key only if `uniqueId` is present [#14688](https://github.com/phalcon/cphalcon/issues/14688)\n- Fixed `Phalcon\\Db\\Adapter\\Pdo::describeColumns` to correctly detect ENUM columns [#14691](https://github.com/phalcon/cphalcon/issues/14691)",
            "get": "https://pecl.php.net/get/phalcon-4.0.2",
            "SPDX-License-Identifier": "BSD-3-Clause"
        }
    },
    "summary": "Phalcon is a full stack PHP framework offering low resource consumption and high performance.",
    "SPDX-License-Identifier": "BSD-3-Clause"
}