{
    "category": "Database",
    "deprecated": false,
    "description": "This extension provides a CUBRID driver for PDO.",
    "latestReleaseDate": "2017-12-01T01:29:53+00:00",
    "latestVersion": "10.1.0.0004",
    "license": "PHP",
    "name": "PDO_CUBRID",
    "php8Mentioned": false,
    "releases": {
        "10.1.0.0004": {
            "version": "10.1.0.0004",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2017-12-01T01:29:53+00:00",
            "releaseNotes": "1) APIS-762 bug patch (core dumped while calling cci_parepare on PHP 7.1.x environment)",
            "get": "http://pecl.php.net/get/PDO_CUBRID-10.1.0.0004",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "10.1.0.0003": {
            "version": "10.1.0.0003",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2017-11-27T04:52:18+00:00",
            "releaseNotes": "1) APIS-762 bug patch (core dumped while calling cci_parepare on PHP 7.1.x environment)",
            "get": "http://pecl.php.net/get/PDO_CUBRID-10.1.0.0003",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "10.1.0.0002": {
            "version": "10.1.0.0002",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2017-11-27T04:47:34+00:00",
            "releaseNotes": "1) APIS-762 bug patch (core dumped while calling cci_parepare on PHP 7.1.x environment)",
            "get": "http://pecl.php.net/get/PDO_CUBRID-10.1.0.0002",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "10.1.0.0001": {
            "version": "10.1.0.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2017-08-08T02:09:28+00:00",
            "releaseNotes": "1) Support cubrid engine version up to 10.1.0\n2) Support PHP version 7 (7.1.x)",
            "get": "http://pecl.php.net/get/PDO_CUBRID-10.1.0.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "9.3.0.0002": {
            "version": "9.3.0.0002",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2015-01-14T20:24:40+00:00",
            "releaseNotes": "1) Update cci to 9.3.0.0206",
            "get": "http://pecl.php.net/get/PDO_CUBRID-9.3.0.0002",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "9.3.0.0001": {
            "version": "9.3.0.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2014-05-15T06:09:50+00:00",
            "releaseNotes": "Support cubrid engine version up to 9.3",
            "get": "http://pecl.php.net/get/PDO_CUBRID-9.3.0.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "9.2.0.0001": {
            "version": "9.2.0.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2013-09-27T02:25:40+00:00",
            "releaseNotes": "Fixed bugs:\n1) APIS-634 - PDO Cannot connect to the shard db in PDO driver",
            "get": "http://pecl.php.net/get/PDO_CUBRID-9.2.0.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "9.1.0.0003": {
            "version": "9.1.0.0003",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2013-07-23T02:26:59+00:00",
            "releaseNotes": "Fixed bugs:\n1)[APIS-120] - [PHP]Return value is not correct when passing a date parameter to cubrid_bind method\n2)[APIS-121] - [PHP]Return value is not false when passing a invalid time to cubrid_bind method\n3)[APIS-358] - [PHP] Create table failed when using default timestamp '2038-01-19 12:14:07'\n4)[APIS-364] - [PHP][Windows] the export lob file from db is not correct after import the lob fie into db successfully\n5)[APIS-513] - [PHP Static] Cas error code is not expected in Windows\n6)[APIS-553] - Manual page for cubrid_close_request() should be edited\n7)[APIS-554] - cubrid_connect_with_url example does not have updated connection url\n8)[APIS-556] - cubrid_fetch CUBRID_LOB tries to allocate 4 billion bytes\n9)[APIS-557] - cubrid_lob2_seek64 example does not work properly\n10)[APIS-558] - [PHP]some bug about document\n11)[APIS-560] - Cannot load PHP API 9.1.0.0003 in CentOS 5.6: undefined symbol: pthread_create in Unknown on line 0\n12)[APIS-562] - Cannot execute DELETE query in CUBRID SHARD via PHP API\n13)[APIS-583] - [PHP] The cubrid_get_class_name() function throws a warning if select data from a system table\n14)[APIS-586] - [PHP] cubrid_bind() doesn't work properly when insert bit data\n15)[APIS-587] - [PHP] cubrid_bind() doesn't support select bit data from a prepared statement\n16)[APIS-596] - [PHP][Manual] The 'test_lob' table which is not created initially may lead some misunderstandings\nChanged and Enhanced Features:\n1)[APIS-549] - Warnings during PHP/PDO API build via PECL\n2)[APIS-555] - support Collection Data Types in Pdo driver\n3)[APIS-559] - Compile PHP/PDO drivers from together with CCI source code instead of including the entire CCI binary.\n4)[APIS-584] - [PHP][Manual] Some 'Example' codes about the driver in php.net are somewhat confused\n5)[APIS-580] - Support CCI connection string parameters like altHosts, loadBalance in PHP/PDO",
            "get": "http://pecl.php.net/get/PDO_CUBRID-9.1.0.0003",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "9.1.0.0002": {
            "version": "9.1.0.0002",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2013-06-11T04:59:43+00:00",
            "releaseNotes": "Fixed bugs:\n1) APIS-546: The PDO driver does not support for the connection between the PDO and CUBRID shard broker.\n2) APIS-550: The PDO driver does not support prepare and query function in CUBRID shard db.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-9.1.0.0002",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "9.1.0.0001": {
            "version": "9.1.0.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2013-03-15T06:40:01+00:00",
            "releaseNotes": "Changed and Enhanced Features:\n\n1) APIS-418: add the ENUM support in PDO driver.\n2) APIS-404: update the urls in README.\n3) APIS-435: use cci_get_last_insert_id() instead of cci_last_insert_id().\n\nFixed bugs:\n\n1) APIS-392: change the phpinfo field from 'Supported CUBRID server' to 'CCI Version' and fix its value.\n2) APIS-401: improve the invoking of cci_disconnect.\n3) APIS-435: remove free() in the insert_id function for Windows platform.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-9.1.0.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "8.4.3.0001": {
            "version": "8.4.3.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2012-11-16T04:17:51+00:00",
            "releaseNotes": "Changed and Enhanced Features:\n\n1) APIS-287: Use cci_connect_ex instead of cci_connect in PDO driver.\n2) APIS-288: Use CCI funciton cci_escape_string() to implement PDO::quote",
            "get": "http://pecl.php.net/get/PDO_CUBRID-8.4.3.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "9.0.0.0001": {
            "version": "9.0.0.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2012-10-14T07:34:59+00:00",
            "releaseNotes": "Fixed bugs:\n\n- Use CCI funciton cci_escape_string() to implement PDO::quote\n- Get correct lock_timeout value when it has been set.\n- Update error code in handle error function in PDO driver\n- Use cci_connect_ex instead of cci_connect in PDO driver.\n- Use old functions in pdo driver because CUBRID does not export them.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-9.0.0.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "8.4.0.0002": {
            "version": "8.4.0.0002",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2011-06-30T04:42:07+00:00",
            "releaseNotes": "Fixed bugs:\n\n- Fix a bug in cubrid_stmt_next_rowset: new version cci_next_result will reuse the request handle, so do not close it before calling cci_next_result. \n- Fix a bug about life cycle management of pdo_cubrid_stmt: when database connection is closed, all request handle will be closed in CCI too. So the handle in pdo_cubrid_stmt must be set to invalid value.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-8.4.0.0002",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "8.4.0.0001": {
            "version": "8.4.0.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2011-05-09T04:16:13+00:00",
            "releaseNotes": "2008 R4.0 Release\n\nThis release is a major release.\n\nFunctionality added:\n\n- Implement PDO API getColumnMeta:\n\nThe following column meta information will be returned:\n\ntype\nname\ntable\ndef\nprecision\nscale\nnot_null\nauto_increment\nunique_key\nmultiple_key\nprimary_key\nforeign_key\nreverse_index\nreverse_unique\n\nChanged and Enhanced Features:\n\n- Add database parameter setting support:\n\ncubrid_set_db_parameter() can be used to set the database transaction isolation\nlevel and lock timeout value. \n\n- Change the default status of auto commit mode to off.\n\nFixed bugs:\n\n- Fix a bug in cubrid_bind: When the value of binding parameter is NULL, it will covert the value to empty string;\n- Fix a bug about BLOB/CLOB: When inserting LOB data, if the data size is large enough, it will fails. And if the LOB data is in a file, and it is too large to be put into memory, you can bind a file path name when binding the LOB data;\n- Fix a bug about CLOB: When binding data type is CLOB, it will fail when inserting it into CUBRID;\n- Fix a bug in cubrid_stmt_describe_col which will cause the failure of test bug_44861.phpt;\n- Fix a bug in cubrid_handle_quoter: Before escaping unquoted string, it should init the value of quotedlen to 0.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-8.4.0.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "8.3.1.0003": {
            "version": "8.3.1.0003",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2011-04-08T03:49:04+00:00",
            "releaseNotes": "Fixed bugs:\n\n- fix a bug about BLOB/CLOB: When inserting LOB data, if the data size is large\nenough, it will fails. If the LOB data is in a file, and it is too large to be\nput into memory, you can bind a file path name when binding the LOB data.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-8.3.1.0003",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "8.3.1.0002": {
            "version": "8.3.1.0002",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2011-03-07T22:05:56+00:00",
            "releaseNotes": "Fixed bugs:\n\n- Fix a bug in cubrid_handle_quoter: Before escaping unquoted string, it should init the value of quotedlen to 0;",
            "get": "http://pecl.php.net/get/PDO_CUBRID-8.3.1.0002",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "8.3.1.0001": {
            "version": "8.3.1.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2011-02-21T04:43:57+00:00",
            "releaseNotes": "2008 R3.1 Release\n\nThis release is a major release. CUBRID 3.1 Stable has been released. Several new \nfeatures have been added to this version including new BLOB and CLOB data types and \nnew APIs in JDBC/CCI which can get foreign key information. Accordingly new features \nare added in this CUBRID PDO version, and some bugs have been fixed.\n\nFeatures Added:\n\n- Add LOB (BLOB/CLOB) data support:\n\nThe LOB in PDO is represented as a stream, so you can insert LOBs by binding a stream, \nand get LOBs by reading a stream returned by CUBRID PDO.\n\nKnown issue: If column data type is CLOB, binding parameter will fail. This bug will \nfixed later.\n\n- Add Multipy-Query support:\n\nNow you can execute multiple queries and get results using PDOStatement->nextRowset.\n\n- Add three new schema type integer constants for cubrid_schema, which can be used to \nget foreign key information: \n\nCUBRID_SCH_IMPORTED_KEYS\nCUBRID_SCH_EXPORTED_KEYS\nCUBRID_SCH_CROSS_REFERENCE\n\nFeatures changed:\n\n- In version 8.3.0, the default value of autocommit mode is false. In this release it \nis changed to true.\n\nFeatures removed:\n\n- Remove constant CUBRID_INCLUDE_OID, because there is no methods in PDO using OID;\n\nFixed bugs:\n\n- Fix a bug in cubrid_handle_preparer which makes user can change cursor type to scrollable cursor when preparing SQL; \n- Fix a bug in cubrid_handle_prepare: when binding parameter is named parameter, there will be memory leak; \n- Fix a bug in cubrid_handle_quoter: when escaping single quote in string, it should use double single quotes, not backslash;\n- Fix a bug in cubrid_handle_begin, cubrid_handle_commit and cubrid_handle_rollback: when beginning a transaction, it should commit un-commited transaction, turn off autocommit_mode, after commit or rollback, then restore the autocommit_mode;\n- Fix a bug in cubrid_stmt_param_hook: when the value of binding parameter is NULL, it will covert the value to empty string;\n- Fix a bug about cursor type: the cursor type (forward only or scrollable) should be statement attribute, not connection attribute.\n- Fix a bug in cubrid_schema: After array_init(return_value), when error occures, it should destroy array before return false.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-8.3.1.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        },
        "8.3.0.0001": {
            "version": "8.3.0.0001",
            "state": "stable",
            "license": "PHP",
            "releasedBy": "cubrid",
            "releaseDate": "2010-11-08T04:37:59+00:00",
            "releaseNotes": "This PECL release is the first release of CUBRID PDO Driver.",
            "get": "http://pecl.php.net/get/PDO_CUBRID-8.3.0.0001",
            "SPDX-License-Identifier": "PHP-3.01"
        }
    },
    "summary": "CUBRID driver for PDO",
    "SPDX-License-Identifier": "PHP-3.01"
}