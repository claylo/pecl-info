<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release
    http://pear.php.net/dtd/rest.release.xsd">
 <p xlink:href="/rest/p/phalcon">phalcon</p>
 <c>pecl.php.net</c>
 <v>5.0.0alpha3</v>
 <st>alpha</st>
 <l>BSD 3-Clause License</l>
 <m>ruudboon</m>
 <s>Phalcon is a full stack PHP framework offering low resource consumption and high performance.</s>
 <d>Phalcon is an open source full stack framework for PHP, written as a C-extension. Phalcon is optimized for high performance. Its unique architecture allows the framework to always be memory resident, offering its functionality whenever its needed, without expensive file stats and file reads that traditional PHP frameworks employ.</d>
 <da>2021-07-02 13:05:36</da>
 <n>Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md

## Changed
- Changed version format to allow alpha/beta/RC releases on PECL.
- Changed:
  - `Phalcon\Mvc\Model\Resultset\Complex::__construct` now accepts `Psr\SimpleCache\CacheInterface` for the cache
  - `Phalcon\Mvc\Model\Resultset\Simple::__construct` now accepts `Psr\SimpleCache\CacheInterface` for the cache
  - `Phalcon\Mvc\Model\Resultset::__construct` now accepts `Psr\SimpleCache\CacheInterface` for the cache
  - `Phalcon\Mvc\Model\Resultset::getCache` now returns `Psr\SimpleCache\CacheInterface` [#15471](https://github.com/phalcon/cphalcon/issues/15471)
- Changed `Phalcon\Db\Adapter\AbstractAdapter:delete()` signature of optional parameters. [#15363](https://github.com/phalcon/cphalcon/issues/15363)
- Changed `bindCounts` argument to array type in:
  - `Phalcon\Db\Dialect:getColumnList()`
  - `Phalcon\Db\Dialect:getSqlColumn()`
  - `Phalcon\Db\Dialect:getSqlExpression()`
  - `Phalcon\Db\Dialect:getSqlExpressionBinaryOperations()`
  - `Phalcon\Db\Dialect:getSqlExpressionCase()`
  - `Phalcon\Db\Dialect:getSqlExpressionCastValue()`
  - `Phalcon\Db\Dialect:getSqlExpressionConvertValue()`
  - `Phalcon\Db\Dialect:getSqlExpressionFunctionCall()`
  - `Phalcon\Db\Dialect:getSqlExpressionGroupBy()`
  - `Phalcon\Db\Dialect:getSqlExpressionHaving()`
  - `Phalcon\Db\Dialect:getSqlExpressionJoins()`
  - `Phalcon\Db\Dialect:getSqlExpressionLimit()`
  - `Phalcon\Db\Dialect:getSqlExpressionList()`
  - `Phalcon\Db\Dialect:getSqlExpressionObject()`
  - `Phalcon\Db\Dialect:getSqlExpressionOrderBy()`
  - `Phalcon\Db\Dialect:getSqlExpressionScalar()`
  - `Phalcon\Db\Dialect:getSqlExpressionUnaryOperations()`
  - `Phalcon\Db\Dialect:getSqlExpressionWhere()`
  - `Phalcon\Db\DialectInterface:getSqlExpression()`

## Fixed
- Fixed `Phalcon\Db\Adapter\AbstractAdapter:delete()` when `bindTypes` argument is passed. [#15363](https://github.com/phalcon/cphalcon/issues/15363)
- Fixed `Phalcon\Storage\Adapter\Redis::getAdapter` to use passed `connectionTimeout`, `retryInterval` and `readTimeout` options for the connection [#15484](https://github.com/phalcon/cphalcon/issues/15484)
- Fixed `Phalcon\Mvc\View\Engine\Volt\Compiler` for a use case when a block will return null vs an array for `statementList` in PHP 8 [#15556](https://github.com/phalcon/cphalcon/issues/15556)</n>
 <f>932722</f>
 <g>https://pecl.php.net/get/phalcon-5.0.0alpha3</g>
 <x xlink:href="package.5.0.0alpha3.xml"/>
</r>