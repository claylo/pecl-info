<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release
    http://pear.php.net/dtd/rest.release.xsd">
 <p xlink:href="/rest/p/pecl_http">pecl_http</p>
 <c>pecl.php.net</c>
 <v>2.3.0RC1</v>
 <st>beta</st>
 <l>BSD, revised</l>
 <m>mike</m>
 <s>Extended HTTP Support</s>
 <d>This HTTP extension aims to provide a convenient and powerful 
set of functionality for one of PHPs major applications.

It eases handling of HTTP urls, headers and messages, provides 
means for negotiation of a client's preferred content type, 
language and charset, as well as a convenient way to send any 
arbitrary data with caching and resuming capabilities.

It provides powerful request functionality with support for
parallel requests.

Documentation:
v1: http://php.net/http
v2: http://devel-m6w6.rhcloud.com/mdref/http

Code Coverage:
v1: http://dev.iworks.at/ext-http/lcov_html/ext/http/
v2: http://dev.iworks.at/ext-http/lcov/ext/http/</d>
 <da>2015-02-19 03:31:37</da>
 <n>+ Preliminiary HTTP2 support for http\Client (libcurl with nghttp2 support)
+ Improved performance of HTTP info parser (request/response line)
+ Improved performance of updating client observers
+ Improved performance of http\Env\Response output to streams
+ Improved the error messages of the header parser
+ Added http\Header\Parser class
+ Added http\Client::configure() method accepting an array with the following options for libcurl:
  . maxconnects (int, size of the connection cache)
  . max_host_connections (int, max number of connections to a single host, libcurl &gt;= 7.30.0)
  . max_pipeline_length (int, max number of requests in a pipeline, libcurl &gt;= 7.30.0)
  . max_total_connections (int, max number of simultaneous open connections of this client, libcurl &gt;= 7.30.0)
  . pipelining (bool, whether to enable HTTP/1.1 pipelining)
  . chunk_length_penalty_size (int, chunk length threshold for pipelining, libcurl &gt;= 7.30.0)
  . content_length_penalty_size (int, size threshold for pipelining, libcurl &gt;= 7.30.0)
  . pipelining_server_bl (array, list of server software names to blacklist for pipelining, libcurl &gt;= 7.30.0)
  . pipelining_site_bl (array, list of server host names to blacklist for pipelining, libcurl &gt;= 7.30.0)
  . use_eventloop (bool, whether to use libevent, libcurl+libevent)
+ Added http\Client::getAvailableOptions() and http\Client::getAvailableConfiguration() methods
+ Added support for HTTP2 if libcurl was built with nghttp2 support.
+ Added http\Client\Curl\HTTP_VERSION_2_0 constant (libcurl &gt;= 7.33.0)
+ Added http\Client\Curl\TLS_AUTH_SRP constant (libcurl &gt;= 7.21.4)
+ Added pinned_publickey SSL request option (libcurl &gt;= 7.39.0)
+ Added tlsauthtype, tlsauthuser and tlsauthpass SSL request option (libcurl &gt;= 7.21.4)
+ Added verifystatus (a.k.a OCSP) SSL request option (libcurl &gt;= 7.41.0)
+ Added proxyheader request option (libcurl &gt;= 7.37.0)
+ Added unix_socket_path request option (libcurl &gt;= 7.40.0)
* Fixed compress request option
* Fixed parsing authorities of CONNECT messages
* Fixed parsing Content-Range messages
* Fixed http\Env\Response to default to chunked encoding over streams
* Fixed superfluous output of Content-Length:0 headers
* Fixed persistent easy handles to be only created for persistent multi handles
* Fixed the header parser to accept not-yet-complete header lines
* Fixed http\Message::toStream() crash in ZTS mode
* Fixed the message stream parser to handle intermediary data bigger than 4k
* Fixed the message stream parser to handle single header lines without EOL
* Fixed http\Message\Body to not generate stat based etags for temporary streams
- Deprecated http\Client::enablePipelining(), use http\Client::configure([&quot;pipelining&quot; =&gt; true]) instead
- Deprecated http\Client::enableEvents(), use http\Client::configure([&quot;use_eventloop&quot; =&gt; true]) instead
- Removed the cookies entry from the transfer info, wich was very slow and generated a Netscape formatted list of cookies
- Changed the header parser to reject illegal characters</n>
 <f>188034</f>
 <g>http://pecl.php.net/get/pecl_http-2.3.0RC1</g>
 <x xlink:href="package.2.3.0RC1.xml"/>
</r>